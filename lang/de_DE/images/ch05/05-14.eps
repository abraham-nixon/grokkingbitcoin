%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 05-14.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Volker Herminghaus
%%CreationDate: 11/30/19
%%BoundingBox: 0 0 294 141
%%HiResBoundingBox: 0 0 293.8340 140.9419
%%CropBox: 0 0 293.8340 140.9419
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x409 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">05-14</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2019-11-30T09:47:12+01:00</xap:CreateDate>
         <xap:ModifyDate>2019-11-30T09:47:12+01:00</xap:ModifyDate>
         <xap:MetadataDate>2019-11-30T09:47:12+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>124</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAfAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYqx38wdQ&#xA;1zT/ACndXmhrM+oxS2pRbaA3UpjN1Es/GEJKW/cl+ik9xirzDzr+c35i6K2o3NrpFtDp31tIdHF7&#xA;Y6kly9uLWW4kuJEkFtEyfu6vxkDQqGLocKWS6f52/MuXyfrOqXWkQLqttfJBYW0FnqEhW0adI3me&#xA;FghuuERaUG1kZXGwIOBDF7T8zvzmt7D0ZvL1xd3MFhbTvcy6Pfc5J3aETRqsLRRvJxmc8aRqnHdj&#xA;RgClknnjzl+Zdjr2oWGkaVIdGFoBb6jb6fcXd1HPLbTSepHxZoJDFJGq+mUoWYAsMCGJJ+YP56y6&#xA;FZyRaXcQ6rbTKZba40W6druFLKeWR5pI/ThjV7lFiWKMK4PE8mB+IpTS6/MX842vJnt9BdY7VtRE&#xA;Vt+ir4x3HpQo9mhnd1arEvycIqEjivKoxQ9S8o32s3/luwu9ajii1SaPldJbx3MEQbkR8MV4kVwm&#xA;1NpFr+vAqb4q7FXYq7FXYq7FWG/mlJ58g0GC48lyEamLlIJYRFHMGiugbcSEOjkfV5JEmNNqKeXw&#xA;1xVgEv5m/nLY6JJeX2lWlubSK6knefT9Q5Ewy20NvASzWkT3Exncj0iY3p8BG9CqF038zfzk1EQ3&#xA;EGkx3Wm6jErvMLK/WKIiAc4LdrT1ZVlMhYM0snFXUrzTspV089/nQul6bNbaPLDc2hK3ekSaXqMv&#xA;KBLJnT1byaSR5nmkUceDh422k5k0KrJo/Ov5nN5W1fUJ9Gih1K31NLWzt4rLUJnhsmmEbzyQERtd&#xA;sifHW1cqw8KEYEJL5F83/m8+oaRaapozRwX80Z1jUL+31LmaWVmz+kiCSG2YyyS/sRw1Qj4XqSVW&#xA;zef/AM6bTUdYtLbRPrttFq8sNpf3un3yRw2ZublYxS0R5LpDFFFxlhjPHl8fLriqXw+fvzstxwtv&#xA;L08a2q3bR2k1jqU6zcpDwmluZXnl4pUlYIzzIHw/CVUKWY+UfOX5mX2v3FrrGixLpq2ckltPDaXt&#xA;qHuoYLSQD1bwr8EslzKiK0asPTNdwwwIYov5k/nibq0uV8tySh4mR9N/Rt3DFLIfq7EmWQlrdoTJ&#xA;MgZ34SCOqr8akFKOH5g/nT+hLm/bRrX1rSztZzBHpOru889xcyxyRQRSNBKWihjUsrKBU158CGxQ&#xA;p3n5g/nXaxXAtNDjvJI5dXelzpmooxW2c/U7eL6v6kbl4+LrIzBJAfTVvUUkqvTfJOp+YNS8vpce&#xA;YLVbTVUnuoJo0ikgR1guJIopUjmZ3VZY0VxVj1qDTAqe4q7FXYq7FXYqxj8zL7zHY+SdQuvLYmOs&#xA;xm3+rfVofrEvFriNZSsfpXNaRFv91NTrQ4q8t1DXPzLvmNnqPluHzBpscr3FtLrel3NweUOnWzxp&#xA;CsNnbUkeeWakk0MYNGT92fhBSil/Mr89F4RN5Yt+TyohuX07VEhij5OHZ0ha6mblRAvBDxryO3RQ&#xA;mmi+dvzavfMenW2p6UNO0p9RMdzPHpd49bZvrSIkjNI3CpgjYzCirzUsOOzBULrn5pfmtaarq9tY&#xA;eVprm0tLuWCxuDpeoESxhJ/SYFHPqLziTlIAo+LoBxYlV2r+Z/zh0/8AL+zuIIbi68wX95frcTrp&#xA;jyyW0UUkgtY47WFfhEojXjLKHAB+KtQcCrrT8wfznk1u3in8uW6aY9+8VwqWOomaO2F7bWwDSuY4&#xA;efozvN6sfONlU9OLUKqvmbzR+Z1h5u1WHTFvZ9IjuLIxSNpUlxbwQNtPHGsEYmuS5oxkSVuIJUqh&#xA;AOKpW/5k/nDf6Peelolxpt4ltcNZuNFvvVuJ0NY0RZHnitqR0blKHEn2Vo2wVeo+R9e1LWdAt7jV&#xA;rSWx1hUUajayWtxapHMw5FIjOP3qpXjzRmUnw6AKn+KuxV2KuxVhP5san5t0/RNOl8sm5W4k1GKK&#xA;+ezgNxItqYpS5IW01NkXmqfELdvxxVgN75t/OC4t7nSrry7BqenzSSRn9KaXeTtPFJqz26Vit447&#xA;bhDaBJCsrIWWjgtvhVf5f8+/nBBZ6XYx+T7XTLVWCyImm6jBDHCbW3mWCGGETcH9WaVOb0jqnFip&#xA;3xVuL8xfzyMEtzLoKJcx2imG0/RWoejJNK1uzO7K8sq/V45nqgqX4MFHLZVLMvM2s+d73ylpL+X1&#xA;mt9fnvbK21MxW80EaCRA1wyG+s52SEFh+9a3bj0IqCMCGKXXnf8AO5dTQxaSq2tre3cL2osLyV5b&#xA;aJlSJp5eEURkdayJJbOUNd12phVboPnr88ZmSyudGjQtJawR3l7p98ZT9YmRZbmQQCC19KJHb4PU&#xA;V/hqRxPIKsg83+bfzd0zzdFpeieX7bU9HlSF/wBJelOAhcEyK3GTjUehJ3FOcdf8oKxt/wAy/wA8&#xA;0s4Jx5bt5nNg1xPFFpmrA/WSt4yRATGFlKG2hV14tyL1VqMuFU91zz3+aOneSbLU7fy+LzXWvNQt&#xA;L21hsbyQcbcXItJkt0dpkSZ4YtyzCjddwcCsb1f85fzS0maGLUdGtbMXd6I4JprG8VVtfXlhd3Dz&#xA;pURqkbvKDRea/D8QOFKlbefPzyfTbNLzy693Pbpp8oVrbUrW7uJ2CPM0j2ywWixq7MjRs21PiRkO&#xA;Ksi8veePzIPmq2bV7Oafy1dwwC5kj0XULZoJ2iuGcxRv6s4Akjjjf1Odahl4Kdwh6zirsVdirsVd&#xA;irsVdirsVdiqAtbmeXV7+FnHoW6QLHGANmYMzsT1+IFRT298VR+KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KoG5up11ixtIzSOWOeaYUFCsXpqNzvXlKOmKo7FXYq7FUDqehaHqptzqmnW1+bR/Vt&#xA;TdQxzGKQftx8w3FtuoxVHYq7FWF6bpyy6dayyXV80kkMbO31683LKCT/AHuKon9Ew/8ALTff9J15&#xA;/wBVcVd+iYf+Wm+/6Trz/qrirv0TD/y033/Sdef9VcVd+iYf+Wm+/wCk68/6q4q79Ew/8tN9/wBJ&#xA;15/1VxV36Jh/5ab7/pOvP+quKu/RMP8Ay033/Sdef9VcVUZbU2tzYyQ3V5yN3AjB7u5kUqzgMGR5&#xA;GUgjxGKp7opD3esTLvHJe0jbbf0reGF/ukjYYqmmKuxV2Kpb5nkli8t6tLE7RypZ3DRyIxVlYRMQ&#xA;ysKEEHoRiqVDR7BLWa6udRu7a3gBaWaS/u1RVAqWZmmAAHviqhaxeVru7is7XzG1xdzxiaG2i1Sd&#xA;5HiIJEiotwWZaA7jbFV9zaeXLW/XTrnzBJBqDp6iWcmp3CTMh5HkI2uAxHwNvTsfDFVGNvJ8phEf&#xA;mcObjj9XC6tMfU5uY14Uufi5SKVFO4p1xVdCvlOb6v6PmUyfW45JrXhqs7erFDX1XjpcfEqcTyI2&#xA;FN8VUPrnkbnHH/i2PnMFMKfpiWrh1Vk4j6zvyV1Ip1BHjiq5LjyU9slynmpWtpJBBHONXlKNKRUR&#xA;q31mhah+z1xVabzyKGkU+bYw0JcTD9MS1Qxq7OG/0nbisTk16BT4HFUfHZCx17SxBeXM0VwJSwku&#xA;Z5o2X0mZfhkkkXqKg4qyfFXYqlbUl80RcRvZWMnqHb/j7mTh/wBQjYqmmKuxV2KuxV2KuxViukf8&#xA;cmy/5h4v+IDFUZirsVdirsVdirsVdiqB1SSOL6lJIwSNLuBndjQABwSScVTnyzE6aHbPIpSW6D3k&#xA;0Z2KSXbtcSJv/K8pGKpnirsVdiqV+a/+UX1j/mBuf+TLYqh7jSItX0i5sJZHhEjxussfEsrwussb&#xA;UYMpo6CoIoemKpXpv5fx6Zqo1eOc6hdxIzQQ3BaGMXMs9zPLPWLkgJN/OB+6PFTQHrVVS138vpvM&#xA;Woz6hqVwto09kdPe2ty0w9IrMOSyMIhyP1lusZpTbqcVQ9h+Wmppzu73XC2rzyme7ure3SON5Eob&#xA;d1iYv6fpstaA/F38cVXaJ+WE2iPbJputSwWVqrRx23pcyscxtmnVZHdmHqvaBu9OTYqtf8pLBY7O&#xA;K3v5EjtLiS4USRrIeJEUcES7qOMEECRqGDA0qRXFVXSvyzl0u29K11iQu91b3s8k0QlLSW32VXk/&#xA;JEoF+CvFd+IHI4qqv+Wdg+l3Nm8yPNdaqdYmunhDku0/rmLizmiGpQgbFSwp8RqqnGpf8pLpH/Pb&#xA;/k0+Kp3irsVSrR/39/ql+d1ecWsD+MVqvFh/sbhpsVTXFXYq7FXYq7FXYqxXSP8Ajk2X/MPF/wAQ&#xA;GKozFXYq7FXYq7FXYq7FUh83Kk9vp+nNX/clf29qwFAfTZuU2/b90rUPjTFWeYq7FXYq7FUr81/8&#xA;ovrH/MDc/wDJlsVQuKuxV2KuxV2KuxV2KuxVDj/jvaV/rzf8mWxVk2KoTVr8afp1xecPUeJf3UIN&#xA;DJI3wxxj3dyFHucVdpFgbDTLa0ZhJLEg9eUCnqSt8UshHi7ksfniqLxV2KuxV2KuxV2KsV0j/jk2&#xA;X/MPF/xAYqjMVdirsVdirsVdirsVY9JW912C+629ndw2VqfF/WU3L+45IkfsUbxxVn+KuxV2KuxV&#xA;K/Nf/KL6x/zA3P8AyZbFULirsVdirsVdirsVdirsVQ4/472lf683/JlsVZNiqT3PHUtbitB8VppZ&#xA;W5uu4NyRW3jPY8AfVYdQfTOKpxirsVdirsVdirsVdirFdI/45Nl/zDxf8QGKozFXYq7FXYq7FXYq&#xA;lerakQRp1hKp1S5JjQCjGAcQXmkXwRWBAP2mKj9quKrns7eyg0u0t14ww3dsiAmpoHG5J6k9Se5x&#xA;VldtcwXMImgbnGSyhqEbqxVtjTuMVVcVdirsVSbzbcwLoGqWrNSeXTryWNKHdI4+LmvTYyLiqlir&#xA;zjzFp/mTzZqV9b2dzFbaXYTC0jgml9L6xcBeTKoAPJ+tOW345g5RLISByDo9VHJnmQDUYmveVSfR&#xA;bvytZ6bq3l0yXdgPUl1VCx9VoWYcfVh/ZMdGUlRsRv3wcJxgGPLqjw5YBGePeP8AF7vMeT0PM93r&#xA;sVdirsVdiqFd1j1rTHc0VWnZj7CBicVXecPO8OgadptzBZz6lLq862tlFbRvIQ0sTyJLIiK0npDg&#xA;OfFSwB2B6YqnOkaYunWQg9QzTuxlurlhRppn3eRhvSp6D9kUUbAYqjcVdiqktzA11Jaq1Z4kSWRK&#xA;HZJC6oa9NzG2KquKuxV2KuxViukf8cmy/wCYeL/iAxVR1nVZ7D6nHb231q5vpzbwxlxEoIhknJZi&#xA;G/ZhPbFUP+kfNH/Vmh/6TB/1SxV36R80f9WaH/pMH/VLFXfpHzR/1Zof+kwf9UsVd+kfNH/Vmh/6&#xA;TB/1SxV36R80f9WaH/pMH/VLFUotNFvbXzJfeY4tBQavqKJFczHUGKmOJVVVEfp8B9ivStcVRt9q&#xA;HmYyWNdHiFLyAj/TAanmKD+6xVX8ta158+u29kPLcH6EZZHk1Q3ygpKbmUOgiEZd6KAeg+fgqhPM&#xA;fmv8y7W81xNF0yG6hsZraDTVlsLzlObhoK0kEqo6Irzc5BxVeK1+1sqjNA84+aJdYuYdXsHGlAWy&#xA;Wlylhc2TNJcSrFyf61KVAVnFUWrb+xxVnWKsX85/Zuf+2Jqv/YviqKxVhusadPo9/qGpiyOpaLec&#xA;Lq8tUcRywXNseazxsfka0/VmLPGQSQLB+91mbBKMzIDijLeuoI6hjrweY9dvJr/VFbS/Lsck97JG&#xA;xoRFLR5UUgB2V+FW7dTSuCGCc5XIVFwBjy5Z+ocMbO3v6JhG/wCWiwCa+0az0vmGaNL6yhhZ41VX&#xA;MifCQVpIo67E8T8W2bTZ2/q73Q3H5RTSRxxwaOXlbgi/V4R8XLhQ1Tb4/h3/AGtuuPpX1NLdflAz&#xA;8BBpAfjzKm2hUheTLU1QU/u2PyBboK4+lfUifNvlLyrF5V1mWLRrGOWOxuWjdbaFWVhCxBBC1BBx&#xA;lEUiMjY3TS31rz2+q3dvP5cgisIlQ2t0L9W9Uknlt6fJabbFfpzGcxu81DzN9fsydHiBAuKD62N/&#xA;3D1/3V4YqyHy/qHmVtP01JNIiS3MMCvMLsMQnFQW4ekK0G9K4qxfUPOP5oRGWS10qGS2Gqy2altP&#xA;vmlWyh9dnufTWQeoPTjiMZBUSsxRRWhxVNvKnnLzFdX5tfMGmvbC6umtdNmS2mtlbilxNykFy/Le&#xA;K2/YB3O+xGKs2xVLLf8A5SfUP+YKy/5O3WKpnirsVdirsVYrpH/HJsv+YeL/AIgMVQOvf8dTy5/2&#xA;0ZP+6fd4qnWKuxV2KuxV2KuxVB6h/eWH/Mbb/wDJwYqm/lr/AI48f/GSf/k++KsM80a/+Z8Fxrq6&#xA;DbQzR2stvDpSTWdyWlaYwVIdf3bRIGuOb9iq9K4qu0zzBrV5qVxB5m0/6zoQNp9RebT5LcmeadYx&#xA;JILrjGpjZh8KM7d+2KvRMVYv5z+zc/8AbE1X/sXxVFYql3mP/lHtU/5hJ/8Ak02KpBa+a/Jz6bDD&#xA;NrOnMjQqkkb3MBBBQAqQWzKsOEYlJZtO/KOeD0J9RtJY6cWD6pIxZaIArsZyWVfSUqrbKRUUOD0s&#xA;rk3eWX5V3mpR382q2fNFlVo11AIjmW4+tEuFlHICVnbj9n4txstHZRxIeLy/+S0Vq9qlzYCGQxll&#xA;/STEgwiUJxYz8loLmQfCejUwVFNyTXzZ5s8qy+VdZhh1mxklksblI40uYSzMYWAVQGqSThJFMYxN&#xA;ppb6n+Yj6rdQzaFp8Wnxqv1W4OoSH1GJPL7NszCgpsUHzOYzmN3l15v+v2ddM08NS44gX8xB/cPW&#xA;p+p+GKsh8v3Xm46fpqy6bp6WphgEkq38zSCPitWEZs1Ban7PMfPvirFb/wAy/mkjSPa2qNbfpSW2&#xA;X/QLkzrZRfWGefgSquPTWD0qH947MtfBVH+W/MmtXWqJb+atNFZr42+iXBtmhCMqXM3NvrIjYMY7&#xA;Yf3QahI332VZ/iqWW/8Ayk+of8wVl/ydusVTPFXYq7FXYqxXSP8Ajk2X/MPF/wAQGKobWLaebUdD&#xA;kiQultfPLOw6KhsrmMMf9nIo+nFU1xV2KuxV2KuxV2KoPUP7yw/5jbf/AJODFVa11iPS/LkEvpNc&#xA;3M9xLBZ2kZAeWZ5pCFBagACqWY9lBORlIAWxnIRFrjd+eoY/rU1lYTRj4nsYZZRKF78ZmXi5Uf5A&#xA;5e2Q45DevtYccxuR9v7FZfMnlHUbSN57yzKEh/q9y8QdJEPR0c/C6MKexywSBFhsjIEWEV/iby5/&#xA;1dbP/pIi/wCasKUp85EFbgjp+hNV/wCxfFUVirsVdirsVdirsVdirsVQF7/x0bH/AFbn/qHfFUaN&#xA;Zaw0bSLe2g+uaneW6CztOfphuEal3d6NwjSo5NxPUbEnITnTCc696ncal5y06M3d7Z2l7aJ8U8Nk&#xA;0iTonUlPUqshHh8PzyJnIbkbMTOQ3I29/wCxFtr/AJOvFguH1Cwm4Ult3klhLISKhl5Gqn8csttB&#xA;RKeYvL8jqkep2ju5CoqzxkknYAANhVZb/wDKT6h/zBWX/J26xVM8VdirsVdirDYYZp/LCQw0M0tk&#xA;EjDO0Y5NFQVdQzLv3AqMVYRafl95vt7rRriTUBdrZJy1C1lv7tY5ZGKrwQiNm9NApkWvVvhI4nZV&#xA;MPKWm+a/Lcenafqcv15r27pdTxm4uwsMdgqcmlaONYv9Ji7j4uVetcVZ3irsVdirsVdiqD1D+8sP&#xA;+Y23/wCTgxVIvM9s58t2F20zW9okmoWtzdKCRbC9E0KXLAEGkbkAkHbllObaj3Fozmql0B/QQo6r&#xA;5ZurSzgnsfN4tNFs5JLuJ3pzDyowZgYXgi4ozs6xhAn7JHHCc0QLtmc0QLvZaNP8y6kiXtppEgtb&#xA;tyYHeWGNgjUKyyIzcliYNtSsmxqnSuvOlnLfvdecE5b1zQ7eVvOj0KadLGxfgOVzAAG/34xSRiIf&#xA;8oVk/wCK8A0U2H5PJ+Px+O5PL/RE0TQhpiSeqLfQ9X5PxCKWkaCRuCLsiBmPFey0G+bSMaFO1hGh&#xA;Se5Jk7FXYq7FXYq7FXYq7FUBe/8AHRsf9W5/6h3xVJvM9qjweXmurk2Wn3dpDaSahxVlhkWa2uAj&#xA;CQMlJ0hdPjUrXZga0NGU8MhI8mjLLhkJHluPnX6kPqGi3+hmG+bzX/uGsBElnZ0Z5ZIg5d4m4OFk&#xA;MylYvsUA3A5UocmWIHO2WTLERW/oTzfcKjJorxCZeSepcQKUpXaYBmKsafCED9Ry470wPycy4B02&#xA;Q9FAeT/N100cT2L28VweDPPLBIkS9HNxHHK3IU+ykZbl0Yp1ww0c7FljDRzsEmmdaHp8WnarNYRO&#xA;8kdrpthCjyHk7BJLpasfHbtmzAp2oFCk9wpdirsVdirCxa3N35UFpa3DWl1cWHpQXS/aikeHisg9&#xA;1JrirEoPI+uQ6raajcyi3sbF5bk2tldXE8qBfq7x28XqRAyxu9vIzg0P71lHiVUT5g0nVfMus6Xf&#xA;adE1rBppb6z9cM1q7l5YnUonoyc+CxMdnU1IFeNQVUn07yN5tuION4ggeOM2ciXN28qycxF6t/Gy&#xA;GVhLIYKmNqAVPxHclSrW3krz9azwTq+n3Biv5NUWKS6uVRJZ4LiJoV/cPyiWR4JFG26HYdcUNal+&#xA;WevyrIbe4gdhdcrZGmkiC2pW4kZCWiuat691x+z/AHaKeQbFW5fy981elrSrJayLqbK1vbtdXCxw&#xA;tHcGQPUQMWZ42IPdaUqwPwqoq9/LzVbiXzHexSRwX176P6CjjupBFbtEsRLufq9d5YQxUq4pUbcm&#xA;qqy1LNLKy0azReKW9xaRKpdpKBGVac2AZunUjfFU+8uoj6KiOoZGe4DKRUEGZ6gjFWJXeheXbPzH&#xA;9V0XyrZPqoUTpJMUSGMKdpEiHJBxNNlo42NMshpsdcR2+DhSoTqMBxfj8d6c6b5ovr/nao9tHcWk&#xA;frajqHFvqsaNX0+ALqzcwpZSWA4UbuBlksQG++/IdWUM5lttY5np+P7Uy0ObVJ5pppZjNpxAFs8k&#xA;QieRurOgFCI+y8t269KFoZAB723EZE2eX4+xLvOf2bn/ALYmq/8AYvlTcisVdirsVdirsVdirsVd&#xA;iqAvf+OjY/6tz/1DviqeaZbW9z5es7e5iSe3ltYklhkUOjKYxUMrVBBxUhhcWm6PY63djy95bsLe&#xA;+sKST3946hLYMpPNVBbiOIO8TbdDlsNNjiBI9e4ODYEiIRiCOqf2fma41GCZ4ZIrKCyCpf308bcf&#xA;WYA+nFGXFCFIJ5MaEhaE1pOWIR87bI5jIbbVzKZ6E+qSRSy3rs0Lv/oglQRzemB9qRVCheR6LSoH&#xA;Xc0FeSujbiMjzdb/APKT6h/zBWX/ACdusrbUzxV2KuxV2KsLW0uLzyoLS2uGtbi4sPShuk+1E7w8&#xA;VkX3UmuKsUtPIerQ6tZX08iQ2Vk8tx9Wsp5WdSPQaOCP1YiXjL2zs9WUn1XHT7Sqb6xpF1rmqWF2&#xA;Lbla2dRJa3rSwcXaSORbiL0uXJ0ERWjU+11AqGVYlF+V3mlILWNri3laEqzs1zIoJWGFCP3dsjFS&#xA;8TE0ZZP+LKknFKN1D8t9buYLeNHtVuYLlZ7m/wDXuBJerDHKFW4TgwX1mlX1ODVouxPwhVCsPIWv&#xA;/wC5SSRbO5a/vra6SGSeRQqQXMszr6i2/L44pBCFYNQV+PiFQKp75d8t6np2u317dG3eK49XhMjS&#xA;NOwlnMqJIGAQLChEa0rsBTiNsVZPiqD1D+8sP+Y23/5ODFUZp5uR5VlNry+sf6T6fpgFwfWfdA2x&#xA;bwr3yUKsWwyXwmmMeY9N0kWYjsdJnu57m7V7q9ntpkaOEJxkrLNG8zVhjI5KGPL4vtUzMxSle5rb&#xA;vcDNCNbRJs86P9vJH6b5L1T0BdNerC87JdjTmhDRxygLwjYsz8wiIqAspK0qvHISzi6rytshppVd&#xA;+dfj8dzMrdrhowbhEjl7rGxdfvKp+rMU10c0X1Y35z+zc/8AbE1X/sXwJQ/mLTrnUtHuLO2kEc0v&#xA;AjkWVWCOrtG7J8QWRVKMRvQ4qxbR/JmqaZrser3cxa3tYW9G1tJXcl3muGEJR4wWiiiulRaOP7pS&#xA;V7BVU8x+WNU1+6uru3RFE1m1rafXHmgktJuEytJEsQYMJfXUMT04/tUACqSRfln5pFxZsbqCNrdp&#xA;S14tzIZayy81fgltCGaJfsAMq1+0GWqlSi1/LnVxqGl3kSWdr+j5XnngjuLl4rmRvq6B5A6cgQsD&#xA;vRWA5n4uXxFlC7SPIPmCzttOin+pzNa6kt9OfXlDGMWyQsOawL6jNIvqfGoPwjkzsS2Kp75I8tap&#xA;oaXSX8kMzSrCv1mJpGlnkiDCS4m5gBXkqCVWtN9yKAKsoxVAXv8Ax0bH/Vuf+od8VTBhcN5VsVh9&#xA;UBorVZzBy9UQnh6vDj8VeFfs/F/LvTJ46try3WzFNd0+wjSyi03Q5LpVlmmu7iW2kgLqxLiHk8Zm&#xA;o0zp8VKcRQsAScy8cjvcvtcHLAbcMb+FfDv5p3p3k7VbAxznUUvJ4ZmuI4ZYuMfOZi83xEykFmdi&#xA;JAvMdCSNsqlnB2qm+GnlHe7/ABv/AG82VxGUxqZVVZKfEqksAfYkLX7sxi5QS63/AOUn1D/mCsv+&#xA;Tt1ilM8VdirsVdiqSR+UNNijWOOe7VEAVFFzLQACgHXFV3+FbH/lpvP+kmX+uKsQ8za3o2geYrfR&#xA;5YdTufVgjuZp4LmRjHHLK0XL0+pEfAu5rstTiqFXzz5Ba1e59fWQiUqCLmtKOXYb04xmJlc9jiqi&#xA;PzF/LYtLH9c1b144UuRb/wCkeo8UkkcasgruCZ0IPgfZqKq0Hnr8vZrq1t1utXDXTIiuwuVRGkna&#xA;3UOT0/eIcVZz/hWx/wCWm8/6SZf64q7/AArY/wDLTef9JMv9cVbj8rack8UxluZTC6yosk8jLyU1&#xA;UlSaGmKr08uWkYKxXN3EhZn9NLiQKC7FjQV23OKsA1f8xdD0nXbrS7yHWvStpTH9cjmd1YIUEsio&#xA;DydE50Jj5UIowU0BVbk/M/yL+i01S3vtWuLDlGs1yrz+lEZLn6sVZ/slwyseK1qBtirPk0KJlDG7&#xA;vlJAPE3MlRXsaHFXN5a0+QTCeS4uPXt5bR/Vmd6RT8fUC1OxbgN8VU/8K2P/AC03n/STL/XFXf4V&#xA;sf8AlpvP+kmX+uKsJ1zzPoOjeZptFuYNUljto0knu4LiSTj6kTyLWMGtDw4Vr9pgMVUbjz/+XVvZ&#xA;fXJLrWBDUFjS5qI2eKNJjXb03e5jVT3J+eKrR+YX5ckzRi61c3NtLHBPaj6wZUeVZGHJa9vQevy8&#xA;CCVUZpHm3yHqurWul2t1q3r3nAQSSG5SItJB9YVSx6Hh44qzL/Ctj/y03n/STL/XFXf4Vsf+Wm8/&#xA;6SZf64qvg8sadDcLOXuJXRXVBLM7geopVtifA4q6Ly3bRRJFHd3qxxqFRRcyUCqKAdcVed3H5oeW&#xA;7O/uLa/TWbeCCeWEXXruyskQnrNTkD6bfV/hcVWhryFGoqjofzB8n3Muli1utXlt9WnhtbS6LTxx&#xA;tLcQmaNFL05H7Kt/KTirOf0BF/y23v8A0kyf1xVWsNJt7KaadHllmnVEkkmkaQ8YyxUDkdgDI2Ko&#xA;3FXYq7FXYq7FXYql9x+gvrd39Y+r/W/qi/XOfD1PqfKSnqV39Llz67dcVebeef8AlRlIf0n9Xr9e&#xA;tfrP6NpX1fSb0PrXo/seny41+KlePfFWQr/ypn68eP6D+vfV4a0+rep9X5Rej78a+lT/AGPtiqLj&#xA;/wCVW+pHw/RHqck9OnoV5eu/Cnv6/Kn+VXFWW4q7FXYq7FWD61/ypn9I6l+mf0J9fqn6V+tfV/Ur&#xA;yTj63P34cq+1dsVUrf8A5Uj6UXofoL0vq59Pj9Wp9X+tHl/sfrVa/wCXXvirOLP6r9Ug+qcfqvpr&#xA;9X4fY9PiOHGnbj0xVVxV2KuxVK7v/DX+5D639V/3T+k/U4e3o+tX/heWKvNvNf8AyoT9KaR+kfqn&#xA;H9IT8PqlPqn1znD6n1v0vgrz9L7X0/DXCrKIv+VPfpC89L9CfX/WX67w+r+p61Jac6b8v73/AIb3&#xA;wKjdO/5Vt9dtf0f+i/rnKP6n6Po+pz9AenwpvX0KUp+zirKMVdirsVdirAdQ/wCVIcr/AOvfoLl9&#xA;b/3Iep9Xr9cpNTn/AMW/33vy5d64qvtf+VJ/F9U/QVP9H/ufq1K+m31bjx/4r5cKdumKs7xV2Kux&#xA;V2KuxV2Kv//Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:428EF66AE114EA11A9E1B538B1E7E154</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:438EF66AE114EA11A9E1B538B1E7E154</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:50F73ABAE014EA11A9E1B538B1E7E154</stRef:instanceID>
            <stRef:documentID>uuid:4FF73ABAE014EA11A9E1B538B1E7E154</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01.2x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Arial.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Humanist521BT-BoldCondensed</stFnt:fontName>
                  <stFnt:fontFamily>Humanst521 Cn BT</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 1.01 emb4-OT</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Bitstream - Humanst521 Cn BT  Bold.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Standard-Farbfeldgruppe</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -140.942 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 140.942 li
293.834 140.942 li
293.834 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0.25 29.04 mo
80.3872 29.04 li
80.3872 130.708 li
0.25 130.708 li
0.25 29.04 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0.090196 cmyk
ef
80.3872 130.708 mo
80.3872 130.458 li
0.5 130.458 li
0.5 29.29 li
80.1372 29.29 li
80.1372 130.708 li
80.3872 130.708 li
80.3872 130.458 li
80.3872 130.708 li
80.6372 130.708 li
80.6372 28.79 li
0 28.79 li
0 130.958 li
80.6372 130.958 li
80.6372 130.708 li
80.3872 130.708 li
0.619608 0.537255 0.498039 0.227451 cmyk
f
9.68799 106.098 mo
9.68799 104.895 li
10.3589 104.895 li
11 104.895 11.4839 104.786 11.812 104.536 cv
12.1411 104.286 12.2969 103.942 12.2969 103.458 cv
12.2969 102.989 12.125 102.614 11.7969 102.379 cv
11.4688 102.129 11 102.02 10.3589 102.02 cv
8.54688 102.02 li
8.46875 102.02 8.40625 102.036 8.35889 102.083 cv
8.31201 102.129 8.28076 102.208 8.28076 102.286 cv
8.28076 102.395 8.31201 102.473 8.35889 102.504 cv
8.42188 102.551 8.56201 102.567 8.79688 102.567 cv
9.06201 102.567 li
9.06201 106.098 li
8.56201 106.098 li
8.46875 106.098 8.39111 106.114 8.35889 106.161 cv
8.31201 106.208 8.28076 106.27 8.28076 106.364 cv
8.28076 106.458 8.31201 106.52 8.35889 106.567 cv
8.40625 106.614 8.46875 106.645 8.54688 106.645 cv
10.4688 106.645 li
10.625 106.645 10.7188 106.614 10.7808 106.583 cv
10.8281 106.536 10.8589 106.473 10.8589 106.364 cv
10.8589 106.27 10.8281 106.192 10.7661 106.161 cv
10.7188 106.114 10.625 106.098 10.5 106.098 cv
9.68799 106.098 li
cp
10.4058 102.567 mo
10.812 102.567 11.125 102.645 11.3281 102.801 cv
11.5308 102.942 11.6411 103.176 11.6411 103.473 cv
11.6411 103.786 11.5308 104.02 11.3281 104.161 cv
11.125 104.317 10.812 104.395 10.4058 104.395 cv
9.68799 104.395 li
9.68799 102.567 li
10.4058 102.567 li
cp
0.733333 0.705882 0.654902 0.776471 cmyk
f
14.332 104.864 mo
14.77 104.458 li
14.957 104.489 15.1289 104.567 15.2852 104.723 cv
15.457 104.879 15.6128 105.114 15.7852 105.411 cv
15.9409 105.708 li
16.207 106.192 16.3481 106.458 16.3628 106.489 cv
16.4102 106.551 16.457 106.598 16.4878 106.614 cv
16.52 106.629 16.582 106.645 16.6602 106.645 cv
17.0352 106.645 li
17.1289 106.645 17.1909 106.614 17.2378 106.567 cv
17.2852 106.52 17.3159 106.458 17.3159 106.364 cv
17.3159 106.254 17.2852 106.192 17.2231 106.145 cv
17.1758 106.114 17.0659 106.098 16.9102 106.098 cv
16.832 106.098 li
16.3789 105.254 16.0508 104.723 15.8481 104.473 cv
15.645 104.223 15.4258 104.083 15.1909 104.036 cv
16.707 102.567 li
16.77 102.567 li
16.9102 102.567 17.02 102.551 17.0981 102.504 cv
17.145 102.473 17.1758 102.395 17.1758 102.286 cv
17.1758 102.208 17.1602 102.129 17.1128 102.083 cv
17.0508 102.036 16.9878 102.02 16.9102 102.02 cv
15.7539 102.02 li
15.6602 102.02 15.582 102.036 15.5352 102.083 cv
15.5039 102.114 15.4731 102.192 15.4731 102.286 cv
15.4731 102.395 15.5039 102.458 15.5659 102.504 cv
15.6128 102.551 15.707 102.567 15.832 102.567 cv
15.9731 102.567 li
14.332 104.161 li
14.332 102.567 li
14.52 102.567 li
14.707 102.567 14.8481 102.551 14.9102 102.504 cv
14.9878 102.473 15.02 102.395 15.02 102.286 cv
15.02 102.192 14.9878 102.114 14.9409 102.083 cv
14.8789 102.036 14.7852 102.02 14.6289 102.02 cv
13.2852 102.02 li
13.207 102.02 13.1289 102.036 13.0981 102.083 cv
13.0352 102.129 13.02 102.208 13.02 102.286 cv
13.02 102.395 13.0352 102.473 13.0981 102.504 cv
13.1602 102.551 13.2852 102.567 13.4878 102.567 cv
13.7231 102.567 li
13.7231 106.098 li
13.3481 106.098 li
13.2378 106.098 13.145 106.114 13.0981 106.161 cv
13.0352 106.192 13.02 106.27 13.02 106.364 cv
13.02 106.458 13.0352 106.52 13.0981 106.567 cv
13.1289 106.614 13.207 106.645 13.2852 106.645 cv
14.6289 106.645 li
14.7852 106.645 14.8789 106.614 14.9409 106.583 cv
14.9878 106.536 15.02 106.473 15.02 106.364 cv
15.02 106.27 14.9878 106.192 14.9258 106.161 cv
14.8628 106.114 14.7539 106.098 14.5981 106.098 cv
14.332 106.098 li
14.332 104.864 li
cp
f
19.0078 104.473 mo
20.8828 104.473 li
20.8828 106.098 li
20.6802 106.098 li
20.4922 106.098 20.3672 106.114 20.3052 106.145 cv
20.2271 106.192 20.1948 106.254 20.1948 106.364 cv
20.1948 106.473 20.2271 106.536 20.2891 106.583 cv
20.3359 106.614 20.4771 106.645 20.6802 106.645 cv
21.4922 106.645 li
21.6948 106.645 21.8198 106.614 21.8828 106.583 cv
21.9302 106.536 21.9609 106.473 21.9609 106.364 cv
21.9609 106.254 21.9302 106.192 21.8672 106.161 cv
21.8052 106.114 21.7109 106.098 21.5552 106.098 cv
21.4771 106.098 li
21.4771 102.567 li
21.5859 102.567 li
21.7109 102.567 21.8198 102.551 21.8828 102.504 cv
21.9302 102.473 21.9609 102.395 21.9609 102.286 cv
21.9609 102.192 21.9302 102.129 21.8828 102.083 cv
21.8359 102.036 21.7578 102.02 21.6641 102.02 cv
20.7109 102.02 li
20.4771 102.02 20.3359 102.036 20.2891 102.083 cv
20.2271 102.114 20.1948 102.192 20.1948 102.286 cv
20.1948 102.395 20.2271 102.458 20.2891 102.504 cv
20.3521 102.551 20.4609 102.567 20.6172 102.567 cv
20.8828 102.567 li
20.8828 103.926 li
19.0078 103.926 li
19.0078 102.567 li
19.1802 102.567 li
19.3672 102.567 19.5078 102.551 19.5859 102.504 cv
19.6479 102.473 19.6802 102.395 19.6802 102.286 cv
19.6802 102.192 19.6641 102.114 19.6021 102.083 cv
19.5552 102.036 19.4141 102.02 19.1948 102.02 cv
18.2271 102.02 li
18.1172 102.02 18.0391 102.036 17.9922 102.083 cv
17.9448 102.129 17.9302 102.192 17.9302 102.286 cv
17.9302 102.395 17.9609 102.473 18.0078 102.504 cv
18.0698 102.551 18.1802 102.567 18.3359 102.567 cv
18.3979 102.567 li
18.3979 106.098 li
18.3198 106.098 li
18.1641 106.098 18.0552 106.114 18.0078 106.145 cv
17.9448 106.192 17.9302 106.254 17.9302 106.364 cv
17.9302 106.458 17.9448 106.52 17.9922 106.567 cv
18.0391 106.614 18.1172 106.645 18.2109 106.645 cv
19.2422 106.645 li
19.4302 106.645 19.5552 106.614 19.6021 106.583 cv
19.6641 106.536 19.6802 106.473 19.6802 106.364 cv
19.6802 106.27 19.6479 106.192 19.5859 106.161 cv
19.5229 106.114 19.4141 106.098 19.2729 106.098 cv
19.0078 106.098 li
19.0078 104.473 li
cp
f
24.2622 104.817 mo
24.2622 108.161 li
23.6992 108.161 li
23.4961 108.161 23.3711 108.176 23.3091 108.208 cv
23.2622 108.239 23.23 108.301 23.23 108.395 cv
23.23 108.489 23.2461 108.536 23.293 108.583 cv
23.3398 108.629 23.418 108.645 23.4961 108.645 cv
25.543 108.645 li
25.6372 108.645 25.6992 108.629 25.7461 108.583 cv
25.793 108.536 25.8242 108.489 25.8242 108.395 cv
25.8242 108.301 25.793 108.239 25.73 108.208 cv
25.6841 108.176 25.5591 108.161 25.355 108.161 cv
24.8091 108.161 li
24.8091 104.473 li
24.8091 104.395 24.793 104.333 24.7622 104.301 cv
24.7461 104.27 24.6992 104.239 24.668 104.239 cv
24.6372 104.239 24.6211 104.239 24.5898 104.254 cv
24.5591 104.254 24.543 104.254 24.5122 104.27 cv
23.4961 104.536 li
23.4341 104.551 23.3711 104.583 23.3398 104.629 cv
23.293 104.676 23.2769 104.723 23.2769 104.77 cv
23.2769 104.833 23.293 104.895 23.355 104.926 cv
23.3872 104.973 23.4492 104.989 23.5122 104.989 cv
23.5269 104.989 23.543 104.989 23.5591 104.989 cv
23.5742 104.989 23.5898 104.989 23.6211 104.973 cv
24.2622 104.817 li
cp
f
9.31201 114.708 mo
9.06201 114.379 8.92188 113.911 8.92188 113.333 cv
8.92188 112.739 9.06201 112.27 9.31201 111.926 cv
9.54688 111.598 9.89111 111.442 10.3438 111.442 cv
10.7661 111.442 11.1089 111.598 11.375 111.942 cv
11.625 112.27 11.75 112.739 11.75 113.333 cv
11.75 113.911 11.625 114.379 11.375 114.708 cv
11.1089 115.051 10.7661 115.208 10.3438 115.208 cv
9.89111 115.208 9.56201 115.051 9.31201 114.708 cv
9.31201 114.708 li
cp
11.8589 111.567 mo
11.4531 111.114 10.9531 110.879 10.3438 110.879 cv
9.71875 110.879 9.20313 111.114 8.81201 111.567 cv
8.42188 112.02 8.21875 112.598 8.21875 113.333 cv
8.21875 114.036 8.42188 114.614 8.81201 115.083 cv
9.21875 115.536 9.71875 115.77 10.3438 115.77 cv
10.9531 115.77 11.4531 115.536 11.8589 115.083 cv
12.25 114.614 12.4531 114.036 12.4531 113.333 cv
12.4531 112.614 12.25 112.036 11.8589 111.567 cv
11.8589 111.567 li
cp
f
14.4878 115.098 mo
14.4878 113.895 li
15.1602 113.895 li
15.8008 113.895 16.2852 113.786 16.6128 113.536 cv
16.9409 113.286 17.0981 112.942 17.0981 112.458 cv
17.0981 111.989 16.9258 111.614 16.5981 111.379 cv
16.27 111.129 15.8008 111.02 15.1602 111.02 cv
13.3481 111.02 li
13.27 111.02 13.207 111.036 13.1602 111.083 cv
13.1128 111.129 13.082 111.208 13.082 111.286 cv
13.082 111.395 13.1128 111.473 13.1602 111.504 cv
13.2231 111.551 13.3628 111.567 13.5981 111.567 cv
13.8628 111.567 li
13.8628 115.098 li
13.3628 115.098 li
13.27 115.098 13.1909 115.114 13.1602 115.161 cv
13.1128 115.208 13.082 115.27 13.082 115.364 cv
13.082 115.458 13.1128 115.52 13.1602 115.567 cv
13.207 115.614 13.27 115.645 13.3481 115.645 cv
15.27 115.645 li
15.4258 115.645 15.52 115.614 15.582 115.583 cv
15.6289 115.536 15.6602 115.473 15.6602 115.364 cv
15.6602 115.27 15.6289 115.192 15.5659 115.161 cv
15.52 115.114 15.4258 115.098 15.3008 115.098 cv
14.4878 115.098 li
cp
15.207 111.567 mo
15.6128 111.567 15.9258 111.645 16.1289 111.801 cv
16.332 111.942 16.4409 112.176 16.4409 112.473 cv
16.4409 112.786 16.332 113.02 16.1289 113.161 cv
15.9258 113.317 15.6128 113.395 15.207 113.395 cv
14.4878 113.395 li
14.4878 111.567 li
15.207 111.567 li
cp
f
17.4609 117.067 mo
22.4141 117.067 li
22.4141 117.536 li
17.4609 117.536 li
17.4609 117.067 li
cp
f
26.293 115.645 mo
26.3872 115.645 26.4492 115.614 26.4961 115.567 cv
26.543 115.52 26.5591 115.458 26.5591 115.364 cv
26.5591 114.379 li
26.5591 114.223 26.543 114.129 26.4961 114.067 cv
26.4648 114.02 26.4019 113.989 26.293 113.989 cv
26.1841 113.989 26.1211 114.02 26.0742 114.083 cv
26.043 114.129 26.0122 114.254 26.0122 114.458 cv
26.0122 115.098 li
23.9341 115.098 li
23.9341 113.364 li
24.9492 113.364 li
24.9492 113.504 li
24.9492 113.676 24.9648 113.801 25.0122 113.864 cv
25.043 113.926 25.105 113.958 25.1992 113.958 cv
25.293 113.958 25.3711 113.926 25.4019 113.879 cv
25.4341 113.817 25.4492 113.692 25.4492 113.504 cv
25.4492 112.77 li
25.4492 112.583 25.4341 112.458 25.4019 112.395 cv
25.3711 112.348 25.293 112.301 25.2148 112.301 cv
25.1211 112.301 25.0591 112.333 25.0122 112.395 cv
24.9648 112.442 24.9492 112.536 24.9492 112.692 cv
24.9492 112.895 li
23.9341 112.895 li
23.9341 111.567 li
26.0122 111.567 li
26.0122 112.129 li
26.0122 112.333 26.043 112.458 26.0742 112.52 cv
26.1211 112.567 26.1841 112.598 26.293 112.598 cv
26.4019 112.598 26.4648 112.583 26.5122 112.52 cv
26.543 112.473 26.5591 112.379 26.5591 112.239 cv
26.5591 111.333 li
26.5591 111.223 26.543 111.145 26.4961 111.098 cv
26.4492 111.036 26.3872 111.02 26.293 111.02 cv
22.8872 111.02 li
22.793 111.02 22.7148 111.036 22.668 111.083 cv
22.6211 111.129 22.5898 111.192 22.5898 111.286 cv
22.5898 111.395 22.6211 111.473 22.6841 111.504 cv
22.7461 111.551 22.8711 111.567 23.0742 111.567 cv
23.3091 111.567 li
23.3091 115.098 li
23.0742 115.098 li
22.8711 115.098 22.7461 115.114 22.6841 115.145 cv
22.6211 115.192 22.5898 115.254 22.5898 115.364 cv
22.5898 115.458 22.6211 115.52 22.668 115.567 cv
22.7148 115.614 22.793 115.645 22.8872 115.645 cv
26.293 115.645 li
cp
f
28.5161 114.708 mo
28.2661 114.364 28.125 113.911 28.125 113.333 cv
28.125 112.739 28.2661 112.286 28.5161 111.942 cv
28.7661 111.598 29.1089 111.442 29.5469 111.442 cv
29.9688 111.442 30.312 111.598 30.562 111.942 cv
30.8281 112.286 30.9531 112.739 30.9531 113.333 cv
30.9531 113.895 30.8281 114.364 30.562 114.708 cv
30.312 115.036 29.9688 115.208 29.5469 115.208 cv
29.1089 115.208 28.7661 115.036 28.5161 114.708 cv
28.5161 114.708 li
cp
28.6411 115.911 mo
28.3911 116.161 28.2661 116.301 28.2661 116.379 cv
28.2661 116.442 28.2969 116.504 28.3438 116.567 cv
28.4058 116.629 28.4688 116.676 28.5308 116.676 cv
28.5469 116.676 28.6719 116.614 28.8911 116.52 cv
29.1089 116.442 29.312 116.395 29.5161 116.395 cv
29.6558 116.395 29.8589 116.426 30.125 116.52 cv
30.4058 116.598 30.6089 116.645 30.75 116.645 cv
30.938 116.645 31.0938 116.598 31.25 116.52 cv
31.4058 116.426 31.5 116.348 31.5 116.254 cv
31.5 116.192 31.4688 116.114 31.4219 116.067 cv
31.375 116.004 31.312 115.989 31.25 115.989 cv
31.2188 115.989 31.1411 116.004 31.0308 116.051 cv
30.9063 116.098 30.812 116.129 30.7339 116.129 cv
30.6411 116.129 30.4839 116.098 30.2808 116.036 cv
30.0781 115.973 29.9219 115.942 29.812 115.942 cv
29.6411 115.942 29.4839 115.958 29.312 115.989 cv
29.1558 116.02 29 116.067 28.8438 116.129 cv
29.2661 115.723 li
29.2969 115.723 29.3281 115.723 29.3589 115.723 cv
29.3911 115.723 29.4531 115.723 29.5161 115.723 cv
30.1563 115.723 30.6719 115.504 31.062 115.067 cv
31.4531 114.614 31.6563 114.051 31.6563 113.333 cv
31.6563 112.629 31.4531 112.051 31.0469 111.583 cv
30.6411 111.114 30.1411 110.879 29.5469 110.879 cv
28.9531 110.879 28.438 111.114 28.0308 111.583 cv
27.625 112.051 27.4219 112.629 27.4219 113.317 cv
27.4219 113.879 27.562 114.395 27.8438 114.801 cv
28.1089 115.223 28.4688 115.504 28.9219 115.629 cv
28.8589 115.708 28.75 115.801 28.6411 115.911 cv
28.6411 115.911 li
cp
f
32.6558 114.02 mo
32.6558 114.551 32.7969 114.989 33.1089 115.301 cv
33.4219 115.614 33.8281 115.77 34.3438 115.77 cv
34.9058 115.77 35.3281 115.614 35.6089 115.301 cv
35.8911 114.989 36.0308 114.504 36.0308 113.879 cv
36.0308 111.567 li
36.0938 111.567 li
36.2339 111.567 36.3438 111.551 36.3911 111.504 cv
36.4531 111.473 36.4839 111.395 36.4839 111.286 cv
36.4839 111.192 36.4531 111.129 36.4058 111.083 cv
36.3589 111.036 36.2969 111.02 36.188 111.02 cv
35.1558 111.02 li
34.9839 111.02 34.8589 111.036 34.812 111.083 cv
34.75 111.114 34.7339 111.192 34.7339 111.286 cv
34.7339 111.395 34.7661 111.473 34.8281 111.504 cv
34.8911 111.551 35.0313 111.567 35.2339 111.567 cv
35.438 111.567 li
35.438 113.786 li
35.438 114.286 35.3589 114.661 35.188 114.879 cv
35.0161 115.098 34.75 115.208 34.375 115.208 cv
34.1719 115.208 34 115.161 33.8281 115.083 cv
33.6719 114.989 33.5469 114.864 33.4531 114.708 cv
33.3911 114.598 33.3589 114.473 33.3281 114.348 cv
33.2969 114.208 33.2808 114.004 33.2808 113.723 cv
33.2808 111.567 li
33.4531 111.567 li
33.6411 111.567 33.7661 111.551 33.8281 111.504 cv
33.9063 111.473 33.938 111.395 33.938 111.286 cv
33.938 111.192 33.9063 111.114 33.8438 111.083 cv
33.7969 111.036 33.6558 111.02 33.4531 111.02 cv
32.4688 111.02 li
32.375 111.02 32.2969 111.036 32.25 111.083 cv
32.2031 111.129 32.1719 111.192 32.1719 111.286 cv
32.1719 111.395 32.2031 111.473 32.2661 111.504 cv
32.3281 111.551 32.438 111.567 32.5781 111.567 cv
32.6558 111.567 li
32.6558 114.02 li
cp
f
37.207 115.098 mo
37.1289 115.098 li
36.9731 115.098 36.8628 115.114 36.8159 115.145 cv
36.7539 115.192 36.7231 115.254 36.7231 115.364 cv
36.7231 115.473 36.7539 115.536 36.8159 115.583 cv
36.8628 115.614 36.9731 115.645 37.145 115.645 cv
38.1758 115.645 li
38.3628 115.645 38.4878 115.614 38.5352 115.583 cv
38.5981 115.536 38.6289 115.473 38.6289 115.364 cv
38.6289 115.254 38.5981 115.192 38.5352 115.161 cv
38.4731 115.114 38.3481 115.098 38.1758 115.098 cv
37.8008 115.098 li
38.145 114.161 li
40.1289 114.161 li
40.5039 115.098 li
40.145 115.098 li
39.9731 115.098 39.8481 115.114 39.7852 115.161 cv
39.7231 115.192 39.6909 115.254 39.6909 115.364 cv
39.6909 115.473 39.7231 115.536 39.7852 115.583 cv
39.8481 115.614 39.957 115.645 40.1602 115.645 cv
41.2231 115.645 li
41.3628 115.645 41.457 115.614 41.5039 115.583 cv
41.5508 115.536 41.582 115.473 41.582 115.364 cv
41.582 115.254 41.5508 115.192 41.5039 115.145 cv
41.457 115.114 41.3481 115.098 41.207 115.098 cv
41.145 115.098 li
39.6128 111.27 li
39.582 111.176 39.5352 111.114 39.4878 111.067 cv
39.4258 111.036 39.332 111.02 39.1909 111.02 cv
38.082 111.02 li
37.832 111.02 37.6758 111.036 37.6128 111.083 cv
37.5659 111.114 37.5352 111.192 37.5352 111.286 cv
37.5352 111.395 37.5659 111.473 37.6289 111.504 cv
37.6909 111.551 37.8008 111.567 37.957 111.567 cv
38.5352 111.567 li
37.207 115.098 li
cp
39.0981 111.567 mo
39.9258 113.645 li
38.332 113.645 li
39.0981 111.567 li
cp
f
45.4141 115.098 mo
43.3359 115.098 li
43.3359 111.567 li
43.9922 111.567 li
44.1802 111.567 44.3198 111.551 44.3672 111.504 cv
44.4302 111.473 44.4609 111.395 44.4609 111.286 cv
44.4609 111.192 44.4302 111.129 44.3828 111.083 cv
44.3359 111.036 44.2729 111.02 44.1641 111.02 cv
42.0552 111.02 li
41.9609 111.02 41.8828 111.036 41.8359 111.083 cv
41.7891 111.129 41.7578 111.192 41.7578 111.286 cv
41.7578 111.395 41.7891 111.473 41.8521 111.504 cv
41.9141 111.551 42.0391 111.567 42.2271 111.567 cv
42.7109 111.567 li
42.7109 115.098 li
42.2271 115.098 li
42.0229 115.098 41.8979 115.114 41.8359 115.145 cv
41.7891 115.192 41.7578 115.254 41.7578 115.364 cv
41.7578 115.458 41.7891 115.52 41.8359 115.567 cv
41.8828 115.614 41.9448 115.645 42.0391 115.645 cv
45.6948 115.645 li
45.7729 115.645 45.8521 115.614 45.8979 115.567 cv
45.9448 115.52 45.9771 115.442 45.9771 115.364 cv
45.9771 113.895 li
45.9771 113.801 45.9448 113.723 45.8979 113.676 cv
45.8521 113.629 45.7891 113.598 45.6948 113.598 cv
45.5859 113.598 45.5078 113.629 45.4609 113.692 cv
45.4302 113.754 45.4141 113.879 45.4141 114.067 cv
45.4141 115.098 li
cp
f
48.2461 115.254 mo
48.2461 115.27 li
48.355 115.551 48.4961 115.692 48.668 115.692 cv
48.8872 115.692 li
48.9648 115.692 49.0269 115.676 49.0742 115.614 cv
49.1211 115.567 49.1841 115.458 49.2622 115.254 cv
50.668 111.567 li
50.7148 111.567 li
50.855 111.567 50.9492 111.551 50.9961 111.504 cv
51.0591 111.473 51.0898 111.395 51.0898 111.286 cv
51.0898 111.208 51.0591 111.129 51.0122 111.083 cv
50.9648 111.036 50.9019 111.02 50.8091 111.02 cv
49.5898 111.02 li
49.4341 111.02 49.3242 111.036 49.2769 111.083 cv
49.2148 111.114 49.1992 111.192 49.1992 111.286 cv
49.1992 111.395 49.23 111.458 49.2769 111.504 cv
49.3398 111.551 49.4341 111.567 49.5591 111.567 cv
50.0742 111.567 li
48.7769 114.989 li
47.4492 111.567 li
47.8872 111.567 li
48.0122 111.567 48.105 111.551 48.1519 111.504 cv
48.2148 111.458 48.2461 111.395 48.2461 111.286 cv
48.2461 111.192 48.2148 111.114 48.168 111.083 cv
48.105 111.036 47.9961 111.02 47.855 111.02 cv
46.668 111.02 li
46.5742 111.02 46.5122 111.036 46.4648 111.083 cv
46.418 111.129 46.4019 111.208 46.4019 111.286 cv
46.4019 111.395 46.418 111.473 46.48 111.504 cv
46.5269 111.551 46.6211 111.567 46.7622 111.567 cv
46.8091 111.567 li
48.2461 115.254 li
cp
f
55.0938 115.645 mo
55.188 115.645 55.25 115.614 55.2969 115.567 cv
55.3438 115.52 55.3589 115.458 55.3589 115.364 cv
55.3589 114.379 li
55.3589 114.223 55.3438 114.129 55.2969 114.067 cv
55.2661 114.02 55.2031 113.989 55.0938 113.989 cv
54.9839 113.989 54.9219 114.02 54.875 114.083 cv
54.8438 114.129 54.812 114.254 54.812 114.458 cv
54.812 115.098 li
52.7339 115.098 li
52.7339 113.364 li
53.75 113.364 li
53.75 113.504 li
53.75 113.676 53.7661 113.801 53.812 113.864 cv
53.8438 113.926 53.9058 113.958 54 113.958 cv
54.0938 113.958 54.1719 113.926 54.2031 113.879 cv
54.2339 113.817 54.25 113.692 54.25 113.504 cv
54.25 112.77 li
54.25 112.583 54.2339 112.458 54.2031 112.395 cv
54.1719 112.348 54.0938 112.301 54.0161 112.301 cv
53.9219 112.301 53.8589 112.333 53.812 112.395 cv
53.7661 112.442 53.75 112.536 53.75 112.692 cv
53.75 112.895 li
52.7339 112.895 li
52.7339 111.567 li
54.812 111.567 li
54.812 112.129 li
54.812 112.333 54.8438 112.458 54.875 112.52 cv
54.9219 112.567 54.9839 112.598 55.0938 112.598 cv
55.2031 112.598 55.2661 112.583 55.312 112.52 cv
55.3438 112.473 55.3589 112.379 55.3589 112.239 cv
55.3589 111.333 li
55.3589 111.223 55.3438 111.145 55.2969 111.098 cv
55.25 111.036 55.188 111.02 55.0938 111.02 cv
51.688 111.02 li
51.5938 111.02 51.5161 111.036 51.4688 111.083 cv
51.4219 111.129 51.3911 111.192 51.3911 111.286 cv
51.3911 111.395 51.4219 111.473 51.4839 111.504 cv
51.5469 111.551 51.6719 111.567 51.875 111.567 cv
52.1089 111.567 li
52.1089 115.098 li
51.875 115.098 li
51.6719 115.098 51.5469 115.114 51.4839 115.145 cv
51.4219 115.192 51.3911 115.254 51.3911 115.364 cv
51.3911 115.458 51.4219 115.52 51.4688 115.567 cv
51.5161 115.614 51.5938 115.645 51.688 115.645 cv
55.0938 115.645 li
cp
f
57.4688 113.629 mo
57.9839 113.629 li
58.1411 113.629 58.2808 113.676 58.375 113.739 cv
58.4839 113.801 58.6089 113.958 58.7661 114.192 cv
59.5161 115.333 li
59.5161 115.333 59.5308 115.348 59.5469 115.364 cv
59.6719 115.551 59.7969 115.645 59.9219 115.645 cv
60.3589 115.645 li
60.4531 115.645 60.5161 115.614 60.562 115.567 cv
60.6089 115.52 60.6411 115.458 60.6411 115.364 cv
60.6411 115.254 60.5938 115.192 60.5469 115.161 cv
60.5 115.114 60.3911 115.098 60.25 115.098 cv
60.125 115.098 li
59.3438 113.895 li
59.2969 113.817 59.2339 113.754 59.1719 113.708 cv
59.125 113.661 59.062 113.598 59 113.567 cv
59.3281 113.489 59.5781 113.333 59.7661 113.114 cv
59.9531 112.895 60.0469 112.645 60.0469 112.348 cv
60.0469 112.129 60 111.911 59.8911 111.723 cv
59.7969 111.536 59.6558 111.379 59.4839 111.254 cv
59.3438 111.176 59.1719 111.114 58.9839 111.067 cv
58.7808 111.036 58.4839 111.02 58.0938 111.02 cv
56.438 111.02 li
56.3589 111.02 56.2808 111.036 56.2339 111.083 cv
56.188 111.129 56.1719 111.192 56.1719 111.27 cv
56.1719 111.379 56.2031 111.458 56.25 111.489 cv
56.312 111.52 56.438 111.536 56.6411 111.536 cv
56.8589 111.536 li
56.8589 115.098 li
56.5 115.098 li
56.3911 115.098 56.2969 115.114 56.25 115.161 cv
56.188 115.192 56.1719 115.27 56.1719 115.364 cv
56.1719 115.458 56.188 115.52 56.2339 115.567 cv
56.2969 115.614 56.3589 115.645 56.438 115.645 cv
57.75 115.645 li
57.9058 115.645 58.0161 115.614 58.062 115.583 cv
58.125 115.536 58.1411 115.473 58.1411 115.364 cv
58.1411 115.27 58.1089 115.192 58.0469 115.161 cv
57.9839 115.114 57.875 115.098 57.7339 115.098 cv
57.4688 115.098 li
57.4688 113.629 li
cp
58.2969 111.536 mo
58.6558 111.536 58.9058 111.598 59.0938 111.739 cv
59.2808 111.864 59.3589 112.067 59.3589 112.333 cv
59.3589 112.583 59.2808 112.786 59.0938 112.911 cv
58.9058 113.051 58.6411 113.114 58.2808 113.114 cv
57.4688 113.114 li
57.4688 111.536 li
58.2969 111.536 li
cp
f
63.4409 115.098 mo
63.4409 111.567 li
64.3159 111.567 li
64.52 111.567 64.645 111.551 64.707 111.504 cv
64.77 111.473 64.8008 111.395 64.8008 111.286 cv
64.8008 111.192 64.77 111.129 64.7231 111.083 cv
64.6758 111.036 64.5981 111.02 64.5039 111.02 cv
61.7852 111.02 li
61.6758 111.02 61.5981 111.036 61.5508 111.083 cv
61.5039 111.129 61.4878 111.192 61.4878 111.286 cv
61.4878 111.395 61.5039 111.473 61.5659 111.504 cv
61.6289 111.551 61.7539 111.567 61.957 111.567 cv
62.832 111.567 li
62.832 115.098 li
61.957 115.098 li
61.7539 115.098 61.6128 115.114 61.5659 115.145 cv
61.5039 115.192 61.4878 115.254 61.4878 115.364 cv
61.4878 115.458 61.5039 115.52 61.5508 115.567 cv
61.5981 115.614 61.6758 115.645 61.77 115.645 cv
64.3159 115.645 li
64.52 115.645 64.645 115.614 64.707 115.583 cv
64.77 115.536 64.8008 115.473 64.8008 115.364 cv
64.8008 115.254 64.77 115.192 64.707 115.145 cv
64.645 115.114 64.52 115.098 64.3159 115.098 cv
63.4409 115.098 li
cp
f
67.2271 115.098 mo
67.2271 113.364 li
68.2578 113.364 li
68.2578 113.473 li
68.2578 113.676 68.2729 113.801 68.3198 113.864 cv
68.3521 113.926 68.4141 113.958 68.5078 113.958 cv
68.6021 113.958 68.6641 113.926 68.6948 113.879 cv
68.7271 113.833 68.7422 113.739 68.7422 113.614 cv
68.7422 112.614 li
68.7422 112.504 68.7271 112.426 68.6948 112.379 cv
68.6479 112.333 68.6021 112.301 68.5078 112.301 cv
68.4141 112.301 68.3521 112.348 68.3198 112.411 cv
68.2729 112.473 68.2578 112.598 68.2578 112.786 cv
68.2578 112.895 li
67.2271 112.895 li
67.2271 111.567 li
69.3521 111.567 li
69.3521 112.129 li
69.3521 112.333 69.3672 112.458 69.3979 112.52 cv
69.4448 112.567 69.5229 112.598 69.6328 112.598 cv
69.7109 112.598 69.7891 112.583 69.8198 112.536 cv
69.8828 112.489 69.8979 112.426 69.8979 112.333 cv
69.8979 111.333 li
69.8979 111.223 69.8828 111.145 69.8198 111.098 cv
69.7891 111.036 69.7109 111.02 69.6328 111.02 cv
66.1641 111.02 li
66.0859 111.02 66.0229 111.036 65.9771 111.083 cv
65.9302 111.129 65.8979 111.208 65.8979 111.286 cv
65.8979 111.395 65.9302 111.473 65.9922 111.504 cv
66.0391 111.551 66.1641 111.567 66.3672 111.567 cv
66.6172 111.567 li
66.6172 115.098 li
66.2422 115.098 li
66.1172 115.098 66.0229 115.114 65.9771 115.161 cv
65.9302 115.192 65.8979 115.27 65.8979 115.364 cv
65.8979 115.458 65.9302 115.52 65.9771 115.567 cv
66.0229 115.614 66.0859 115.645 66.1641 115.645 cv
68.1021 115.645 li
68.1802 115.645 68.2578 115.614 68.3052 115.567 cv
68.3521 115.52 68.3672 115.458 68.3672 115.364 cv
68.3672 115.27 68.3521 115.192 68.3052 115.161 cv
68.2578 115.114 68.1641 115.098 68.0552 115.098 cv
67.2271 115.098 li
cp
f
73.0269 115.098 mo
73.0269 113.848 li
74.355 111.567 li
74.418 111.567 li
74.5742 111.567 74.6841 111.551 74.7461 111.504 cv
74.793 111.473 74.8242 111.395 74.8242 111.286 cv
74.8242 111.192 74.793 111.114 74.7461 111.083 cv
74.6841 111.036 74.5591 111.02 74.355 111.02 cv
73.6372 111.02 li
73.4492 111.02 73.3242 111.036 73.2769 111.067 cv
73.23 111.114 73.2148 111.176 73.2148 111.286 cv
73.2148 111.395 73.23 111.473 73.293 111.504 cv
73.355 111.551 73.4492 111.567 73.5898 111.567 cv
73.7461 111.567 li
72.7622 113.27 li
71.8242 111.567 li
71.9492 111.567 li
72.1211 111.567 72.23 111.551 72.293 111.504 cv
72.3711 111.473 72.4019 111.395 72.4019 111.286 cv
72.4019 111.192 72.3711 111.114 72.3091 111.083 cv
72.2622 111.036 72.1519 111.02 71.9961 111.02 cv
70.9341 111.02 li
70.8242 111.02 70.7622 111.036 70.7148 111.083 cv
70.6519 111.129 70.6372 111.192 70.6372 111.286 cv
70.6372 111.395 70.668 111.473 70.73 111.504 cv
70.7769 111.551 70.8872 111.567 71.043 111.567 cv
71.105 111.567 li
72.418 113.801 li
72.418 115.098 li
71.8398 115.098 li
71.6519 115.098 71.5269 115.114 71.4648 115.145 cv
71.4019 115.192 71.3711 115.254 71.3711 115.364 cv
71.3711 115.473 71.4019 115.536 71.4492 115.583 cv
71.5122 115.614 71.6211 115.645 71.793 115.645 cv
73.6372 115.645 li
73.8091 115.645 73.918 115.614 73.98 115.583 cv
74.043 115.536 74.0742 115.473 74.0742 115.364 cv
74.0742 115.254 74.043 115.192 73.98 115.145 cv
73.918 115.114 73.793 115.098 73.5898 115.098 cv
73.0269 115.098 li
cp
f
9.31201 123.708 mo
9.06201 123.379 8.92188 122.911 8.92188 122.333 cv
8.92188 121.739 9.06201 121.27 9.31201 120.926 cv
9.54688 120.598 9.89111 120.442 10.3438 120.442 cv
10.7661 120.442 11.1089 120.598 11.375 120.942 cv
11.625 121.27 11.75 121.739 11.75 122.333 cv
11.75 122.911 11.625 123.379 11.375 123.708 cv
11.1089 124.051 10.7661 124.208 10.3438 124.208 cv
9.89111 124.208 9.56201 124.051 9.31201 123.708 cv
9.31201 123.708 li
cp
11.8589 120.567 mo
11.4531 120.114 10.9531 119.879 10.3438 119.879 cv
9.71875 119.879 9.20313 120.114 8.81201 120.567 cv
8.42188 121.02 8.21875 121.598 8.21875 122.333 cv
8.21875 123.036 8.42188 123.614 8.81201 124.083 cv
9.21875 124.536 9.71875 124.77 10.3438 124.77 cv
10.9531 124.77 11.4531 124.536 11.8589 124.083 cv
12.25 123.614 12.4531 123.036 12.4531 122.333 cv
12.4531 121.614 12.25 121.036 11.8589 120.567 cv
11.8589 120.567 li
cp
f
14.4878 124.098 mo
14.4878 122.895 li
15.1602 122.895 li
15.8008 122.895 16.2852 122.786 16.6128 122.536 cv
16.9409 122.286 17.0981 121.942 17.0981 121.458 cv
17.0981 120.989 16.9258 120.614 16.5981 120.379 cv
16.27 120.129 15.8008 120.02 15.1602 120.02 cv
13.3481 120.02 li
13.27 120.02 13.207 120.036 13.1602 120.083 cv
13.1128 120.129 13.082 120.208 13.082 120.286 cv
13.082 120.395 13.1128 120.473 13.1602 120.504 cv
13.2231 120.551 13.3628 120.567 13.5981 120.567 cv
13.8628 120.567 li
13.8628 124.098 li
13.3628 124.098 li
13.27 124.098 13.1909 124.114 13.1602 124.161 cv
13.1128 124.208 13.082 124.27 13.082 124.364 cv
13.082 124.458 13.1128 124.52 13.1602 124.567 cv
13.207 124.614 13.27 124.645 13.3481 124.645 cv
15.27 124.645 li
15.4258 124.645 15.52 124.614 15.582 124.583 cv
15.6289 124.536 15.6602 124.473 15.6602 124.364 cv
15.6602 124.27 15.6289 124.192 15.5659 124.161 cv
15.52 124.114 15.4258 124.098 15.3008 124.098 cv
14.4878 124.098 li
cp
15.207 120.567 mo
15.6128 120.567 15.9258 120.645 16.1289 120.801 cv
16.332 120.942 16.4409 121.176 16.4409 121.473 cv
16.4409 121.786 16.332 122.02 16.1289 122.161 cv
15.9258 122.317 15.6128 122.395 15.207 122.395 cv
14.4878 122.395 li
14.4878 120.567 li
15.207 120.567 li
cp
f
17.4609 126.067 mo
22.4141 126.067 li
22.4141 126.536 li
17.4609 126.536 li
17.4609 126.067 li
cp
f
25.418 119.958 mo
25.23 119.911 25.0591 119.895 24.8872 119.895 cv
24.2461 119.895 23.7148 120.129 23.2769 120.583 cv
22.855 121.051 22.6372 121.629 22.6372 122.333 cv
22.6372 123.036 22.855 123.614 23.2769 124.083 cv
23.6992 124.536 24.23 124.754 24.8711 124.754 cv
25.1211 124.754 25.355 124.723 25.5591 124.661 cv
25.793 124.583 26.0122 124.473 26.23 124.333 cv
26.4019 124.223 26.5122 124.145 26.5742 124.067 cv
26.6211 124.004 26.6519 123.926 26.6519 123.848 cv
26.6519 123.77 26.6372 123.708 26.5742 123.645 cv
26.5269 123.598 26.4492 123.567 26.3711 123.567 cv
26.3091 123.567 26.23 123.614 26.105 123.708 cv
25.98 123.786 25.8872 123.848 25.8242 123.879 cv
25.668 123.973 25.5122 124.036 25.355 124.083 cv
25.1992 124.114 25.0591 124.145 24.9019 124.145 cv
24.4341 124.145 24.0591 123.973 23.7769 123.629 cv
23.4961 123.301 23.355 122.848 23.355 122.27 cv
23.355 121.723 23.4961 121.254 23.7769 120.926 cv
24.0591 120.583 24.418 120.426 24.8872 120.426 cv
25.1372 120.426 25.355 120.489 25.543 120.598 cv
25.73 120.739 25.855 120.895 25.9019 121.083 cv
25.9019 121.129 25.918 121.176 25.9341 121.254 cv
25.9961 121.504 26.105 121.614 26.2769 121.614 cv
26.3872 121.614 26.4648 121.598 26.4961 121.551 cv
26.543 121.52 26.5591 121.426 26.5591 121.301 cv
26.5591 121.348 26.5591 121.239 26.5591 121.02 cv
26.543 120.801 26.543 120.567 26.543 120.301 cv
26.543 120.161 26.5269 120.067 26.4961 120.02 cv
26.4492 119.973 26.3872 119.942 26.2769 119.942 cv
26.1992 119.942 26.1372 119.958 26.0898 119.989 cv
26.043 120.02 25.9961 120.067 25.9648 120.145 cv
25.7769 120.067 25.5898 120.004 25.418 119.958 cv
25.418 119.958 li
cp
f
28.6089 122.473 mo
30.4839 122.473 li
30.4839 124.098 li
30.2808 124.098 li
30.0938 124.098 29.9688 124.114 29.9058 124.145 cv
29.8281 124.192 29.7969 124.254 29.7969 124.364 cv
29.7969 124.473 29.8281 124.536 29.8911 124.583 cv
29.938 124.614 30.0781 124.645 30.2808 124.645 cv
31.0938 124.645 li
31.2969 124.645 31.4219 124.614 31.4839 124.583 cv
31.5308 124.536 31.562 124.473 31.562 124.364 cv
31.562 124.254 31.5308 124.192 31.4688 124.161 cv
31.4058 124.114 31.312 124.098 31.1558 124.098 cv
31.0781 124.098 li
31.0781 120.567 li
31.188 120.567 li
31.312 120.567 31.4219 120.551 31.4839 120.504 cv
31.5308 120.473 31.562 120.395 31.562 120.286 cv
31.562 120.192 31.5308 120.129 31.4839 120.083 cv
31.438 120.036 31.3589 120.02 31.2661 120.02 cv
30.312 120.02 li
30.0781 120.02 29.938 120.036 29.8911 120.083 cv
29.8281 120.114 29.7969 120.192 29.7969 120.286 cv
29.7969 120.395 29.8281 120.458 29.8911 120.504 cv
29.9531 120.551 30.062 120.567 30.2188 120.567 cv
30.4839 120.567 li
30.4839 121.926 li
28.6089 121.926 li
28.6089 120.567 li
28.7808 120.567 li
28.9688 120.567 29.1089 120.551 29.188 120.504 cv
29.25 120.473 29.2808 120.395 29.2808 120.286 cv
29.2808 120.192 29.2661 120.114 29.2031 120.083 cv
29.1558 120.036 29.0161 120.02 28.7969 120.02 cv
27.8281 120.02 li
27.7188 120.02 27.6411 120.036 27.5938 120.083 cv
27.5469 120.129 27.5313 120.192 27.5313 120.286 cv
27.5313 120.395 27.562 120.473 27.6089 120.504 cv
27.6719 120.551 27.7808 120.567 27.938 120.567 cv
28 120.567 li
28 124.098 li
27.9219 124.098 li
27.7661 124.098 27.6558 124.114 27.6089 124.145 cv
27.5469 124.192 27.5313 124.254 27.5313 124.364 cv
27.5313 124.458 27.5469 124.52 27.5938 124.567 cv
27.6411 124.614 27.7188 124.645 27.812 124.645 cv
28.8438 124.645 li
29.0313 124.645 29.1558 124.614 29.2031 124.583 cv
29.2661 124.536 29.2808 124.473 29.2808 124.364 cv
29.2808 124.27 29.25 124.192 29.188 124.161 cv
29.125 124.114 29.0161 124.098 28.875 124.098 cv
28.6089 124.098 li
28.6089 122.473 li
cp
f
35.8911 124.645 mo
35.9839 124.645 36.0469 124.614 36.0938 124.567 cv
36.1411 124.52 36.1563 124.458 36.1563 124.364 cv
36.1563 123.379 li
36.1563 123.223 36.1411 123.129 36.0938 123.067 cv
36.062 123.02 36 122.989 35.8911 122.989 cv
35.7813 122.989 35.7188 123.02 35.6719 123.083 cv
35.6411 123.129 35.6089 123.254 35.6089 123.458 cv
35.6089 124.098 li
33.5313 124.098 li
33.5313 122.364 li
34.5469 122.364 li
34.5469 122.504 li
34.5469 122.676 34.562 122.801 34.6089 122.864 cv
34.6411 122.926 34.7031 122.958 34.7969 122.958 cv
34.8911 122.958 34.9688 122.926 35 122.879 cv
35.0313 122.817 35.0469 122.692 35.0469 122.504 cv
35.0469 121.77 li
35.0469 121.583 35.0313 121.458 35 121.395 cv
34.9688 121.348 34.8911 121.301 34.812 121.301 cv
34.7188 121.301 34.6563 121.333 34.6089 121.395 cv
34.562 121.442 34.5469 121.536 34.5469 121.692 cv
34.5469 121.895 li
33.5313 121.895 li
33.5313 120.567 li
35.6089 120.567 li
35.6089 121.129 li
35.6089 121.333 35.6411 121.458 35.6719 121.52 cv
35.7188 121.567 35.7813 121.598 35.8911 121.598 cv
36 121.598 36.062 121.583 36.1089 121.52 cv
36.1411 121.473 36.1563 121.379 36.1563 121.239 cv
36.1563 120.333 li
36.1563 120.223 36.1411 120.145 36.0938 120.098 cv
36.0469 120.036 35.9839 120.02 35.8911 120.02 cv
32.4839 120.02 li
32.3911 120.02 32.312 120.036 32.2661 120.083 cv
32.2188 120.129 32.188 120.192 32.188 120.286 cv
32.188 120.395 32.2188 120.473 32.2808 120.504 cv
32.3438 120.551 32.4688 120.567 32.6719 120.567 cv
32.9058 120.567 li
32.9058 124.098 li
32.6719 124.098 li
32.4688 124.098 32.3438 124.114 32.2808 124.145 cv
32.2188 124.192 32.188 124.254 32.188 124.364 cv
32.188 124.458 32.2188 124.52 32.2661 124.567 cv
32.312 124.614 32.3911 124.645 32.4839 124.645 cv
35.8911 124.645 li
cp
f
39.8159 119.958 mo
39.6289 119.911 39.457 119.895 39.2852 119.895 cv
38.645 119.895 38.1128 120.129 37.6758 120.583 cv
37.2539 121.051 37.0352 121.629 37.0352 122.333 cv
37.0352 123.036 37.2539 123.614 37.6758 124.083 cv
38.0981 124.536 38.6289 124.754 39.27 124.754 cv
39.52 124.754 39.7539 124.723 39.957 124.661 cv
40.1909 124.583 40.4102 124.473 40.6289 124.333 cv
40.8008 124.223 40.9102 124.145 40.9731 124.067 cv
41.02 124.004 41.0508 123.926 41.0508 123.848 cv
41.0508 123.77 41.0352 123.708 40.9731 123.645 cv
40.9258 123.598 40.8481 123.567 40.77 123.567 cv
40.707 123.567 40.6289 123.614 40.5039 123.708 cv
40.3789 123.786 40.2852 123.848 40.2231 123.879 cv
40.0659 123.973 39.9102 124.036 39.7539 124.083 cv
39.5981 124.114 39.457 124.145 39.3008 124.145 cv
38.832 124.145 38.457 123.973 38.1758 123.629 cv
37.895 123.301 37.7539 122.848 37.7539 122.27 cv
37.7539 121.723 37.895 121.254 38.1758 120.926 cv
38.457 120.583 38.8159 120.426 39.2852 120.426 cv
39.5352 120.426 39.7539 120.489 39.9409 120.598 cv
40.1289 120.739 40.2539 120.895 40.3008 121.083 cv
40.3008 121.129 40.3159 121.176 40.332 121.254 cv
40.395 121.504 40.5039 121.614 40.6758 121.614 cv
40.7852 121.614 40.8628 121.598 40.895 121.551 cv
40.9409 121.52 40.957 121.426 40.957 121.301 cv
40.957 121.348 40.957 121.239 40.957 121.02 cv
40.9409 120.801 40.9409 120.567 40.9409 120.301 cv
40.9409 120.161 40.9258 120.067 40.895 120.02 cv
40.8481 119.973 40.7852 119.942 40.6758 119.942 cv
40.5981 119.942 40.5352 119.958 40.4878 119.989 cv
40.4409 120.02 40.395 120.067 40.3628 120.145 cv
40.1758 120.067 39.9878 120.004 39.8159 119.958 cv
39.8159 119.958 li
cp
f
43.1328 122.864 mo
43.5698 122.458 li
43.7578 122.489 43.9302 122.567 44.0859 122.723 cv
44.2578 122.879 44.4141 123.114 44.5859 123.411 cv
44.7422 123.708 li
45.0078 124.192 45.1479 124.458 45.1641 124.489 cv
45.2109 124.551 45.2578 124.598 45.2891 124.614 cv
45.3198 124.629 45.3828 124.645 45.4609 124.645 cv
45.8359 124.645 li
45.9302 124.645 45.9922 124.614 46.0391 124.567 cv
46.0859 124.52 46.1172 124.458 46.1172 124.364 cv
46.1172 124.254 46.0859 124.192 46.0229 124.145 cv
45.9771 124.114 45.8672 124.098 45.7109 124.098 cv
45.6328 124.098 li
45.1802 123.254 44.8521 122.723 44.6479 122.473 cv
44.4448 122.223 44.2271 122.083 43.9922 122.036 cv
45.5078 120.567 li
45.5698 120.567 li
45.7109 120.567 45.8198 120.551 45.8979 120.504 cv
45.9448 120.473 45.9771 120.395 45.9771 120.286 cv
45.9771 120.208 45.9609 120.129 45.9141 120.083 cv
45.8521 120.036 45.7891 120.02 45.7109 120.02 cv
44.5552 120.02 li
44.4609 120.02 44.3828 120.036 44.3359 120.083 cv
44.3052 120.114 44.2729 120.192 44.2729 120.286 cv
44.2729 120.395 44.3052 120.458 44.3672 120.504 cv
44.4141 120.551 44.5078 120.567 44.6328 120.567 cv
44.7729 120.567 li
43.1328 122.161 li
43.1328 120.567 li
43.3198 120.567 li
43.5078 120.567 43.6479 120.551 43.7109 120.504 cv
43.7891 120.473 43.8198 120.395 43.8198 120.286 cv
43.8198 120.192 43.7891 120.114 43.7422 120.083 cv
43.6802 120.036 43.5859 120.02 43.4302 120.02 cv
42.0859 120.02 li
42.0078 120.02 41.9302 120.036 41.8979 120.083 cv
41.8359 120.129 41.8198 120.208 41.8198 120.286 cv
41.8198 120.395 41.8359 120.473 41.8979 120.504 cv
41.9609 120.551 42.0859 120.567 42.2891 120.567 cv
42.5229 120.567 li
42.5229 124.098 li
42.1479 124.098 li
42.0391 124.098 41.9448 124.114 41.8979 124.161 cv
41.8359 124.192 41.8198 124.27 41.8198 124.364 cv
41.8198 124.458 41.8359 124.52 41.8979 124.567 cv
41.9302 124.614 42.0078 124.645 42.0859 124.645 cv
43.4302 124.645 li
43.5859 124.645 43.6802 124.614 43.7422 124.583 cv
43.7891 124.536 43.8198 124.473 43.8198 124.364 cv
43.8198 124.27 43.7891 124.192 43.7271 124.161 cv
43.6641 124.114 43.5552 124.098 43.3979 124.098 cv
43.1328 124.098 li
43.1328 122.864 li
cp
f
48.1841 124.723 mo
48.3711 124.754 48.5591 124.786 48.7461 124.786 cv
49.293 124.786 49.73 124.645 50.0591 124.379 cv
50.3872 124.114 50.543 123.77 50.543 123.333 cv
50.543 122.958 50.4341 122.676 50.1992 122.458 cv
49.9648 122.223 49.6211 122.098 49.168 122.036 cv
48.543 121.958 li
48.2461 121.911 48.0269 121.833 47.8711 121.723 cv
47.73 121.598 47.6519 121.458 47.6519 121.254 cv
47.6519 121.004 47.7461 120.801 47.9492 120.629 cv
48.1372 120.489 48.4019 120.411 48.7148 120.411 cv
48.918 120.411 49.105 120.442 49.2622 120.504 cv
49.4341 120.583 49.543 120.692 49.6372 120.817 cv
49.6841 120.864 49.7148 120.942 49.7461 121.067 cv
49.8242 121.254 49.9341 121.348 50.0742 121.348 cv
50.168 121.348 50.23 121.333 50.2769 121.27 cv
50.3398 121.223 50.3711 121.145 50.3711 121.067 cv
50.3711 121.02 li
50.3091 120.208 li
50.293 120.083 50.2622 120.004 50.23 119.958 cv
50.1841 119.926 50.105 119.911 49.98 119.911 cv
49.9019 119.911 49.8398 119.926 49.8091 119.942 cv
49.7622 119.989 49.7461 120.036 49.7461 120.114 cv
49.543 120.036 49.355 119.973 49.1992 119.926 cv
49.043 119.895 48.8872 119.879 48.7461 119.879 cv
48.2461 119.879 47.8398 120.02 47.5122 120.286 cv
47.1841 120.551 47.0269 120.879 47.0269 121.286 cv
47.0269 121.661 47.1372 121.958 47.3872 122.161 cv
47.6372 122.379 48.043 122.52 48.5742 122.583 cv
49.1519 122.676 li
49.4019 122.708 49.5898 122.786 49.7148 122.911 cv
49.8398 123.036 49.9019 123.192 49.9019 123.411 cv
49.9019 123.661 49.8091 123.848 49.5898 124.02 cv
49.3872 124.176 49.105 124.254 48.7769 124.254 cv
48.4961 124.254 48.2622 124.208 48.0742 124.098 cv
47.8711 124.004 47.73 123.864 47.6372 123.692 cv
47.605 123.629 47.5742 123.536 47.543 123.426 cv
47.48 123.208 47.3711 123.098 47.2148 123.098 cv
47.105 123.098 47.0269 123.114 46.9648 123.176 cv
46.918 123.223 46.9019 123.301 46.9019 123.442 cv
46.9019 123.504 li
46.9492 124.411 li
46.9492 124.551 46.98 124.661 47.043 124.723 cv
47.0898 124.786 47.168 124.817 47.2769 124.817 cv
47.3872 124.817 47.4648 124.801 47.5122 124.754 cv
47.5591 124.708 47.5742 124.614 47.5898 124.504 cv
47.8091 124.598 47.9961 124.676 48.1841 124.723 cv
48.1841 124.723 li
cp
f
53.8438 124.098 mo
53.8438 120.567 li
54.7188 120.567 li
54.9219 120.567 55.0469 120.551 55.1089 120.504 cv
55.1719 120.473 55.2031 120.395 55.2031 120.286 cv
55.2031 120.192 55.1719 120.129 55.125 120.083 cv
55.0781 120.036 55 120.02 54.9058 120.02 cv
52.188 120.02 li
52.0781 120.02 52 120.036 51.9531 120.083 cv
51.9058 120.129 51.8911 120.192 51.8911 120.286 cv
51.8911 120.395 51.9058 120.473 51.9688 120.504 cv
52.0308 120.551 52.1558 120.567 52.3589 120.567 cv
53.2339 120.567 li
53.2339 124.098 li
52.3589 124.098 li
52.1558 124.098 52.0161 124.114 51.9688 124.145 cv
51.9058 124.192 51.8911 124.254 51.8911 124.364 cv
51.8911 124.458 51.9058 124.52 51.9531 124.567 cv
52 124.614 52.0781 124.645 52.1719 124.645 cv
54.7188 124.645 li
54.9219 124.645 55.0469 124.614 55.1089 124.583 cv
55.1719 124.536 55.2031 124.473 55.2031 124.364 cv
55.2031 124.254 55.1719 124.192 55.1089 124.145 cv
55.0469 124.114 54.9219 124.098 54.7188 124.098 cv
53.8438 124.098 li
cp
f
59.062 124.161 mo
58.9058 124.192 58.75 124.208 58.5938 124.208 cv
58.0938 124.208 57.688 124.036 57.375 123.692 cv
57.062 123.348 56.9058 122.864 56.9058 122.286 cv
56.9058 121.708 57.0469 121.254 57.3281 120.911 cv
57.6089 120.583 57.9839 120.411 58.4531 120.411 cv
58.688 120.411 58.8911 120.473 59.062 120.583 cv
59.25 120.692 59.3911 120.848 59.4839 121.067 cv
59.5 121.083 59.5161 121.129 59.5308 121.176 cv
59.5938 121.348 59.688 121.426 59.8281 121.426 cv
59.938 121.426 60.0161 121.395 60.062 121.348 cv
60.0938 121.286 60.125 121.208 60.125 121.083 cv
60.125 120.551 li
60.125 120.286 60.0938 120.114 60.062 120.051 cv
60.0161 119.973 59.938 119.926 59.812 119.926 cv
59.75 119.926 59.688 119.942 59.6411 119.989 cv
59.5938 120.004 59.5469 120.051 59.5308 120.129 cv
59.3438 120.051 59.1558 119.989 58.9839 119.942 cv
58.7969 119.895 58.625 119.879 58.438 119.879 cv
57.7969 119.879 57.25 120.114 56.8281 120.583 cv
56.4058 121.051 56.2031 121.629 56.2031 122.364 cv
56.2031 123.067 56.4219 123.661 56.8438 124.098 cv
57.2808 124.536 57.8438 124.77 58.5308 124.77 cv
58.8281 124.77 59.125 124.739 59.4058 124.676 cv
59.688 124.598 59.9058 124.536 60.0469 124.442 cv
60.0938 124.426 60.125 124.395 60.1411 124.364 cv
60.1558 124.348 60.1719 124.286 60.1719 124.223 cv
60.1719 123.051 li
60.2188 123.051 li
60.3281 123.051 60.4058 123.036 60.4531 122.989 cv
60.4839 122.958 60.5161 122.879 60.5161 122.786 cv
60.5161 122.708 60.5 122.629 60.4688 122.598 cv
60.438 122.551 60.3911 122.536 60.312 122.536 cv
58.625 122.536 li
58.5308 122.536 58.4688 122.551 58.4219 122.583 cv
58.3911 122.614 58.375 122.692 58.375 122.786 cv
58.375 122.879 58.3911 122.942 58.438 122.989 cv
58.4688 123.02 58.5308 123.051 58.6089 123.051 cv
59.5781 123.051 li
59.5781 123.958 li
59.3911 124.051 59.2188 124.114 59.062 124.161 cv
59.062 124.161 li
cp
f
124.066 71.208 mo
124.066 130.458 li
84.0981 130.458 li
84.0981 71.208 li
83.5981 71.208 li
83.5981 130.958 li
124.566 130.958 li
124.566 71.208 li
124.066 71.208 li
0.619608 0.537255 0.498039 0.227451 cmyk
f
127.777 29.04 mo
207.91 29.04 li
207.91 130.708 li
127.777 130.708 li
127.777 29.04 li
cp
0 0 0 0.090196 cmyk
ef
207.91 130.708 mo
207.91 130.458 li
128.027 130.458 li
128.027 29.29 li
207.66 29.29 li
207.66 130.708 li
207.91 130.708 li
207.91 130.458 li
207.91 130.708 li
208.16 130.708 li
208.16 28.79 li
127.527 28.79 li
127.527 130.958 li
208.16 130.958 li
208.16 130.708 li
207.91 130.708 li
0.619608 0.537255 0.498039 0.227451 cmyk
f
136.84 123.708 mo
136.59 123.379 136.449 122.911 136.449 122.333 cv
136.449 121.739 136.59 121.27 136.84 120.926 cv
137.074 120.598 137.418 120.442 137.871 120.442 cv
138.293 120.442 138.637 120.598 138.902 120.942 cv
139.152 121.27 139.277 121.739 139.277 122.333 cv
139.277 122.911 139.152 123.379 138.902 123.708 cv
138.637 124.051 138.293 124.208 137.871 124.208 cv
137.418 124.208 137.09 124.051 136.84 123.708 cv
136.84 123.708 li
cp
139.387 120.567 mo
138.98 120.114 138.48 119.879 137.871 119.879 cv
137.246 119.879 136.73 120.114 136.34 120.567 cv
135.949 121.02 135.746 121.598 135.746 122.333 cv
135.746 123.036 135.949 123.614 136.34 124.083 cv
136.746 124.536 137.246 124.77 137.871 124.77 cv
138.48 124.77 138.98 124.536 139.387 124.083 cv
139.777 123.614 139.98 123.036 139.98 122.333 cv
139.98 121.614 139.777 121.036 139.387 120.567 cv
139.387 120.567 li
cp
0.733333 0.705882 0.654902 0.776471 cmyk
f
142.016 124.098 mo
142.016 122.895 li
142.688 122.895 li
143.328 122.895 143.812 122.786 144.141 122.536 cv
144.469 122.286 144.625 121.942 144.625 121.458 cv
144.625 120.989 144.453 120.614 144.125 120.379 cv
143.797 120.129 143.328 120.02 142.688 120.02 cv
140.875 120.02 li
140.797 120.02 140.734 120.036 140.688 120.083 cv
140.641 120.129 140.609 120.208 140.609 120.286 cv
140.609 120.395 140.641 120.473 140.688 120.504 cv
140.75 120.551 140.891 120.567 141.125 120.567 cv
141.391 120.567 li
141.391 124.098 li
140.891 124.098 li
140.797 124.098 140.719 124.114 140.688 124.161 cv
140.641 124.208 140.609 124.27 140.609 124.364 cv
140.609 124.458 140.641 124.52 140.688 124.567 cv
140.734 124.614 140.797 124.645 140.875 124.645 cv
142.797 124.645 li
142.953 124.645 143.047 124.614 143.109 124.583 cv
143.156 124.536 143.188 124.473 143.188 124.364 cv
143.188 124.27 143.156 124.192 143.094 124.161 cv
143.047 124.114 142.953 124.098 142.828 124.098 cv
142.016 124.098 li
cp
142.734 120.567 mo
143.141 120.567 143.453 120.645 143.656 120.801 cv
143.859 120.942 143.969 121.176 143.969 121.473 cv
143.969 121.786 143.859 122.02 143.656 122.161 cv
143.453 122.317 143.141 122.395 142.734 122.395 cv
142.016 122.395 li
142.016 120.567 li
142.734 120.567 li
cp
f
144.988 126.067 mo
149.941 126.067 li
149.941 126.536 li
144.988 126.536 li
144.988 126.067 li
cp
f
152.945 119.958 mo
152.758 119.911 152.586 119.895 152.414 119.895 cv
151.773 119.895 151.242 120.129 150.805 120.583 cv
150.383 121.051 150.164 121.629 150.164 122.333 cv
150.164 123.036 150.383 123.614 150.805 124.083 cv
151.227 124.536 151.758 124.754 152.398 124.754 cv
152.648 124.754 152.883 124.723 153.086 124.661 cv
153.32 124.583 153.539 124.473 153.758 124.333 cv
153.93 124.223 154.039 124.145 154.102 124.067 cv
154.148 124.004 154.18 123.926 154.18 123.848 cv
154.18 123.77 154.164 123.708 154.102 123.645 cv
154.055 123.598 153.977 123.567 153.898 123.567 cv
153.836 123.567 153.758 123.614 153.633 123.708 cv
153.508 123.786 153.414 123.848 153.352 123.879 cv
153.195 123.973 153.039 124.036 152.883 124.083 cv
152.727 124.114 152.586 124.145 152.43 124.145 cv
151.961 124.145 151.586 123.973 151.305 123.629 cv
151.023 123.301 150.883 122.848 150.883 122.27 cv
150.883 121.723 151.023 121.254 151.305 120.926 cv
151.586 120.583 151.945 120.426 152.414 120.426 cv
152.664 120.426 152.883 120.489 153.07 120.598 cv
153.258 120.739 153.383 120.895 153.43 121.083 cv
153.43 121.129 153.445 121.176 153.461 121.254 cv
153.523 121.504 153.633 121.614 153.805 121.614 cv
153.914 121.614 153.992 121.598 154.023 121.551 cv
154.07 121.52 154.086 121.426 154.086 121.301 cv
154.086 121.348 154.086 121.239 154.086 121.02 cv
154.07 120.801 154.07 120.567 154.07 120.301 cv
154.07 120.161 154.055 120.067 154.023 120.02 cv
153.977 119.973 153.914 119.942 153.805 119.942 cv
153.727 119.942 153.664 119.958 153.617 119.989 cv
153.57 120.02 153.523 120.067 153.492 120.145 cv
153.305 120.067 153.117 120.004 152.945 119.958 cv
152.945 119.958 li
cp
f
156.133 122.473 mo
158.008 122.473 li
158.008 124.098 li
157.805 124.098 li
157.617 124.098 157.492 124.114 157.43 124.145 cv
157.352 124.192 157.32 124.254 157.32 124.364 cv
157.32 124.473 157.352 124.536 157.414 124.583 cv
157.461 124.614 157.602 124.645 157.805 124.645 cv
158.617 124.645 li
158.82 124.645 158.945 124.614 159.008 124.583 cv
159.055 124.536 159.086 124.473 159.086 124.364 cv
159.086 124.254 159.055 124.192 158.992 124.161 cv
158.93 124.114 158.836 124.098 158.68 124.098 cv
158.602 124.098 li
158.602 120.567 li
158.711 120.567 li
158.836 120.567 158.945 120.551 159.008 120.504 cv
159.055 120.473 159.086 120.395 159.086 120.286 cv
159.086 120.192 159.055 120.129 159.008 120.083 cv
158.961 120.036 158.883 120.02 158.789 120.02 cv
157.836 120.02 li
157.602 120.02 157.461 120.036 157.414 120.083 cv
157.352 120.114 157.32 120.192 157.32 120.286 cv
157.32 120.395 157.352 120.458 157.414 120.504 cv
157.477 120.551 157.586 120.567 157.742 120.567 cv
158.008 120.567 li
158.008 121.926 li
156.133 121.926 li
156.133 120.567 li
156.305 120.567 li
156.492 120.567 156.633 120.551 156.711 120.504 cv
156.773 120.473 156.805 120.395 156.805 120.286 cv
156.805 120.192 156.789 120.114 156.727 120.083 cv
156.68 120.036 156.539 120.02 156.32 120.02 cv
155.352 120.02 li
155.242 120.02 155.164 120.036 155.117 120.083 cv
155.07 120.129 155.055 120.192 155.055 120.286 cv
155.055 120.395 155.086 120.473 155.133 120.504 cv
155.195 120.551 155.305 120.567 155.461 120.567 cv
155.523 120.567 li
155.523 124.098 li
155.445 124.098 li
155.289 124.098 155.18 124.114 155.133 124.145 cv
155.07 124.192 155.055 124.254 155.055 124.364 cv
155.055 124.458 155.07 124.52 155.117 124.567 cv
155.164 124.614 155.242 124.645 155.336 124.645 cv
156.367 124.645 li
156.555 124.645 156.68 124.614 156.727 124.583 cv
156.789 124.536 156.805 124.473 156.805 124.364 cv
156.805 124.27 156.773 124.192 156.711 124.161 cv
156.648 124.114 156.539 124.098 156.398 124.098 cv
156.133 124.098 li
156.133 122.473 li
cp
f
163.418 124.645 mo
163.512 124.645 163.574 124.614 163.621 124.567 cv
163.668 124.52 163.684 124.458 163.684 124.364 cv
163.684 123.379 li
163.684 123.223 163.668 123.129 163.621 123.067 cv
163.59 123.02 163.527 122.989 163.418 122.989 cv
163.309 122.989 163.246 123.02 163.199 123.083 cv
163.168 123.129 163.137 123.254 163.137 123.458 cv
163.137 124.098 li
161.059 124.098 li
161.059 122.364 li
162.074 122.364 li
162.074 122.504 li
162.074 122.676 162.09 122.801 162.137 122.864 cv
162.168 122.926 162.23 122.958 162.324 122.958 cv
162.418 122.958 162.496 122.926 162.527 122.879 cv
162.559 122.817 162.574 122.692 162.574 122.504 cv
162.574 121.77 li
162.574 121.583 162.559 121.458 162.527 121.395 cv
162.496 121.348 162.418 121.301 162.34 121.301 cv
162.246 121.301 162.184 121.333 162.137 121.395 cv
162.09 121.442 162.074 121.536 162.074 121.692 cv
162.074 121.895 li
161.059 121.895 li
161.059 120.567 li
163.137 120.567 li
163.137 121.129 li
163.137 121.333 163.168 121.458 163.199 121.52 cv
163.246 121.567 163.309 121.598 163.418 121.598 cv
163.527 121.598 163.59 121.583 163.637 121.52 cv
163.668 121.473 163.684 121.379 163.684 121.239 cv
163.684 120.333 li
163.684 120.223 163.668 120.145 163.621 120.098 cv
163.574 120.036 163.512 120.02 163.418 120.02 cv
160.012 120.02 li
159.918 120.02 159.84 120.036 159.793 120.083 cv
159.746 120.129 159.715 120.192 159.715 120.286 cv
159.715 120.395 159.746 120.473 159.809 120.504 cv
159.871 120.551 159.996 120.567 160.199 120.567 cv
160.434 120.567 li
160.434 124.098 li
160.199 124.098 li
159.996 124.098 159.871 124.114 159.809 124.145 cv
159.746 124.192 159.715 124.254 159.715 124.364 cv
159.715 124.458 159.746 124.52 159.793 124.567 cv
159.84 124.614 159.918 124.645 160.012 124.645 cv
163.418 124.645 li
cp
f
167.344 119.958 mo
167.156 119.911 166.984 119.895 166.813 119.895 cv
166.172 119.895 165.641 120.129 165.203 120.583 cv
164.781 121.051 164.563 121.629 164.563 122.333 cv
164.563 123.036 164.781 123.614 165.203 124.083 cv
165.625 124.536 166.156 124.754 166.797 124.754 cv
167.047 124.754 167.281 124.723 167.484 124.661 cv
167.719 124.583 167.938 124.473 168.156 124.333 cv
168.328 124.223 168.438 124.145 168.5 124.067 cv
168.547 124.004 168.578 123.926 168.578 123.848 cv
168.578 123.77 168.562 123.708 168.5 123.645 cv
168.453 123.598 168.375 123.567 168.297 123.567 cv
168.234 123.567 168.156 123.614 168.031 123.708 cv
167.906 123.786 167.812 123.848 167.75 123.879 cv
167.594 123.973 167.438 124.036 167.281 124.083 cv
167.125 124.114 166.984 124.145 166.828 124.145 cv
166.359 124.145 165.984 123.973 165.703 123.629 cv
165.422 123.301 165.281 122.848 165.281 122.27 cv
165.281 121.723 165.422 121.254 165.703 120.926 cv
165.984 120.583 166.344 120.426 166.813 120.426 cv
167.062 120.426 167.281 120.489 167.469 120.598 cv
167.656 120.739 167.781 120.895 167.828 121.083 cv
167.828 121.129 167.844 121.176 167.859 121.254 cv
167.922 121.504 168.031 121.614 168.203 121.614 cv
168.313 121.614 168.391 121.598 168.422 121.551 cv
168.469 121.52 168.484 121.426 168.484 121.301 cv
168.484 121.348 168.484 121.239 168.484 121.02 cv
168.469 120.801 168.469 120.567 168.469 120.301 cv
168.469 120.161 168.453 120.067 168.422 120.02 cv
168.375 119.973 168.313 119.942 168.203 119.942 cv
168.125 119.942 168.062 119.958 168.016 119.989 cv
167.969 120.02 167.922 120.067 167.891 120.145 cv
167.703 120.067 167.516 120.004 167.344 119.958 cv
167.344 119.958 li
cp
f
170.66 122.864 mo
171.098 122.458 li
171.285 122.489 171.457 122.567 171.613 122.723 cv
171.785 122.879 171.941 123.114 172.113 123.411 cv
172.27 123.708 li
172.535 124.192 172.676 124.458 172.691 124.489 cv
172.738 124.551 172.785 124.598 172.816 124.614 cv
172.848 124.629 172.91 124.645 172.988 124.645 cv
173.363 124.645 li
173.457 124.645 173.52 124.614 173.566 124.567 cv
173.613 124.52 173.645 124.458 173.645 124.364 cv
173.645 124.254 173.613 124.192 173.551 124.145 cv
173.504 124.114 173.395 124.098 173.238 124.098 cv
173.16 124.098 li
172.707 123.254 172.379 122.723 172.176 122.473 cv
171.973 122.223 171.754 122.083 171.52 122.036 cv
173.035 120.567 li
173.098 120.567 li
173.238 120.567 173.348 120.551 173.426 120.504 cv
173.473 120.473 173.504 120.395 173.504 120.286 cv
173.504 120.208 173.488 120.129 173.441 120.083 cv
173.379 120.036 173.316 120.02 173.238 120.02 cv
172.082 120.02 li
171.988 120.02 171.91 120.036 171.863 120.083 cv
171.832 120.114 171.801 120.192 171.801 120.286 cv
171.801 120.395 171.832 120.458 171.895 120.504 cv
171.941 120.551 172.035 120.567 172.16 120.567 cv
172.301 120.567 li
170.66 122.161 li
170.66 120.567 li
170.848 120.567 li
171.035 120.567 171.176 120.551 171.238 120.504 cv
171.316 120.473 171.348 120.395 171.348 120.286 cv
171.348 120.192 171.316 120.114 171.27 120.083 cv
171.207 120.036 171.113 120.02 170.957 120.02 cv
169.613 120.02 li
169.535 120.02 169.457 120.036 169.426 120.083 cv
169.363 120.129 169.348 120.208 169.348 120.286 cv
169.348 120.395 169.363 120.473 169.426 120.504 cv
169.488 120.551 169.613 120.567 169.816 120.567 cv
170.051 120.567 li
170.051 124.098 li
169.676 124.098 li
169.566 124.098 169.473 124.114 169.426 124.161 cv
169.363 124.192 169.348 124.27 169.348 124.364 cv
169.348 124.458 169.363 124.52 169.426 124.567 cv
169.457 124.614 169.535 124.645 169.613 124.645 cv
170.957 124.645 li
171.113 124.645 171.207 124.614 171.27 124.583 cv
171.316 124.536 171.348 124.473 171.348 124.364 cv
171.348 124.27 171.316 124.192 171.254 124.161 cv
171.191 124.114 171.082 124.098 170.926 124.098 cv
170.66 124.098 li
170.66 122.864 li
cp
f
175.711 124.723 mo
175.898 124.754 176.086 124.786 176.273 124.786 cv
176.82 124.786 177.258 124.645 177.586 124.379 cv
177.914 124.114 178.07 123.77 178.07 123.333 cv
178.07 122.958 177.961 122.676 177.727 122.458 cv
177.492 122.223 177.148 122.098 176.695 122.036 cv
176.07 121.958 li
175.773 121.911 175.555 121.833 175.398 121.723 cv
175.258 121.598 175.18 121.458 175.18 121.254 cv
175.18 121.004 175.273 120.801 175.477 120.629 cv
175.664 120.489 175.93 120.411 176.242 120.411 cv
176.445 120.411 176.633 120.442 176.789 120.504 cv
176.961 120.583 177.07 120.692 177.164 120.817 cv
177.211 120.864 177.242 120.942 177.273 121.067 cv
177.352 121.254 177.461 121.348 177.602 121.348 cv
177.695 121.348 177.758 121.333 177.805 121.27 cv
177.867 121.223 177.898 121.145 177.898 121.067 cv
177.898 121.02 li
177.836 120.208 li
177.82 120.083 177.789 120.004 177.758 119.958 cv
177.711 119.926 177.633 119.911 177.508 119.911 cv
177.43 119.911 177.367 119.926 177.336 119.942 cv
177.289 119.989 177.273 120.036 177.273 120.114 cv
177.07 120.036 176.883 119.973 176.727 119.926 cv
176.57 119.895 176.414 119.879 176.273 119.879 cv
175.773 119.879 175.367 120.02 175.039 120.286 cv
174.711 120.551 174.555 120.879 174.555 121.286 cv
174.555 121.661 174.664 121.958 174.914 122.161 cv
175.164 122.379 175.57 122.52 176.102 122.583 cv
176.68 122.676 li
176.93 122.708 177.117 122.786 177.242 122.911 cv
177.367 123.036 177.43 123.192 177.43 123.411 cv
177.43 123.661 177.336 123.848 177.117 124.02 cv
176.914 124.176 176.633 124.254 176.305 124.254 cv
176.023 124.254 175.789 124.208 175.602 124.098 cv
175.398 124.004 175.258 123.864 175.164 123.692 cv
175.133 123.629 175.102 123.536 175.07 123.426 cv
175.008 123.208 174.898 123.098 174.742 123.098 cv
174.633 123.098 174.555 123.114 174.492 123.176 cv
174.445 123.223 174.43 123.301 174.43 123.442 cv
174.43 123.504 li
174.477 124.411 li
174.477 124.551 174.508 124.661 174.57 124.723 cv
174.617 124.786 174.695 124.817 174.805 124.817 cv
174.914 124.817 174.992 124.801 175.039 124.754 cv
175.086 124.708 175.102 124.614 175.117 124.504 cv
175.336 124.598 175.523 124.676 175.711 124.723 cv
175.711 124.723 li
cp
f
181.367 124.098 mo
181.367 120.567 li
182.242 120.567 li
182.445 120.567 182.57 120.551 182.633 120.504 cv
182.695 120.473 182.727 120.395 182.727 120.286 cv
182.727 120.192 182.695 120.129 182.648 120.083 cv
182.602 120.036 182.523 120.02 182.43 120.02 cv
179.711 120.02 li
179.602 120.02 179.523 120.036 179.477 120.083 cv
179.43 120.129 179.414 120.192 179.414 120.286 cv
179.414 120.395 179.43 120.473 179.492 120.504 cv
179.555 120.551 179.68 120.567 179.883 120.567 cv
180.758 120.567 li
180.758 124.098 li
179.883 124.098 li
179.68 124.098 179.539 124.114 179.492 124.145 cv
179.43 124.192 179.414 124.254 179.414 124.364 cv
179.414 124.458 179.43 124.52 179.477 124.567 cv
179.523 124.614 179.602 124.645 179.695 124.645 cv
182.242 124.645 li
182.445 124.645 182.57 124.614 182.633 124.583 cv
182.695 124.536 182.727 124.473 182.727 124.364 cv
182.727 124.254 182.695 124.192 182.633 124.145 cv
182.57 124.114 182.445 124.098 182.242 124.098 cv
181.367 124.098 li
cp
f
186.59 124.161 mo
186.434 124.192 186.277 124.208 186.121 124.208 cv
185.621 124.208 185.215 124.036 184.902 123.692 cv
184.59 123.348 184.434 122.864 184.434 122.286 cv
184.434 121.708 184.574 121.254 184.855 120.911 cv
185.137 120.583 185.512 120.411 185.98 120.411 cv
186.215 120.411 186.418 120.473 186.59 120.583 cv
186.777 120.692 186.918 120.848 187.012 121.067 cv
187.027 121.083 187.043 121.129 187.059 121.176 cv
187.121 121.348 187.215 121.426 187.355 121.426 cv
187.465 121.426 187.543 121.395 187.59 121.348 cv
187.621 121.286 187.652 121.208 187.652 121.083 cv
187.652 120.551 li
187.652 120.286 187.621 120.114 187.59 120.051 cv
187.543 119.973 187.465 119.926 187.34 119.926 cv
187.277 119.926 187.215 119.942 187.168 119.989 cv
187.121 120.004 187.074 120.051 187.059 120.129 cv
186.871 120.051 186.684 119.989 186.512 119.942 cv
186.324 119.895 186.152 119.879 185.965 119.879 cv
185.324 119.879 184.777 120.114 184.355 120.583 cv
183.934 121.051 183.73 121.629 183.73 122.364 cv
183.73 123.067 183.949 123.661 184.371 124.098 cv
184.809 124.536 185.371 124.77 186.059 124.77 cv
186.355 124.77 186.652 124.739 186.934 124.676 cv
187.215 124.598 187.434 124.536 187.574 124.442 cv
187.621 124.426 187.652 124.395 187.668 124.364 cv
187.684 124.348 187.699 124.286 187.699 124.223 cv
187.699 123.051 li
187.746 123.051 li
187.855 123.051 187.934 123.036 187.98 122.989 cv
188.012 122.958 188.043 122.879 188.043 122.786 cv
188.043 122.708 188.027 122.629 187.996 122.598 cv
187.965 122.551 187.918 122.536 187.84 122.536 cv
186.152 122.536 li
186.059 122.536 185.996 122.551 185.949 122.583 cv
185.918 122.614 185.902 122.692 185.902 122.786 cv
185.902 122.879 185.918 122.942 185.965 122.989 cv
185.996 123.02 186.059 123.051 186.137 123.051 cv
187.105 123.051 li
187.105 123.958 li
186.918 124.051 186.746 124.114 186.59 124.161 cv
186.59 124.161 li
cp
f
251.594 71.208 mo
251.594 130.458 li
211.621 130.458 li
211.621 71.208 li
211.121 71.208 li
211.121 130.958 li
252.094 130.958 li
252.094 71.208 li
251.594 71.208 li
0.619608 0.537255 0.498039 0.227451 cmyk
f
104.434 122.77 mo
106.184 123.563 107.621 122.11 109.086 121.84 cv
109.445 122.247 109.031 123.071 109.234 123.54 cv
110.297 124.309 112.363 124.028 113.148 125.083 cv
112.684 125.454 112.055 124.852 111.23 124.622 cv
109.809 124.223 108.258 124.465 108.789 122.383 cv
107.52 122.977 105.391 124.09 103.918 123.075 cv
103.418 123.329 103 123.665 102.438 123.848 cv
101.852 125.09 101.363 126.43 100.887 127.79 cv
99.8589 127.418 99.8281 126.012 98.5981 125.856 cv
98.395 126.161 98.3242 126.602 98.2271 127.016 cv
98.5161 127.094 98.8242 126.165 99.2622 126.399 cv
99.3008 126.989 98.6328 127.485 98.0781 127.711 cv
97.4688 127.321 97.9409 126.446 98.0781 125.778 cv
97.145 126.524 95.2539 127.352 93.4219 127.247 cv
92.7188 127.208 91.8198 127.032 91.2808 126.629 cv
89.9409 125.625 90.3008 122.997 91.207 121.766 cv
92.0508 120.622 93.2539 120.215 94.605 119.833 cv
95.02 119.157 95.2378 118.278 95.5659 117.52 cv
95.9839 117.485 96.0938 117.407 96.23 116.977 cv
98.418 116.122 100.945 115.625 102.73 114.348 cv
100.465 114.77 97.9771 115.528 95.6411 116.204 cv
94.8979 116.418 94.1519 116.805 93.4219 116.668 cv
93.5078 116.208 94.1172 116.153 94.4609 116.051 cv
95.6289 115.7 96.938 115.34 98.2271 114.969 cv
99.8979 114.489 101.691 113.801 103.398 113.965 cv
103.441 114.77 102.598 115.004 102.07 115.278 cv
100.461 116.114 98.2578 116.715 96.4531 117.442 cv
96.7539 118.442 97.4922 118.981 98.0781 119.68 cv
99.0469 119.672 99.8481 119.836 100.664 119.989 cv
101.543 118.922 102.27 117.493 103.102 116.282 cv
103.328 115.954 103.633 115.399 104.062 115.434 cv
103.926 116.333 103.168 116.981 102.66 117.75 cv
102.148 118.516 101.723 119.36 101.258 120.145 cv
101.801 120.524 102.691 120.547 102.879 121.301 cv
102.211 121.45 101.762 120.723 101.105 120.606 cv
100.16 121.75 99.6519 123.356 98.9648 124.774 cv
100.191 124.54 101.098 123.965 102.141 123.54 cv
102.559 122.575 103.141 121.958 103.25 120.606 cv
103.445 118.184 104.926 116.762 106.355 115.512 cv
106.43 115.125 106.66 114.903 106.797 114.586 cv
107.082 114.516 107.059 114.77 107.238 114.817 cv
108.742 113.727 111.527 112.993 114.035 113.192 cv
114.488 113.231 115.527 113.356 115.516 113.965 cv
115.496 114.942 113.938 116.071 113.227 116.668 cv
110.602 118.864 107.047 121.118 104.434 122.77 cv
112.188 113.735 mo
110.164 113.903 107.715 114.551 106.648 115.817 cv
106.012 116.571 105.707 117.688 105.172 118.676 cv
104.617 119.7 103.266 121.313 103.988 122.461 cv
107.004 120.61 110.047 118.688 112.707 116.516 cv
113.559 115.817 114.602 115.008 115 113.887 cv
114.121 113.547 113.121 113.657 112.188 113.735 cv
112.188 113.735 li
cp
103.844 120.219 mo
104.289 119.067 105.164 117.95 105.469 116.899 cv
104.785 117.809 103.898 118.915 103.844 120.219 cv
103.844 120.219 li
cp
95.1992 119.754 mo
95.8521 119.614 96.7148 119.696 97.3398 119.524 cv
96.8091 119 96.3672 118.379 95.938 117.75 cv
95.7461 118.481 95.4219 119.067 95.1992 119.754 cv
95.1992 119.754 li
cp
95.0508 120.219 mo
94.7578 120.75 94.645 121.446 94.4609 122.149 cv
94.2969 122.774 94.2539 123.653 93.7188 123.926 cv
93.5308 122.872 94.1948 121.465 94.4609 120.375 cv
92.4492 120.782 90.7769 122.301 90.8398 124.543 cv
90.8828 126.204 92.1289 126.797 93.8672 126.786 cv
97.5552 126.75 100.25 123.45 97.7808 120.145 cv
97.0552 119.997 96.0039 120.168 95.0508 120.219 cv
95.0508 120.219 li
cp
99.2622 123 mo
99.6558 122.125 100.09 121.293 100.52 120.454 cv
99.875 120.274 99.105 120.227 98.375 120.145 cv
98.8242 120.934 99.1128 121.891 99.2622 123 cv
99.2622 123 li
cp
102.879 123.075 mo
103.152 123.028 103.312 122.86 103.547 122.77 cv
103.496 122.54 103.527 122.223 103.324 122.149 cv
103.203 122.489 103.008 122.75 102.879 123.075 cv
102.879 123.075 li
cp
98.8198 125.469 mo
99.8052 125.649 100.148 126.5 100.738 127.094 cv
100.902 126 101.332 125.192 101.773 124.387 cv
101.762 124.297 101.75 124.208 101.625 124.235 cv
100.852 124.817 99.645 124.942 98.8198 125.469 cv
98.8198 125.469 li
cp
0.8 0.415686 0.152941 0 cmyk
ef
118.5 100.942 mo
118.5 100.446 li
102.531 100.446 li
102.531 100.942 li
102.996 100.762 li
101.875 97.895 99.0698 95.8677 95.7808 95.8677 cv
93.6479 95.8677 91.707 96.7271 90.3052 98.1138 cv
88.9063 99.5005 88.0352 101.422 88.0352 103.54 cv
88.0352 103.567 li
88.0469 103.786 li
88.0352 104.008 li
88.0352 104.036 li
88.0352 106.153 88.9063 108.075 90.3052 109.461 cv
91.707 110.844 93.645 111.704 95.7808 111.704 cv
98.832 111.704 101.461 109.958 102.723 107.422 cv
102.277 107.2 li
102.277 107.7 li
103.609 107.7 li
103.859 107.7 104.074 107.516 104.105 107.266 cv
104.133 107.075 104.242 106.883 104.445 106.731 cv
104.645 106.583 104.922 106.477 105.242 106.481 cv
105.559 106.477 105.84 106.583 106.039 106.731 cv
106.238 106.883 106.352 107.075 106.379 107.266 cv
106.41 107.516 106.621 107.7 106.871 107.7 cv
108.34 107.7 li
108.59 107.7 108.801 107.516 108.836 107.266 cv
108.859 107.075 108.973 106.883 109.172 106.731 cv
109.371 106.583 109.652 106.477 109.973 106.481 cv
110.289 106.477 110.566 106.583 110.766 106.731 cv
110.969 106.883 111.078 107.075 111.105 107.266 cv
111.137 107.516 111.352 107.7 111.602 107.7 cv
113.07 107.7 li
113.32 107.7 113.531 107.516 113.566 107.266 cv
113.59 107.075 113.703 106.883 113.902 106.731 cv
114.102 106.583 114.383 106.477 114.699 106.481 cv
115.02 106.477 115.297 106.583 115.496 106.731 cv
115.695 106.883 115.809 107.075 115.836 107.266 cv
115.871 107.516 116.082 107.7 116.332 107.7 cv
117.352 107.7 li
117.496 107.7 117.633 107.637 117.73 107.528 cv
121.492 103.219 li
121.57 103.125 121.613 103.012 121.613 102.891 cv
121.613 102.395 li
121.613 102.211 121.516 102.043 121.355 101.958 cv
118.742 100.508 li
118.5 100.446 li
118.5 100.942 li
118.258 101.383 li
120.613 102.688 li
120.613 102.704 li
117.125 106.7 li
116.332 106.7 li
116.332 107.2 li
116.824 107.133 li
116.758 106.641 116.48 106.223 116.102 105.934 cv
115.719 105.645 115.23 105.481 114.699 105.481 cv
114.172 105.481 113.68 105.645 113.301 105.934 cv
112.918 106.219 112.641 106.641 112.574 107.133 cv
113.07 107.2 li
113.07 106.7 li
111.602 106.7 li
111.602 107.2 li
112.098 107.133 li
112.031 106.641 111.75 106.223 111.371 105.934 cv
110.988 105.645 110.5 105.481 109.973 105.481 cv
109.441 105.481 108.953 105.645 108.57 105.934 cv
108.191 106.223 107.91 106.641 107.844 107.133 cv
108.34 107.2 li
108.34 106.7 li
106.871 106.7 li
106.871 107.2 li
107.367 107.133 li
107.301 106.641 107.023 106.219 106.641 105.934 cv
106.262 105.645 105.77 105.481 105.242 105.481 cv
104.711 105.481 104.223 105.645 103.84 105.934 cv
103.461 106.219 103.18 106.641 103.113 107.133 cv
103.609 107.2 li
103.609 106.7 li
102.277 106.7 li
102.086 106.7 101.914 106.805 101.828 106.977 cv
100.73 109.184 98.4409 110.704 95.7808 110.704 cv
93.9141 110.704 92.23 109.958 91.0122 108.75 cv
89.7891 107.54 89.0352 105.875 89.0352 104.036 cv
88.5352 104.036 li
89.0352 104.063 li
89.0508 103.813 li
89.0469 103.758 li
89.0352 103.512 li
88.5352 103.54 li
89.0352 103.54 li
89.0352 101.696 89.7891 100.036 91.0122 98.8247 cv
92.23 97.6177 93.9141 96.8677 95.7808 96.8677 cv
98.6519 96.8677 101.09 98.6372 102.066 101.125 cv
102.141 101.317 102.324 101.442 102.531 101.442 cv
118.5 101.442 li
118.5 100.942 li
118.258 101.383 li
118.5 100.942 li
0.733333 0.705882 0.654902 0.776471 cmyk
f
121.113 102.395 mo
102.531 101.442 li
101.484 98.7622 98.8589 96.8638 95.7808 96.8638 cv
91.7808 96.8638 88.5352 100.075 88.5352 104.036 cv
88.5352 107.993 91.7808 111.204 95.7808 111.204 cv
98.6372 111.204 101.094 109.571 102.277 107.2 cv
103.609 107.2 li
103.703 106.516 104.395 105.981 105.242 105.981 cv
106.09 105.981 106.781 106.516 106.871 107.2 cv
108.34 107.2 li
108.434 106.516 109.121 105.981 109.973 105.981 cv
110.816 105.981 111.508 106.516 111.602 107.2 cv
113.07 107.2 li
113.16 106.516 113.852 105.981 114.699 105.981 cv
115.547 105.981 116.238 106.516 116.332 107.2 cv
117.352 107.2 li
121.113 102.891 li
121.113 102.395 li
0.823529 0.192157 1 0.0392157 cmyk
f
121.113 102.395 mo
121.121 102.243 li
102.539 101.29 li
102.531 101.442 li
102.672 101.387 li
101.602 98.6528 98.9219 96.7153 95.7808 96.7153 cv
93.7422 96.7153 91.8911 97.5356 90.5508 98.8599 cv
89.2148 100.18 88.3872 102.012 88.3872 104.036 cv
88.3872 106.055 89.2148 107.887 90.5508 109.211 cv
91.8911 110.536 93.7422 111.352 95.7808 111.352 cv
98.6948 111.352 101.203 109.688 102.41 107.266 cv
102.277 107.2 li
102.277 107.348 li
103.609 107.348 li
103.758 107.219 li
103.836 106.629 104.453 106.129 105.242 106.129 cv
106.027 106.129 106.648 106.629 106.723 107.219 cv
106.871 107.348 li
108.34 107.348 li
108.488 107.219 li
108.566 106.629 109.184 106.129 109.973 106.129 cv
110.758 106.129 111.375 106.629 111.453 107.219 cv
111.602 107.348 li
113.07 107.348 li
113.219 107.219 li
113.293 106.629 113.914 106.129 114.699 106.129 cv
115.488 106.129 116.105 106.629 116.184 107.219 cv
116.332 107.348 li
117.352 107.348 li
117.465 107.297 li
121.227 102.989 li
121.266 102.891 li
121.266 102.395 li
121.121 102.243 li
121.113 102.395 li
120.965 102.395 li
120.965 102.833 li
117.285 107.051 li
116.332 107.051 li
116.332 107.2 li
116.48 107.18 li
116.371 106.403 115.609 105.829 114.699 105.829 cv
113.793 105.829 113.027 106.403 112.922 107.18 cv
113.07 107.2 li
113.07 107.051 li
111.602 107.051 li
111.602 107.2 li
111.75 107.18 li
111.641 106.403 110.879 105.829 109.973 105.829 cv
109.062 105.829 108.301 106.403 108.191 107.18 cv
108.34 107.2 li
108.34 107.051 li
106.871 107.051 li
106.871 107.2 li
107.02 107.18 li
106.914 106.403 106.148 105.829 105.242 105.829 cv
104.332 105.829 103.57 106.403 103.461 107.18 cv
103.609 107.2 li
103.609 107.051 li
102.277 107.051 li
102.141 107.133 li
100.984 109.454 98.5781 111.055 95.7808 111.055 cv
93.8198 111.055 92.0469 110.266 90.7661 108.997 cv
89.48 107.727 88.688 105.973 88.688 104.036 cv
88.688 102.098 89.48 100.344 90.7661 99.0708 cv
92.0469 97.8013 93.8198 97.0161 95.7808 97.0161 cv
98.7969 97.0161 101.367 98.8755 102.391 101.497 cv
102.523 101.59 li
121.105 102.543 li
121.113 102.395 li
120.965 102.395 li
121.113 102.395 li
f
gsave
88 96.0981 mo
122 96.0981 li
122 110.782 li
88 110.782 li
88 96.0981 li
cp
clp
118.5 100.942 mo
102.531 100.942 li
101.484 98.2661 98.8589 96.3677 95.7808 96.3677 cv
91.7808 96.3677 88.5352 99.5786 88.5352 103.54 cv
88.5352 107.497 91.7808 110.708 95.7808 110.708 cv
98.6372 110.708 101.094 109.075 102.277 106.704 cv
103.609 106.704 li
103.703 106.02 104.395 105.485 105.242 105.485 cv
106.09 105.485 106.781 106.02 106.871 106.704 cv
108.34 106.704 li
108.434 106.02 109.121 105.485 109.973 105.485 cv
110.816 105.485 111.508 106.02 111.602 106.704 cv
113.07 106.704 li
113.16 106.02 113.852 105.485 114.699 105.485 cv
115.547 105.485 116.238 106.02 116.332 106.704 cv
117.352 106.704 li
121.113 102.395 li
118.5 100.942 li
cp
clp
88 96.0981 mo
122 96.0981 li
122 111.098 li
88 111.098 li
88 96.0981 li
cp
clp
88 96.0981 mo
122 96.0981 li
122 111.098 li
88 111.098 li
88 96.0981 li
cp
clp
118.5 100.942 mo
102.531 100.942 li
101.484 98.2661 98.8589 96.3677 95.7808 96.3677 cv
91.7808 96.3677 88.5352 99.5786 88.5352 103.54 cv
88.5352 107.497 91.7808 110.708 95.7808 110.708 cv
98.6372 110.708 101.094 109.075 102.277 106.704 cv
103.609 106.704 li
103.703 106.02 104.395 105.485 105.242 105.485 cv
106.09 105.485 106.781 106.02 106.871 106.704 cv
108.34 106.704 li
108.434 106.02 109.121 105.485 109.973 105.485 cv
110.816 105.485 111.508 106.02 111.602 106.704 cv
113.07 106.704 li
113.16 106.02 113.852 105.485 114.699 105.485 cv
115.547 105.485 116.238 106.02 116.332 106.704 cv
117.352 106.704 li
121.113 102.395 li
118.5 100.942 li
clp
88 96.0981 mo
122 96.0981 li
122 111.098 li
88 111.098 li
88 96.0981 li
cp
clp
88.5352 96.3677 mo
121.113 96.3677 li
121.113 110.708 li
88.5352 110.708 li
88.5352 96.3677 li
cp
clp
gsave
88.3198 110.938 mo
88.3198 96.2974 li
121.2 96.2974 li
121.2 110.938 li
88.3198 110.938 li
cp
clp
87.1152 112.239 mo
87.1152 95.4388 li
123.595 95.4388 li
123.595 112.239 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 140.942 ]ct
[36.48 0 0 -16.8 87.1152 45.5031 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 76 
/H 35 
/M[76 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 76 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 76 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 76 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 76 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&RfF;$UnXQUT:VUCR$X/)PEM&hO,]'TM2$_:/:rG&IXHHdG'.kHE,KH*BP1mf@UEGH>?P$,
;c$4_8kDNA6pX""4#o/S1,--:!!2rsrl.:D_nj.&]XkY_[C!<HYck10Wi2ekUS+6NS!o_2P`h2kNf/aM
L4b&-IXHEbF`VP?D/3csA7AnO>Zk*+;GTqW7n(K!kQ"&IUnXQUT:VUCR$X/)PEM&hO,]'TM2$_:Jq8E#
I!U$\F`VSBDJNs"B4YX`?X?uA=]\R$:ej\V8Ol3;5s@Fn3AiTJ0]<#_!!!&s!<0u)`P]O-^:_%f\$`TM
ZEUO7X/`+qV5']USsu19Q^!YrOH,6ULk^P5J:;lkGBItHDJa0%B4PIY?!LN5;c6Ca8Ol5G!4Dk`Unj`Y
TV%gHS!]P/Q'7AnO,o9YMM[(AK7\Z(IXHHdG'.kHE,KH*BP1mf@UEGH>?P$,&Q;M$9M.lH779F*4ZbY]
1GUYm!!!&s!<0tS`P]O-^:_%f\$`TMZEUO7X/`+qV5']U.\<,uR$X&#P)t]^M26n=JUi2sH$=CPEGfW/
B4kaa?X6o><`;ml91_WBY5nTu6_^9IT:VUCR$X/)PEM&hO,]'TM2$_:Jq8E#I!U$\F`VSBDJNs"B4YX`
?X?uA=]\R$:ej\V8Ol3;5s@Fn3AiTJ0ZF+_!!!&s!<0u)`P]O-^:_%f\$`TMZEUO7X/`+qV5']USsu19
Q^!YrOH,6ULk^P5J:;lkGBItHDJa0%B4PIY?!LN5;c6Ca8Ol5,!7:d8Unj`YTV%gHS!]P/Q'7AnO,o9Y
MM[(AK7\Z(IXHHdG'.kHE,KH*BP1mf@UEGH>?P$,;c$4_8kDNA6pX""4#o/S1,/J'^An67qZ-W81<%/I
^qRIm\[SuR['Hp>XfJJ#VPU&\T:VO@R$X&#P)t]^M26n=JUi2sH$=CPEGfW/%qfNc@UEDG=]SI!:J48L
7BZ\2Unj`YTV%gHS!]P/Q'7AnO,o9YMM[(AK7\Z(IOKSiG]n4NEc>o3BkV-jAR]"Q>[(?4<)ZUg9M.lH
779F*4ZbY]1GUYm!!!&s!<0t<`BhDX^qRIm\[SuR['Hp>XfJJ#VPU&\T:VO@R$X&#P)t]^M26n=JUi2s
H$=CPEGfW/B4kaa?X6o><`;ml91_WB_uT-(7AQ`RTqJ$LSXZ"5Q^*btOcPQ_Mi*@GKnFu.IsuckG]n4N
Ec>o3BkV-jAR]"Q>[(?4<)ZUg9M.lH779F*4ZbY]1GUZ?!87DQ!W)lr`^7Y^_8*dt]",;X['[-CYH=k*
W2?DdTV%gFR[BG+P*1oeMi!7EK7SQ%I!KpYF)c)7CM.9j@UEDG=]SI!:J48L7J6_m!&p^LU7n6PSt2@<
Q^<u$P*(fdNJi[NL4t83JU`,rH?aUUF)l5;CM@HpAS#=X?<g];=&`*p:.u*h8Ol3;5s@Fn3AiTJ0X^r]
!W)lr`Z)n7_8*dt]",;X['[-CYH=k*W2?DdTV%gFR[>FgP`h2kNf/aML4b&-IXHEbF`VP?D/3csA7AnO
>Zk*+;GTqW7n'T]"f.rgTqJ#BSt2@<Q^<u$P*(fdNJi[NL4t83JU`,rH?aUUF)l5;CM@HpAS#=X?<g];
=&`*p:/"8O7n#g35!:tf2)@!A_>s6/!!2rsrl.:D_nj.&]XkY_[C!<HYck10Wi2ekUS+6NS!o_2P`h2k
Nf/aML4b&-IXHEbF`VP?D/3csA7AnO>Zk*+;GTqW7n)/4eGr%6UnXQUT:VUCR$X/)PEM&hO,]'TM2$_:
Jq8E#I!U$\F`VSBDJNs"B4YX`?X?uA=]\R$:ej\V8Ol3;5s@Fn3AiTJ0_>@_!!!&s!<0tr`P]O-^:_%f
\$`TMZEUO7X/`+qV5']USsu19Q^!YrOH,6ULk^P5J:;lkGBItHDJa0%B4PHZ?X6o><`;ml91_WBY5f]@
UnXQUT:VUCR$X/)PEM&hO,]'TM2$_:Jq8E#I!U$\,^"0KE,KH*BP1mf@UEGH>?P$,;c$4_8kDNA6pX""
4#o/S1,--:!!2rsrl,)[_nj.&4hSA:\$`TMZEUO7X/`+qV5']USsu19Q^!YrOH,6ULk^P5J:;lkGBItH
DJa0%B4PIY?!LN5;c6Ca8Ol4b!:TtWUnj`YTV%gHS!]P/Q'7AnO,o9YMM[(AK7\Z(IXHHdG'.kHE,KH*
BP1mf@UEGH>?P$,;c$4_8kDNA6pX""4#o/S1,/Y,\c;^2qZ-W8/]GWD^qRIm\[SuR['Hp>XfJJ#VPU&\
T:VO@R$X&#P)t]^M26n=JUi2sH$=BFF)c)7CM.9j@UEDG=]SI!:J48L7BZ\-Unj`YTV%gHS!]P/Q'7An
O,o9YMM[(A/VAY+IsuckG]n4NEc>o3BkV-jAR]"Q>[(?4<)ZUg9M.lH779F*4ZbY]1GUYm!!!&t!!!#u
`^7Y^_8*dt]",;X['[-CYH=k*W2?DdTV%gFR[BG+P*1oeMi!7EK7SQ%I!KpYF)c)7CM.9j@UEDG=]SI!
:J48L7EGPm!(E]ZU7n6PSt2@<Q^<u$P*(fdNJi[NL4t83JU`,rH?aUUF)l5;CM@HpAS#=X?<g];=&`*p
:/"8O7n#g35!:tf2)@!AiW.L/!!2rsrl.:D_nj.&]XkY_[C!<HYck10Wi2ekUS+6NS!o_2P`h2kNf/aM
L4b&-IXHEbF`VP?D/3csA7AnO>Zk*+;GTqW7n*:T[/_tXUnXQUT:VUCR$X/)PEM&hO,]'TM2$_:Jq8E#
I!U$\F`VSBDJNs"B4YX`?X?uA=]Z58;c$4_8kDNA6pX""4#o/S1,--:!!2rsrl,_m_nj.&]XkY_[C!<H
Yck10Wi2ekUS'-0Ssu19Q^!YrOH,6ULk^P5J:;lkGBItHDJa0%B4PIY?!LN5;c6Ca8Ol4Q!!&f_UnXQU
T:VUCR$X/)PEM&hO,]'TM2$_:Jq8E#I!U$\F`VSBDJNs"B4YX`?X?uA=]\R$:ej\V8Ol3;5s@Fn3AiTJ
0ZO1_!!!&s!<0u)`P]O-^:_%f\$`TMZEUO7X/`+qV5']USsu19Q^!YrOH,6ULk^P5J:;lkGBItHDJa0%
B4PIY?!LN5;c6Ca8Ol5-!71^7Unj`YTV%gHS!]P/Q'7AnO,o9YMM[(AK7\Z(IXHHdG'.kHE,KH*BP1mf
@UEGH>?P$,;c$4_8kDNA6pX""4#o/S1,/M(^&S-6qZ-W80u_&H^qRIm\[SuR['Hp>XfJJ#VPU&\T:VO@
R$X&#P)t]^M26n=JUi2sH$=CPEGfV)CM.9j@UEDG=]SI!:J48L7BZ\1Unj`YTV%gHS!]P/Q'7AnO,o9Y
MM[(AK7\Z(.=QYjG]n4NEc>o3BkV-jAR]"Q>[(?4<)ZUg9M.lH779F*4ZbY]1GUYm!!!&s!<0u)`P]O-
^:_%f\$`TMZEUO7X/`+qV5']USsu19Q^!YrOH,6ULk^P5J:;lkGBItHDJa0%B4PIY?!LN5;c6Ca8Ol4g
!:'VRUnj`YTV%gHS!]P/Q'7AnO,o9YMM[(AK7\Z(IXHHdG'.kHE,KH*BP1mf@UEGH>?P$,;c$4_8kDNA
6pX""4#o/S1,.Pbf`2!QqZ-W86H-jY^qRIm\[SuR['Hp>XfJJ#VPU&\T:VO@R$X&#P)t]^M26n=JUi2s
H$=CPEGfW/B4kaa?X6o><`;ml91_WBpAh`(2Pd.CTqJ$LSXZ"5Q^*btOcPQ_Mi*@GKnFu.IsuckG]n4N
Ec>o3BkV-jAR]"Q>[(?4<)ZUg%STJd7n#g35!:tf2)@!A[K$:.qZ-W8)TBV1^qRIm\[SuR['Hp>XfJJ#
VPU&\T:VO@-^^6bP*1oeMi!7EK7SQ%I!KpYF)c)7CM.9j@UEDG=]SI!:J48L7BZ[oUnj`YTKo-@SXZ"5
Q^*btOcPQ_Mi*@GKnFu.IsuckG]n4NEc>o3BkV-jAR]"Q>[(?4<)ZUg9M.lH779F*4ZbY]1GUZ%!;$6k
!W)lr`^7Y^_8*dt]",;X['[-CYH=k*W2?DdTV%gFR[BG+P*1oeMi!7EK7SQ%I!KpYF)c)7CM.9j@UEDG
=]SI!:J48L7GImm!(E]ZU7n6PSt2@<Q^<u$P*(fdNJi[NL4t83JU`,rH?aUUF)l5;CM@HpAS#=X?<g];
=&`*p:/"8O7n#g35!:tf2)@!Ao`2i/!!2rsrl-h7_nj.&]XkY_[C!<HYck10Wi2ekUS+6NS!o_2P`h2k
Nf/aML4b&-IXHEbF`VP?D/3csA.2pS?!LN5;c6Ca8Ol4Q!$A#4U7n6PSt2@<Q^<u$P*(fdNJi[NL4t83
JU`,rH?^`ZF`VSBDJNs"B4YX`?X?uA=]\R$:ej\V8Ol3;5s@Fn3AiTJ0X^r]!W)lr`WO2t_8&7K]XkY_
[C!<HYck10Wi2ekUS+6NS!o_2P`h2kNf/aML4b&-IXHEbF`VP?D/3csA7AnO>Zk*+;GTqW7n(5omf5eP
UnXQUT:VUCR$X/)PEM&hO,]'TM2$_:Jq8E#I!U$\F`VSBDJNs"B4YX`?X?uA=]\R$:ej\V8Ol3;5s@Fn
3AiTJ0\QN_!!!&s!<0u)`P]O-^:_%f\$`TMZEUO7X/`+qV5']USsu19Q^!YrOH,6ULk^P5J:;lkGBItH
DJa0%B4PIY?!LN5;c6Ca8Ol5@!5/@nUnj`YTV%gHS!]P/Q'7AnO,o9YMM[(AK7\Z(IXHHdG'.kHE,KH*
BP1mf@UEGH>?P$,;c$4_8kDM[779F*4ZbY]1GUYm!!!&u!<3&u`^7Y^_8*dt]",;X['[-CYH=k*W2?Dd
TV%gFR[BG+P*1oeMi!7EK7SQ%I!KpYF)c)7CM.9j@UEDG=]SI!:J48L7EPVm!(E]ZU7n6PSt2@<Q^<u$
P*(fdNJi[NL4t83JU`,rH?aUUF)l5;CM@HpAS#=X?<g];=&`*p:/"8O7n#g35!:tf2)@!AirIR/!!2rs
rl.:D_nj.&]XkY_[C!<HYck10Wi2ekUS+6NS!o_2P`h2kNf/aML4b&-IXHEbF`VP?D/3csA7AnO>Zk*+
;GTqW7n*=UZiDhVUnXQUT:VUCR$X/)PEM&hO,]'TM2$_:Jq8E#I!U$\F`VSBDJNs"B4YX`?X?uA=VFk9
;c$4_8kDNA6pX""4#o/S1,--:!!2rsrl,\l_nj.&]XkY_[C!<HYck10Wi2ekUF`(1Ssu19Q^!YrOH,6U
Lk^P5J:;lkGBItHDJa0%B4PIY?!LN5;c6Ca8Ol4Q!(E]ZU7n6PSt2@<Q^<u$P*(fdNJi[NL4t83JU`,r
H?aUUF)l5;CM@HpAS#=X?<g];=&`*p:/"8O7n#g35!:tf2)@!Aa8kZ/!!2rsrl.:D_nj.&]XkY_[C!<H
Yck10Wi2ekUS+6NS!o_2P`h2kNf/aML4b&-IXHEbF`VP?D/3csA7AnO>Zk*+;GTqW7n)A:cN$D0UnXQU
T:VUCR$X/)PEM&hO,]'TM2$_:Jq8E#I!U$\F`VSBDJNs"B4YX`?X?uA=]\R$:ej\V8Ol3;5s@Fn3AiTJ
0_td_!!!&s!<0tl`P]O-^:_%f\$`TMZEUO7X/`+qV5']USsu19Q^!YrOH,6ULk^P5J:;lkGBItHD@p`$
B4kaa?X6o><`;ml91_WBY5fK:UnXQUT:VUCR$X/)PEM&hO,]'TM2$_:Jq5D$IXHHdG'.kHE,KH*BP1mf
@UEGH>?P$,;c$4_8kDNA6pX""4#o/S1,--:!!2rss2IFG`P]O-^:_%f\$`TMZEUO7X/`+qV5']USsu19
Q^!YrOH,6ULk^P5J:;lkGBItHDJa0%B4PIY?!LN5;c6Ca8Ol4h!9sPQUnj`YTV%gHS!]P/Q'7AnO,o9Y
MM[(AK7\Z(IXHHdG'.kHE,KH*BP1mf@UEGH>?P$,;c$4_8kDNA6pX""4#o/S1,.ScfDkmPqZ-W86H-jY
^qRIm\[SuR['Hp>XfJJ#VPU&\T:VO@R$X&#P)t]^M26n=JUi2sH$=CPEGfW/B4kaa?X6o><`;ml91_WB
p].f(25I%BTqJ$LSXZ"5Q^*btOcPQ_Mi*@GKnFu.IsuckG]n4NEc>o3BkV-jAR]"Q>[(?4<)ZU(:/"8O
7n#g35!:tf2)@!A[K$:.qZ-W8)9'M0^qRIm\[SuR['Hp>XfJJ#VPU&\T:VN#R[BG+P*1oeMi!7EK7SQ%
I!KpYF)c)7CM.9j@UEDG=]SI!:J48L7B6E?!.k4$!.Y~>

%%EndBinary
grestore
np
grestore
grestore
gsave
89 96.7817 mo
121 96.7817 li
121 110.782 li
89 110.782 li
89 96.7817 li
cp
clp
95.7808 110.129 mo
92.105 110.129 89.1172 107.172 89.1172 103.54 cv
89.1172 99.9067 92.105 96.9458 95.7808 96.9458 cv
98.5508 96.9458 100.988 98.6021 101.992 101.157 cv
102.137 101.524 li
118.348 101.524 li
120.203 102.551 li
117.09 106.122 li
116.758 106.122 li
116.426 105.403 115.625 104.903 114.699 104.903 cv
113.777 104.903 112.973 105.403 112.641 106.122 cv
112.031 106.122 li
111.695 105.403 110.895 104.903 109.973 104.903 cv
109.051 104.903 108.246 105.403 107.91 106.122 cv
107.301 106.122 li
106.969 105.403 106.164 104.903 105.242 104.903 cv
104.32 104.903 103.516 105.403 103.184 106.122 cv
101.918 106.122 li
101.758 106.442 li
100.625 108.715 98.3359 110.129 95.7808 110.129 cv
95.7808 110.129 li
cp
clp
89 96.0981 mo
121 96.0981 li
121 111.098 li
89 111.098 li
89 96.0981 li
cp
clp
89 96.0981 mo
121 96.0981 li
121 111.098 li
89 111.098 li
89 96.0981 li
cp
clp
95.7808 110.129 mo
92.105 110.129 89.1172 107.172 89.1172 103.54 cv
89.1172 99.9067 92.105 96.9458 95.7808 96.9458 cv
98.5508 96.9458 100.988 98.6021 101.992 101.157 cv
102.137 101.524 li
118.348 101.524 li
120.203 102.551 li
117.09 106.122 li
116.758 106.122 li
116.426 105.403 115.625 104.903 114.699 104.903 cv
113.777 104.903 112.973 105.403 112.641 106.122 cv
112.031 106.122 li
111.695 105.403 110.895 104.903 109.973 104.903 cv
109.051 104.903 108.246 105.403 107.91 106.122 cv
107.301 106.122 li
106.969 105.403 106.164 104.903 105.242 104.903 cv
104.32 104.903 103.516 105.403 103.184 106.122 cv
101.918 106.122 li
101.758 106.442 li
100.625 108.715 98.3359 110.129 95.7808 110.129 cv
clp
89 96.0981 mo
121 96.0981 li
121 111.098 li
89 111.098 li
89 96.0981 li
cp
clp
89.1172 96.9458 mo
120.203 96.9458 li
120.203 110.129 li
89.1172 110.129 li
89.1172 96.9458 li
cp
clp
gsave
89.04 110.217 mo
89.04 96.7778 li
120.24 96.7778 li
120.24 110.217 li
89.04 110.217 li
cp
clp
88.0127 111.217 mo
88.0127 95.8573 li
122.573 95.8573 li
122.573 111.217 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 140.942 ]ct
[34.56 0 0 -15.36 88.0127 45.0846 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 72 
/H 32 
/M[72 0 0 -32 0 32 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 72 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 72 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 72 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 72 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&])XfE0JbRH4$5_m6:FC98k`#X;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_
P*;2u#ah$MSXuLJU87YdrrK_3-UU?p9M\Ma='/X2@:Nk]C2@a+F*)VNI!pHpKSG;?MiNm^Pa7]*RMhWe
T;/3YWN*##Xg,4>['mHS]=u%q_o0O6ZN(ap0JbRH4$5_m6:FC98k`#X;cQq'>[8gd@:Nn^BPD:#E,p#B
GBnO`IXm!%KnbGAMiEaYOckooQ^F22SXuLJU87YdrrK_3"[baN9M\MI;cd()>[_,RB527"E-$,FG^Opg
JV8c6MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>['mHS]=u%q_o0O6^&[j,5qjuK2*!`\5<qP(7nH<H:Jk%j
=B\s8?X[GVB4u!qDK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7ETq\@[!<3)O!9F2H6UjX@:Jk%l
=B\s<@qB:fCi+-4FE_tWI=?a#L5:_FNf]EgQC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b^VIb*`Q$g9e,Vcg
0JbRH4$5_m6:FC98k`#X;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_P*;2uR$jJ8StMdO
V#(/l!Vl`5!'in@8PDoW;cd()>[_,RB527"E-$,FG^OpgJV8c6MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>
['mHS]=u%q_o0Lo`j5Xu0JG:?3BK>f5XIn08P2ZP;,^Is>$P??@:Nn^BPD:#E,p#BGBnO`IXm!%KnbGA
&W;X/OHG]iQC!u,S=Q7ETq\@[!<3)3!$4Ks8PDoW;cd()>[_,RB527"E-$,FG^OpgJV8c6MB[t=OHPio
R$sJ6StDdRV5^JqXKAb6['[9N\\#Sj^r++0`j5XS0JG:?3BK>f5XIn08P1d4:Jk%j=B\s8?X[GVB4u!q
DK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7ETq\@[!<3)6!<)sa6UjX@:Jk%l=B\s<@qB:fCi+-4
FE_tWI=?a#L5:_FNf]EgQC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b^VIb*`Q#pum/TF+0JbRH4$5_m6:FC9
8k`#X;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_P*;2uR$jJ8StMdOV#(/l!T3t5!'rtA
8PDoW;cd()>[_,RB527"E-$,FG^OpgJV8c6MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>['mHS]=u%q_o0O6
klAm,5qjuK2*!`\5<qP(7nH<H:Jk%j=B\s8?X[GVB4u!qDK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,
S=Q7ETq\@[!!!$"!P8=j6UjX@:Jk%l=B\s<@qB:fCi+-4FE_tWI=?a#L5:_FNf]EgQC+,0S=Z@JUnt&j
X/rG.Za@*J$+IIW^;%J$`5Ta&!%'BR1Gq0S4?l(t77TpA9M\Ma<ENF0?!h#MAnPdkCi434F*2\PHQ%<]
J:W?,L5CeGNK0*_P*;2uR$jJ8StMdOV#(/l!P8=H6UjX@:Jk%l=B\s<@qB:fCi+-4FE]6[I!pHpKSG;?
MiNm^Pa7]*R[ftAUSO`cWiN5'Z*UgE[^WfZ^;%J$`5Ta&!!Fu01Gq0T4$5_m6:FC98k`#X;cQq'>[:]F
@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_P*;2uR$jJ8StMdOV#(/l!QP35!'rtA8PDoW;cd()>[_,R
B527"E-$,FG^OpgJV8c6MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>['mHS]=u%q_o0O6ciE,,5qjuK2*!`\
5<qP(7nH<H:Jk%j=B\s8?X[GVB4u!qDK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7ETq\@[!<3)a
!7Lp66UjX@:Jk%l=B\s<@qB:fCi+-4FE_tWI=?a#L5:_FNf]EgQC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b
^VIb*`Q%HK_>leS0JbRH4$5_m6:FC98k`#X;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_
P*;2uR$jJ8StMbXU87YdrrK_3/ji*"9M\Ma='/X2@:Nk]C2@a+F*)VNI!pHpKSG;?MiNm^Pa7]*R[ftA
USO`c&ur"6Xg,4>['mHS]=u%q_o0O6[/`Po!&-)_2*!`\5<qP(7nH<H:Jk%j=B\s8?X[GVB4u!qDK'W;
Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7ETq\@[!<3)F!:BhQ6UjX@:Jk%l=B\s<@qB:fCi+-4FE_tW
I=?a#L5:_FNf]EgQC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b^VIb*`Q$L0h#K_p0JbRH4$5_m6:FC98k`#X
;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_P*;2uR$jJ8StMdOV#(/l!Up*5!'rtA8PDoW
;cd()>[_,RB527"E-$,FG^OpgJV8c6MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>['mHS]=u%q_o0O6q#J#,
3&!$B2*!`\5<qP(7nH<H:Jk%j=B\s8?X[GVB4u!qDK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQBqlER@Kh>
TV8*UqZ-Ws])X3G7S-9L;,^Ou>$PKGAS5aoD/aQ<GBeL`IY!0,Ll.+NOHPioR$sH]S=Z@JUnt&jX/rG.
Za@*J\%0,b^VIb*`Q#4a(,.Eu2*!`\5<qP(7nH<H:Jk%j=B\s8.UQUoAnPdkCi434F*2\PH[U?nJV/Z2
M2I4NNf]BdPEqQ&R@Kh>TV8*UqZ-Ws])W"%7S-9L;*.]X=B\s<@qB:fCi+-4FE_tWI=?a#L5:_FNf]Eg
QC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b^VIb*`Q#Ulp&IB40JbRH4$5_m6:FC98k`#X;cQq'>[:]F@qK@e
Bl%[+EcZAIH$asgJ:W?,L5CeGNK0*_P*;2uR$jJ8StMdOV#(/l!S7>5!'rtA8PDoW;cd()>[_,RB527"
E-$,FG^OpgJV8c6MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>['mHS]=u%q_o0O6huM7,5qjuK2*!`\5<qP(
7nH<H:Jk%j=B\s8?X[GVB4u!qDK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7ETq\@[!<3)q!5ee%
6UjX@:Jk%l=B\s<@qB:fCi+-4FE_tWI=?a#L5:_FNf]EgQC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b^VIb*
`;moa!&$#[1Gq0S4?l(t77TpA9M\Ma<ENF0?!h#MAnPdkCi434F*2\PH[U?nJV/Z2M2Dn'NK0*_P*;2u
R$jJ8StMdOV#(/l!P8=Q6UjX@:Jk%l=B\s<@qB:fCi+-4FE_tWI=?a#L5:^2MiNm^Pa7]*R[ftAUSO`c
WiN5'Z*UgE[^WfZ^;%J$`5Ta&!"CV91Gq0S4?l(t77TpA1JCSA;cQq'>[:]F@qK@eBl%[+EcZAIH$asg
J:W?,L5CeGNK0*_P*;2uR$jJ8StMdOV#(/l!PSR5!'rtA8PDoW;cd()>[_,RB527"E-$,FG^OpgJV8c6
MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>['mHS]=u%q_o0O6`rPK,5qjuK2*!`\5<qP(7nH<H:Jk%j=B\s8
?X[GVB4u!qDK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7ETq\@[!<3)X!8IQ?6UjX@:Jk%l=B\s<
@qB:fCi+-4FE_tWI=?a#L5:_FNf]EgQC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b^VIb*`Q%-Bb5ag^0JbRH
4$5_m6:FC98k`#X;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_P*;2uR$jJ8StMdOV#(,l
!<</4!&m878PDoW;cd()>[_,RB527"E-$,FG^OpgJV8c6MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>['g:M
\\#Sj^r++0`j5Xl0JG:?3BK>f5XIn08P2ZP;,^Is>$P??@:Nn^BPD:#E,p#BGBnNRI=?]tK8#&:MMmIS
OHG]iQC!u,S=Q7ETq\@[!<3)3!#7jj8PDoW;cd()>[_,RB527"E-$,F.sQGiIY!0,Ll.+NOHPioR$sJ6
StDdRV5^JqXKAb6['[9N\\#Sj^r++0`j5XJ0JG:?3BTAc5<qP(7nH<H:Jk%j=B\s8?X[GVB4u!qDK'W;
Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7ETq\@[!<3)?!;-=X6UjX@:Jk%l=B\s<@qB:fCi+-4FE_tW
I=?a#L5:_FNf]EgQC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b^VIb*`Q$7)j8_J"0JbRH4$5_m6:FC98k`#X
;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_P*;2uR$jJ8StMdOV#(/l!U0U5!'rtA8PDoW
;cd()>[_,RB527"E-$,FG^OpgJV8c6MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>['mHS]=u%q_o0O6nc6N,
5;4cI2*!`\5<qP(7nH<H:Jk%j=B\s8?X[GVB4u!qDK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7E
T`Lm`qZ-Ws])XHN7S-9L;,^Ou>$PKGAS5aoD/aQ<GBeL`IY!0,Ll.+NOHPioR$sJ6StDdRV5Y*-X/rG.
Za@*J\%0,b^VIb*`Q#:c6N@*?0JbRH4$5_m6:FC98k`#X;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,
L5CeGNK0*_P*;2uR$jJ8StMdOV#(/l!R:]5!'rtA8PDoW;cd()>[_,RB527"E-$,FG^OpgJV8c6MMmLV
P*D9"R[Tb<T;/3YWN*##Xg,4>['mHS]=u%q_o0O6f)XV,5qjuK2*!`\5<qP(7nH<H:Jk%j=B\s8?X[GV
B4u!qDK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7ETq\@[!<3)h!6bF/6UjX@:Jk%l=B\s<@qB:f
Ci+-4FE_tWI=?a#L5:_FNf]EgQC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b^VIb*`Q%]R])XfE0JbRH4$5_m
6:FC98k`#X;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_P*;2u#ah$MSXuLJU87YdrrK_3
-UU?p9M\Ma='/X2@:Nk]C2@a+F*)VNI!pHpKSG;?MiNm^Pa7]*RMhWeT;/3YWN*##Xg,4>['mHS]=u%q
_o0O6S,e-@JcPQGJ,~>

%%EndBinary
grestore
np
grestore
grestore
101.508 103.54 mo
101.508 106.7 98.9448 109.266 95.7808 109.266 cv
92.6211 109.266 90.0591 106.7 90.0591 103.54 cv
90.0591 100.375 92.6211 97.813 95.7808 97.813 cv
98.9448 97.813 101.508 100.375 101.508 103.54 cv
0 0 0 0 cmyk
f
91.582 102.09 mo
92.645 102.09 li
92.895 102.09 93.0659 102.106 93.145 102.122 cv
93.3008 102.168 93.4102 102.247 93.5039 102.372 cv
93.582 102.497 93.6289 102.637 93.6289 102.809 cv
93.6289 103.043 93.5508 103.231 93.4102 103.372 cv
93.2539 103.497 93.0039 103.559 92.6602 103.559 cv
91.582 103.559 li
91.582 102.09 li
cp
91.582 105.731 mo
91.582 104.043 li
92.645 104.043 li
93.2378 104.043 93.6289 103.934 93.8628 103.684 cv
94.082 103.45 94.1909 103.137 94.1909 102.793 cv
94.1909 102.59 94.1602 102.403 94.0659 102.231 cv
93.9878 102.059 93.8789 101.934 93.7378 101.84 cv
93.5981 101.747 93.4409 101.684 93.2231 101.637 cv
93.082 101.622 92.8789 101.606 92.5981 101.606 cv
91.0352 101.606 li
91.0352 105.731 li
91.582 105.731 li
cp
0.733333 0.705882 0.654902 0.776471 cmyk
f
97.2461 105.731 mo
97.2461 102.731 li
96.73 102.731 li
96.73 104.34 li
96.73 104.59 96.6992 104.778 96.6519 104.918 cv
96.5898 105.059 96.4961 105.153 96.3711 105.247 cv
96.23 105.309 96.0898 105.356 95.9492 105.356 cv
95.793 105.356 95.6519 105.309 95.5591 105.247 cv
95.4648 105.168 95.3867 105.059 95.355 104.934 cv
95.3398 104.84 95.3242 104.653 95.3242 104.387 cv
95.3242 102.731 li
94.8242 102.731 li
94.8242 104.59 li
94.8242 104.809 94.8242 104.965 94.8398 105.059 cv
94.8872 105.215 94.9341 105.34 94.9961 105.434 cv
95.0742 105.543 95.1992 105.622 95.3398 105.684 cv
95.4961 105.762 95.6519 105.793 95.8398 105.793 cv
96.23 105.793 96.5591 105.622 96.7769 105.293 cv
96.7769 105.731 li
97.2461 105.731 li
cp
f
98.7339 103.372 mo
98.9058 103.184 99.0938 103.09 99.312 103.09 cv
99.5313 103.09 99.7188 103.184 99.875 103.372 cv
100.031 103.559 100.109 103.84 100.109 104.231 cv
100.109 104.606 100.031 104.903 99.8589 105.09 cv
99.7031 105.278 99.5161 105.372 99.2969 105.372 cv
99.0161 105.372 98.7969 105.247 98.6411 104.981 cv
98.5469 104.825 98.5 104.575 98.5 104.215 cv
98.5 103.856 98.5781 103.575 98.7339 103.372 cv
98.7339 103.372 li
cp
98.5 105.356 mo
98.7031 105.653 98.9839 105.793 99.3281 105.793 cv
99.688 105.793 99.9839 105.653 100.25 105.372 cv
100.5 105.09 100.625 104.7 100.625 104.184 cv
100.625 103.965 100.594 103.778 100.531 103.575 cv
100.469 103.403 100.391 103.231 100.281 103.09 cv
100.188 102.965 100.047 102.856 99.875 102.778 cv
99.7188 102.715 99.5469 102.668 99.3589 102.668 cv
99.0313 102.668 98.75 102.809 98.5308 103.075 cv
98.5308 101.606 li
98.0308 101.606 li
98.0308 105.731 li
98.5 105.731 li
98.5 105.356 li
cp
f
218.523 71.231 mo
229.5 57.4648 235.398 36.4771 235.398 20.875 cv
235.102 20.875 li
235.102 36.4072 229.211 57.356 218.289 71.043 cv
218.523 71.231 li
f
220.203 71.8682 mo
216.723 73.2349 li
217.277 69.5361 li
220.203 71.8682 li
cp
f
68.4961 74.3208 mo
80.145 59.7109 86.3979 37.4341 86.3979 20.875 cv
86.1021 20.875 li
86.1021 37.3643 79.8521 59.6021 68.2622 74.1333 cv
68.4961 74.3208 li
f
70.1719 74.9575 mo
66.6909 76.3247 li
67.25 72.6289 li
70.1719 74.9575 li
cp
f
132.777 32.375 mo
205.203 32.375 li
205.203 45.707 li
132.777 45.707 li
132.777 32.375 li
cp
0 0 0 0 cmyk
ef
136.84 39.543 mo
136.59 39.2153 136.449 38.7471 136.449 38.168 cv
136.449 37.5752 136.59 37.106 136.84 36.7622 cv
137.074 36.4341 137.418 36.2783 137.871 36.2783 cv
138.293 36.2783 138.637 36.4341 138.902 36.7783 cv
139.152 37.106 139.277 37.5752 139.277 38.168 cv
139.277 38.7471 139.152 39.2153 138.902 39.543 cv
138.637 39.8872 138.293 40.043 137.871 40.043 cv
137.418 40.043 137.09 39.8872 136.84 39.543 cv
136.84 39.543 li
cp
139.387 36.4033 mo
138.98 35.9502 138.48 35.7148 137.871 35.7148 cv
137.246 35.7148 136.73 35.9502 136.34 36.4033 cv
135.949 36.856 135.746 37.4341 135.746 38.168 cv
135.746 38.8721 135.949 39.4502 136.34 39.918 cv
136.746 40.3721 137.246 40.606 137.871 40.606 cv
138.48 40.606 138.98 40.3721 139.387 39.918 cv
139.777 39.4502 139.98 38.8721 139.98 38.168 cv
139.98 37.4502 139.777 36.8721 139.387 36.4033 cv
139.387 36.4033 li
cp
0.733333 0.705882 0.654902 0.776471 cmyk
f
142.016 39.9341 mo
142.016 38.731 li
142.688 38.731 li
143.328 38.731 143.812 38.6221 144.141 38.3721 cv
144.469 38.1221 144.625 37.7783 144.625 37.293 cv
144.625 36.8252 144.453 36.4502 144.125 36.2153 cv
143.797 35.9653 143.328 35.856 142.688 35.856 cv
140.875 35.856 li
140.797 35.856 140.734 35.8721 140.688 35.918 cv
140.641 35.9653 140.609 36.043 140.609 36.1221 cv
140.609 36.231 140.641 36.3091 140.688 36.3403 cv
140.75 36.3872 140.891 36.4033 141.125 36.4033 cv
141.391 36.4033 li
141.391 39.9341 li
140.891 39.9341 li
140.797 39.9341 140.719 39.9502 140.688 39.9971 cv
140.641 40.043 140.609 40.106 140.609 40.2002 cv
140.609 40.293 140.641 40.356 140.688 40.4033 cv
140.734 40.4502 140.797 40.481 140.875 40.481 cv
142.797 40.481 li
142.953 40.481 143.047 40.4502 143.109 40.418 cv
143.156 40.3721 143.188 40.3091 143.188 40.2002 cv
143.188 40.106 143.156 40.0283 143.094 39.9971 cv
143.047 39.9502 142.953 39.9341 142.828 39.9341 cv
142.016 39.9341 li
cp
142.734 36.4033 mo
143.141 36.4033 143.453 36.481 143.656 36.6372 cv
143.859 36.7783 143.969 37.0122 143.969 37.3091 cv
143.969 37.6221 143.859 37.856 143.656 37.9971 cv
143.453 38.1533 143.141 38.231 142.734 38.231 cv
142.016 38.231 li
142.016 36.4033 li
142.734 36.4033 li
cp
f
144.988 41.9033 mo
149.941 41.9033 li
149.941 42.3721 li
144.988 42.3721 li
144.988 41.9033 li
cp
f
153.82 40.481 mo
153.914 40.481 153.977 40.4502 154.023 40.4033 cv
154.07 40.356 154.086 40.293 154.086 40.2002 cv
154.086 39.2153 li
154.086 39.0591 154.07 38.9653 154.023 38.9033 cv
153.992 38.856 153.93 38.8252 153.82 38.8252 cv
153.711 38.8252 153.648 38.856 153.602 38.918 cv
153.57 38.9653 153.539 39.0898 153.539 39.293 cv
153.539 39.9341 li
151.461 39.9341 li
151.461 38.2002 li
152.477 38.2002 li
152.477 38.3398 li
152.477 38.5122 152.492 38.6372 152.539 38.7002 cv
152.57 38.7622 152.633 38.793 152.727 38.793 cv
152.82 38.793 152.898 38.7622 152.93 38.7148 cv
152.961 38.6533 152.977 38.5283 152.977 38.3398 cv
152.977 37.606 li
152.977 37.418 152.961 37.293 152.93 37.231 cv
152.898 37.1841 152.82 37.1372 152.742 37.1372 cv
152.648 37.1372 152.586 37.168 152.539 37.231 cv
152.492 37.2783 152.477 37.3721 152.477 37.5283 cv
152.477 37.731 li
151.461 37.731 li
151.461 36.4033 li
153.539 36.4033 li
153.539 36.9653 li
153.539 37.168 153.57 37.293 153.602 37.356 cv
153.648 37.4033 153.711 37.4341 153.82 37.4341 cv
153.93 37.4341 153.992 37.418 154.039 37.356 cv
154.07 37.3091 154.086 37.2148 154.086 37.0752 cv
154.086 36.168 li
154.086 36.0591 154.07 35.981 154.023 35.9341 cv
153.977 35.8721 153.914 35.856 153.82 35.856 cv
150.414 35.856 li
150.32 35.856 150.242 35.8721 150.195 35.918 cv
150.148 35.9653 150.117 36.0283 150.117 36.1221 cv
150.117 36.231 150.148 36.3091 150.211 36.3403 cv
150.273 36.3872 150.398 36.4033 150.602 36.4033 cv
150.836 36.4033 li
150.836 39.9341 li
150.602 39.9341 li
150.398 39.9341 150.273 39.9502 150.211 39.981 cv
150.148 40.0283 150.117 40.0903 150.117 40.2002 cv
150.117 40.293 150.148 40.356 150.195 40.4033 cv
150.242 40.4502 150.32 40.481 150.414 40.481 cv
153.82 40.481 li
cp
f
156.039 39.543 mo
155.789 39.2002 155.648 38.7471 155.648 38.168 cv
155.648 37.5752 155.789 37.1221 156.039 36.7783 cv
156.289 36.4341 156.633 36.2783 157.07 36.2783 cv
157.492 36.2783 157.836 36.4341 158.086 36.7783 cv
158.352 37.1221 158.477 37.5752 158.477 38.168 cv
158.477 38.731 158.352 39.2002 158.086 39.543 cv
157.836 39.8721 157.492 40.043 157.07 40.043 cv
156.633 40.043 156.289 39.8721 156.039 39.543 cv
156.039 39.543 li
cp
156.164 40.7471 mo
155.914 40.9971 155.789 41.1372 155.789 41.2153 cv
155.789 41.2783 155.82 41.3398 155.867 41.4033 cv
155.93 41.4653 155.992 41.5122 156.055 41.5122 cv
156.07 41.5122 156.195 41.4502 156.414 41.356 cv
156.633 41.2783 156.836 41.231 157.039 41.231 cv
157.18 41.231 157.383 41.2622 157.648 41.356 cv
157.93 41.4341 158.133 41.481 158.273 41.481 cv
158.461 41.481 158.617 41.4341 158.773 41.356 cv
158.93 41.2622 159.023 41.1841 159.023 41.0903 cv
159.023 41.0283 158.992 40.9502 158.945 40.9033 cv
158.898 40.8403 158.836 40.8252 158.773 40.8252 cv
158.742 40.8252 158.664 40.8403 158.555 40.8872 cv
158.43 40.9341 158.336 40.9648 158.258 40.9648 cv
158.164 40.9648 158.008 40.9341 157.805 40.8721 cv
157.602 40.8091 157.445 40.7783 157.336 40.7783 cv
157.164 40.7783 157.008 40.793 156.836 40.8252 cv
156.68 40.856 156.523 40.9033 156.367 40.9648 cv
156.789 40.5591 li
156.82 40.5591 156.852 40.5591 156.883 40.5591 cv
156.914 40.5591 156.977 40.5591 157.039 40.5591 cv
157.68 40.5591 158.195 40.3403 158.586 39.9033 cv
158.977 39.4502 159.18 38.8872 159.18 38.168 cv
159.18 37.4653 158.977 36.8872 158.57 36.418 cv
158.164 35.9502 157.664 35.7148 157.07 35.7148 cv
156.477 35.7148 155.961 35.9502 155.555 36.418 cv
155.148 36.8872 154.945 37.4653 154.945 38.1533 cv
154.945 38.7148 155.086 39.231 155.367 39.6372 cv
155.633 40.0591 155.992 40.3403 156.445 40.4653 cv
156.383 40.543 156.273 40.6372 156.164 40.7471 cv
156.164 40.7471 li
cp
f
160.184 38.856 mo
160.184 39.3872 160.324 39.8252 160.637 40.1372 cv
160.949 40.4502 161.355 40.606 161.871 40.606 cv
162.434 40.606 162.855 40.4502 163.137 40.1372 cv
163.418 39.8252 163.559 39.3403 163.559 38.7148 cv
163.559 36.4033 li
163.621 36.4033 li
163.762 36.4033 163.871 36.3872 163.918 36.3403 cv
163.98 36.3091 164.012 36.231 164.012 36.1221 cv
164.012 36.0283 163.98 35.9653 163.934 35.918 cv
163.887 35.8721 163.824 35.856 163.715 35.856 cv
162.684 35.856 li
162.512 35.856 162.387 35.8721 162.34 35.918 cv
162.277 35.9502 162.262 36.0283 162.262 36.1221 cv
162.262 36.231 162.293 36.3091 162.355 36.3403 cv
162.418 36.3872 162.559 36.4033 162.762 36.4033 cv
162.965 36.4033 li
162.965 38.6221 li
162.965 39.1221 162.887 39.4971 162.715 39.7153 cv
162.543 39.9341 162.277 40.043 161.902 40.043 cv
161.699 40.043 161.527 39.9971 161.355 39.918 cv
161.199 39.8252 161.074 39.7002 160.98 39.543 cv
160.918 39.4341 160.887 39.3091 160.855 39.1841 cv
160.824 39.043 160.809 38.8403 160.809 38.5591 cv
160.809 36.4033 li
160.98 36.4033 li
161.168 36.4033 161.293 36.3872 161.355 36.3403 cv
161.434 36.3091 161.465 36.231 161.465 36.1221 cv
161.465 36.0283 161.434 35.9502 161.371 35.918 cv
161.324 35.8721 161.184 35.856 160.98 35.856 cv
159.996 35.856 li
159.902 35.856 159.824 35.8721 159.777 35.918 cv
159.73 35.9653 159.699 36.0283 159.699 36.1221 cv
159.699 36.231 159.73 36.3091 159.793 36.3403 cv
159.855 36.3872 159.965 36.4033 160.105 36.4033 cv
160.184 36.4033 li
160.184 38.856 li
cp
f
164.734 39.9341 mo
164.656 39.9341 li
164.5 39.9341 164.391 39.9502 164.344 39.981 cv
164.281 40.0283 164.25 40.0903 164.25 40.2002 cv
164.25 40.3091 164.281 40.3721 164.344 40.418 cv
164.391 40.4502 164.5 40.481 164.672 40.481 cv
165.703 40.481 li
165.891 40.481 166.016 40.4502 166.063 40.418 cv
166.125 40.3721 166.156 40.3091 166.156 40.2002 cv
166.156 40.0903 166.125 40.0283 166.063 39.9971 cv
166 39.9502 165.875 39.9341 165.703 39.9341 cv
165.328 39.9341 li
165.672 38.9971 li
167.656 38.9971 li
168.031 39.9341 li
167.672 39.9341 li
167.5 39.9341 167.375 39.9502 167.312 39.9971 cv
167.25 40.0283 167.219 40.0903 167.219 40.2002 cv
167.219 40.3091 167.25 40.3721 167.312 40.418 cv
167.375 40.4502 167.484 40.481 167.688 40.481 cv
168.75 40.481 li
168.891 40.481 168.984 40.4502 169.031 40.418 cv
169.078 40.3721 169.109 40.3091 169.109 40.2002 cv
169.109 40.0903 169.078 40.0283 169.031 39.981 cv
168.984 39.9502 168.875 39.9341 168.734 39.9341 cv
168.672 39.9341 li
167.141 36.106 li
167.109 36.0122 167.062 35.9502 167.016 35.9033 cv
166.953 35.8721 166.859 35.856 166.719 35.856 cv
165.609 35.856 li
165.359 35.856 165.203 35.8721 165.141 35.918 cv
165.094 35.9502 165.062 36.0283 165.062 36.1221 cv
165.062 36.231 165.094 36.3091 165.156 36.3403 cv
165.219 36.3872 165.328 36.4033 165.484 36.4033 cv
166.063 36.4033 li
164.734 39.9341 li
cp
166.625 36.4033 mo
167.453 38.481 li
165.859 38.481 li
166.625 36.4033 li
cp
f
172.941 39.9341 mo
170.863 39.9341 li
170.863 36.4033 li
171.52 36.4033 li
171.707 36.4033 171.848 36.3872 171.895 36.3403 cv
171.957 36.3091 171.988 36.231 171.988 36.1221 cv
171.988 36.0283 171.957 35.9653 171.91 35.918 cv
171.863 35.8721 171.801 35.856 171.691 35.856 cv
169.582 35.856 li
169.488 35.856 169.41 35.8721 169.363 35.918 cv
169.316 35.9653 169.285 36.0283 169.285 36.1221 cv
169.285 36.231 169.316 36.3091 169.379 36.3403 cv
169.441 36.3872 169.566 36.4033 169.754 36.4033 cv
170.238 36.4033 li
170.238 39.9341 li
169.754 39.9341 li
169.551 39.9341 169.426 39.9502 169.363 39.981 cv
169.316 40.0283 169.285 40.0903 169.285 40.2002 cv
169.285 40.293 169.316 40.356 169.363 40.4033 cv
169.41 40.4502 169.473 40.481 169.566 40.481 cv
173.223 40.481 li
173.301 40.481 173.379 40.4502 173.426 40.4033 cv
173.473 40.356 173.504 40.2783 173.504 40.2002 cv
173.504 38.731 li
173.504 38.6372 173.473 38.5591 173.426 38.5122 cv
173.379 38.4653 173.316 38.4341 173.223 38.4341 cv
173.113 38.4341 173.035 38.4653 172.988 38.5283 cv
172.957 38.5903 172.941 38.7148 172.941 38.9033 cv
172.941 39.9341 li
cp
f
175.773 40.0903 mo
175.773 40.106 li
175.883 40.3872 176.023 40.5283 176.195 40.5283 cv
176.414 40.5283 li
176.492 40.5283 176.555 40.5122 176.602 40.4502 cv
176.648 40.4033 176.711 40.293 176.789 40.0903 cv
178.195 36.4033 li
178.242 36.4033 li
178.383 36.4033 178.477 36.3872 178.523 36.3403 cv
178.586 36.3091 178.617 36.231 178.617 36.1221 cv
178.617 36.043 178.586 35.9653 178.539 35.918 cv
178.492 35.8721 178.43 35.856 178.336 35.856 cv
177.117 35.856 li
176.961 35.856 176.852 35.8721 176.805 35.918 cv
176.742 35.9502 176.727 36.0283 176.727 36.1221 cv
176.727 36.231 176.758 36.293 176.805 36.3403 cv
176.867 36.3872 176.961 36.4033 177.086 36.4033 cv
177.602 36.4033 li
176.305 39.8252 li
174.977 36.4033 li
175.414 36.4033 li
175.539 36.4033 175.633 36.3872 175.68 36.3403 cv
175.742 36.293 175.773 36.231 175.773 36.1221 cv
175.773 36.0283 175.742 35.9502 175.695 35.918 cv
175.633 35.8721 175.523 35.856 175.383 35.856 cv
174.195 35.856 li
174.102 35.856 174.039 35.8721 173.992 35.918 cv
173.945 35.9653 173.93 36.043 173.93 36.1221 cv
173.93 36.231 173.945 36.3091 174.008 36.3403 cv
174.055 36.3872 174.148 36.4033 174.289 36.4033 cv
174.336 36.4033 li
175.773 40.0903 li
cp
f
182.617 40.481 mo
182.711 40.481 182.773 40.4502 182.82 40.4033 cv
182.867 40.356 182.883 40.293 182.883 40.2002 cv
182.883 39.2153 li
182.883 39.0591 182.867 38.9653 182.82 38.9033 cv
182.789 38.856 182.727 38.8252 182.617 38.8252 cv
182.508 38.8252 182.445 38.856 182.398 38.918 cv
182.367 38.9653 182.336 39.0898 182.336 39.293 cv
182.336 39.9341 li
180.258 39.9341 li
180.258 38.2002 li
181.273 38.2002 li
181.273 38.3398 li
181.273 38.5122 181.289 38.6372 181.336 38.7002 cv
181.367 38.7622 181.43 38.793 181.523 38.793 cv
181.617 38.793 181.695 38.7622 181.727 38.7148 cv
181.758 38.6533 181.773 38.5283 181.773 38.3398 cv
181.773 37.606 li
181.773 37.418 181.758 37.293 181.727 37.231 cv
181.695 37.1841 181.617 37.1372 181.539 37.1372 cv
181.445 37.1372 181.383 37.168 181.336 37.231 cv
181.289 37.2783 181.273 37.3721 181.273 37.5283 cv
181.273 37.731 li
180.258 37.731 li
180.258 36.4033 li
182.336 36.4033 li
182.336 36.9653 li
182.336 37.168 182.367 37.293 182.398 37.356 cv
182.445 37.4033 182.508 37.4341 182.617 37.4341 cv
182.727 37.4341 182.789 37.418 182.836 37.356 cv
182.867 37.3091 182.883 37.2148 182.883 37.0752 cv
182.883 36.168 li
182.883 36.0591 182.867 35.981 182.82 35.9341 cv
182.773 35.8721 182.711 35.856 182.617 35.856 cv
179.211 35.856 li
179.117 35.856 179.039 35.8721 178.992 35.918 cv
178.945 35.9653 178.914 36.0283 178.914 36.1221 cv
178.914 36.231 178.945 36.3091 179.008 36.3403 cv
179.07 36.3872 179.195 36.4033 179.398 36.4033 cv
179.633 36.4033 li
179.633 39.9341 li
179.398 39.9341 li
179.195 39.9341 179.07 39.9502 179.008 39.981 cv
178.945 40.0283 178.914 40.0903 178.914 40.2002 cv
178.914 40.293 178.945 40.356 178.992 40.4033 cv
179.039 40.4502 179.117 40.481 179.211 40.481 cv
182.617 40.481 li
cp
f
184.996 38.4653 mo
185.512 38.4653 li
185.668 38.4653 185.809 38.5122 185.902 38.5752 cv
186.012 38.6372 186.137 38.793 186.293 39.0283 cv
187.043 40.168 li
187.043 40.168 187.059 40.1841 187.074 40.2002 cv
187.199 40.3872 187.324 40.481 187.449 40.481 cv
187.887 40.481 li
187.98 40.481 188.043 40.4502 188.09 40.4033 cv
188.137 40.356 188.168 40.293 188.168 40.2002 cv
188.168 40.0903 188.121 40.0283 188.074 39.9971 cv
188.027 39.9502 187.918 39.9341 187.777 39.9341 cv
187.652 39.9341 li
186.871 38.731 li
186.824 38.6533 186.762 38.5903 186.699 38.543 cv
186.652 38.4971 186.59 38.4341 186.527 38.4033 cv
186.855 38.3252 187.105 38.168 187.293 37.9502 cv
187.48 37.731 187.574 37.481 187.574 37.1841 cv
187.574 36.9653 187.527 36.7471 187.418 36.5591 cv
187.324 36.3721 187.184 36.2153 187.012 36.0898 cv
186.871 36.0122 186.699 35.9502 186.512 35.9033 cv
186.309 35.8721 186.012 35.856 185.621 35.856 cv
183.965 35.856 li
183.887 35.856 183.809 35.8721 183.762 35.918 cv
183.715 35.9653 183.699 36.0283 183.699 36.106 cv
183.699 36.2153 183.73 36.293 183.777 36.3252 cv
183.84 36.356 183.965 36.3721 184.168 36.3721 cv
184.387 36.3721 li
184.387 39.9341 li
184.027 39.9341 li
183.918 39.9341 183.824 39.9502 183.777 39.9971 cv
183.715 40.0283 183.699 40.106 183.699 40.2002 cv
183.699 40.293 183.715 40.356 183.762 40.4033 cv
183.824 40.4502 183.887 40.481 183.965 40.481 cv
185.277 40.481 li
185.434 40.481 185.543 40.4502 185.59 40.418 cv
185.652 40.3721 185.668 40.3091 185.668 40.2002 cv
185.668 40.106 185.637 40.0283 185.574 39.9971 cv
185.512 39.9502 185.402 39.9341 185.262 39.9341 cv
184.996 39.9341 li
184.996 38.4653 li
cp
185.824 36.3721 mo
186.184 36.3721 186.434 36.4341 186.621 36.5752 cv
186.809 36.7002 186.887 36.9033 186.887 37.168 cv
186.887 37.418 186.809 37.6221 186.621 37.7471 cv
186.434 37.8872 186.168 37.9502 185.809 37.9502 cv
184.996 37.9502 li
184.996 36.3721 li
185.824 36.3721 li
cp
f
190.969 39.9341 mo
190.969 36.4033 li
191.844 36.4033 li
192.047 36.4033 192.172 36.3872 192.234 36.3403 cv
192.297 36.3091 192.328 36.231 192.328 36.1221 cv
192.328 36.0283 192.297 35.9653 192.25 35.918 cv
192.203 35.8721 192.125 35.856 192.031 35.856 cv
189.312 35.856 li
189.203 35.856 189.125 35.8721 189.078 35.918 cv
189.031 35.9653 189.016 36.0283 189.016 36.1221 cv
189.016 36.231 189.031 36.3091 189.094 36.3403 cv
189.156 36.3872 189.281 36.4033 189.484 36.4033 cv
190.359 36.4033 li
190.359 39.9341 li
189.484 39.9341 li
189.281 39.9341 189.141 39.9502 189.094 39.981 cv
189.031 40.0283 189.016 40.0903 189.016 40.2002 cv
189.016 40.293 189.031 40.356 189.078 40.4033 cv
189.125 40.4502 189.203 40.481 189.297 40.481 cv
191.844 40.481 li
192.047 40.481 192.172 40.4502 192.234 40.418 cv
192.297 40.3721 192.328 40.3091 192.328 40.2002 cv
192.328 40.0903 192.297 40.0283 192.234 39.981 cv
192.172 39.9502 192.047 39.9341 191.844 39.9341 cv
190.969 39.9341 li
cp
f
194.754 39.9341 mo
194.754 38.2002 li
195.785 38.2002 li
195.785 38.3091 li
195.785 38.5122 195.801 38.6372 195.848 38.7002 cv
195.879 38.7622 195.941 38.793 196.035 38.793 cv
196.129 38.793 196.191 38.7622 196.223 38.7148 cv
196.254 38.668 196.27 38.5752 196.27 38.4502 cv
196.27 37.4502 li
196.27 37.3403 196.254 37.2622 196.223 37.2148 cv
196.176 37.168 196.129 37.1372 196.035 37.1372 cv
195.941 37.1372 195.879 37.1841 195.848 37.2471 cv
195.801 37.3091 195.785 37.4341 195.785 37.6221 cv
195.785 37.731 li
194.754 37.731 li
194.754 36.4033 li
196.879 36.4033 li
196.879 36.9653 li
196.879 37.168 196.895 37.293 196.926 37.356 cv
196.973 37.4033 197.051 37.4341 197.16 37.4341 cv
197.238 37.4341 197.316 37.418 197.348 37.3721 cv
197.41 37.3252 197.426 37.2622 197.426 37.168 cv
197.426 36.168 li
197.426 36.0591 197.41 35.981 197.348 35.9341 cv
197.316 35.8721 197.238 35.856 197.16 35.856 cv
193.691 35.856 li
193.613 35.856 193.551 35.8721 193.504 35.918 cv
193.457 35.9653 193.426 36.043 193.426 36.1221 cv
193.426 36.231 193.457 36.3091 193.52 36.3403 cv
193.566 36.3872 193.691 36.4033 193.895 36.4033 cv
194.145 36.4033 li
194.145 39.9341 li
193.77 39.9341 li
193.645 39.9341 193.551 39.9502 193.504 39.9971 cv
193.457 40.0283 193.426 40.106 193.426 40.2002 cv
193.426 40.293 193.457 40.356 193.504 40.4033 cv
193.551 40.4502 193.613 40.481 193.691 40.481 cv
195.629 40.481 li
195.707 40.481 195.785 40.4502 195.832 40.4033 cv
195.879 40.356 195.895 40.293 195.895 40.2002 cv
195.895 40.106 195.879 40.0283 195.832 39.9971 cv
195.785 39.9502 195.691 39.9341 195.582 39.9341 cv
194.754 39.9341 li
cp
f
200.555 39.9341 mo
200.555 38.6841 li
201.883 36.4033 li
201.945 36.4033 li
202.102 36.4033 202.211 36.3872 202.273 36.3403 cv
202.32 36.3091 202.352 36.231 202.352 36.1221 cv
202.352 36.0283 202.32 35.9502 202.273 35.918 cv
202.211 35.8721 202.086 35.856 201.883 35.856 cv
201.164 35.856 li
200.977 35.856 200.852 35.8721 200.805 35.9033 cv
200.758 35.9502 200.742 36.0122 200.742 36.1221 cv
200.742 36.231 200.758 36.3091 200.82 36.3403 cv
200.883 36.3872 200.977 36.4033 201.117 36.4033 cv
201.273 36.4033 li
200.289 38.106 li
199.352 36.4033 li
199.477 36.4033 li
199.648 36.4033 199.758 36.3872 199.82 36.3403 cv
199.898 36.3091 199.93 36.231 199.93 36.1221 cv
199.93 36.0283 199.898 35.9502 199.836 35.918 cv
199.789 35.8721 199.68 35.856 199.523 35.856 cv
198.461 35.856 li
198.352 35.856 198.289 35.8721 198.242 35.918 cv
198.18 35.9653 198.164 36.0283 198.164 36.1221 cv
198.164 36.231 198.195 36.3091 198.258 36.3403 cv
198.305 36.3872 198.414 36.4033 198.57 36.4033 cv
198.633 36.4033 li
199.945 38.6372 li
199.945 39.9341 li
199.367 39.9341 li
199.18 39.9341 199.055 39.9502 198.992 39.981 cv
198.93 40.0283 198.898 40.0903 198.898 40.2002 cv
198.898 40.3091 198.93 40.3721 198.977 40.418 cv
199.039 40.4502 199.148 40.481 199.32 40.481 cv
201.164 40.481 li
201.336 40.481 201.445 40.4502 201.508 40.418 cv
201.57 40.3721 201.602 40.3091 201.602 40.2002 cv
201.602 40.0903 201.57 40.0283 201.508 39.981 cv
201.445 39.9502 201.32 39.9341 201.117 39.9341 cv
200.555 39.9341 li
cp
f
95.0859 80.7153 mo
95.0859 79.6216 li
95.6948 79.6216 li
96.2891 79.6216 96.7271 79.5122 97.0229 79.2935 cv
97.3198 79.0747 97.4771 78.7466 97.4771 78.3091 cv
97.4771 77.8716 97.3198 77.5435 97.0229 77.3247 cv
96.7109 77.106 96.2729 76.9966 95.6948 76.9966 cv
94.0552 76.9966 li
93.9771 76.9966 93.9141 77.0122 93.8672 77.0591 cv
93.8198 77.106 93.8052 77.1685 93.8052 77.2466 cv
93.8052 77.3403 93.8198 77.4028 93.8828 77.4497 cv
93.9302 77.481 94.0552 77.4966 94.2729 77.4966 cv
94.5229 77.4966 li
94.5229 80.7153 li
94.0552 80.7153 li
93.9771 80.7153 93.9141 80.731 93.8672 80.7778 cv
93.8198 80.8091 93.8052 80.8716 93.8052 80.9653 cv
93.8052 81.0435 93.8198 81.106 93.8672 81.1528 cv
93.9141 81.1997 93.9771 81.2153 94.0552 81.2153 cv
95.8052 81.2153 li
95.9302 81.2153 96.0391 81.1997 96.0859 81.1528 cv
96.1328 81.1216 96.1479 81.0591 96.1479 80.9653 cv
96.1479 80.8716 96.1328 80.8091 96.0698 80.7778 cv
96.0229 80.731 95.9448 80.7153 95.8198 80.7153 cv
95.0859 80.7153 li
cp
95.7422 77.4966 mo
96.1172 77.4966 96.3979 77.5747 96.5859 77.6997 cv
96.7729 77.8403 96.8672 78.0591 96.8672 78.3247 cv
96.8672 78.606 96.7729 78.8091 96.5859 78.9497 cv
96.3979 79.0903 96.1172 79.1528 95.7422 79.1528 cv
95.0859 79.1528 li
95.0859 77.4966 li
95.7422 77.4966 li
cp
f
99.3198 79.5903 mo
99.7271 79.231 li
99.8828 79.2466 100.055 79.3247 100.195 79.4653 cv
100.352 79.606 100.492 79.8091 100.648 80.0903 cv
100.789 80.356 li
101.023 80.7935 101.164 81.0435 101.18 81.0747 cv
101.211 81.1372 101.258 81.1685 101.289 81.1997 cv
101.32 81.2153 101.383 81.2153 101.445 81.2153 cv
101.789 81.2153 li
101.867 81.2153 101.93 81.1997 101.977 81.1528 cv
102.023 81.106 102.039 81.0435 102.039 80.9653 cv
102.039 80.8716 102.008 80.7935 101.961 80.7622 cv
101.914 80.731 101.82 80.7153 101.664 80.7153 cv
101.602 80.7153 li
101.195 79.9497 100.898 79.4497 100.711 79.231 cv
100.523 79.0122 100.305 78.8872 100.102 78.8403 cv
101.492 77.4966 li
101.539 77.4966 li
101.68 77.4966 101.773 77.481 101.836 77.4497 cv
101.883 77.4028 101.914 77.3403 101.914 77.2466 cv
101.914 77.1685 101.898 77.106 101.852 77.0591 cv
101.805 77.0122 101.742 76.9966 101.664 76.9966 cv
100.617 76.9966 li
100.523 76.9966 100.461 77.0122 100.414 77.0435 cv
100.383 77.0903 100.367 77.1528 100.367 77.2466 cv
100.367 77.3403 100.398 77.4028 100.445 77.4497 cv
100.492 77.481 100.57 77.4966 100.695 77.4966 cv
100.82 77.4966 li
99.3198 78.9497 li
99.3198 77.4966 li
99.4922 77.4966 li
99.6641 77.4966 99.7891 77.481 99.8521 77.4497 cv
99.9141 77.4028 99.9448 77.3403 99.9448 77.2466 cv
99.9448 77.1528 99.9302 77.0903 99.8672 77.0435 cv
99.8198 77.0122 99.7271 76.9966 99.5859 76.9966 cv
98.3672 76.9966 li
98.2891 76.9966 98.2271 77.0122 98.1948 77.0591 cv
98.1479 77.106 98.1172 77.1685 98.1172 77.2466 cv
98.1172 77.3403 98.1479 77.4028 98.1948 77.4497 cv
98.2422 77.481 98.3672 77.4966 98.5391 77.4966 cv
98.7729 77.4966 li
98.7729 80.7153 li
98.4302 80.7153 li
98.3198 80.7153 98.2422 80.731 98.1948 80.7778 cv
98.1479 80.8091 98.1172 80.8716 98.1172 80.9653 cv
98.1172 81.0435 98.1479 81.106 98.1948 81.1528 cv
98.2271 81.1997 98.2891 81.2153 98.3672 81.2153 cv
99.5859 81.2153 li
99.7271 81.2153 99.8198 81.1997 99.8672 81.1528 cv
99.9302 81.1216 99.9448 81.0591 99.9448 80.9653 cv
99.9448 80.8716 99.9141 80.8091 99.8521 80.7778 cv
99.8052 80.731 99.7109 80.7153 99.5698 80.7153 cv
99.3198 80.7153 li
99.3198 79.5903 li
cp
f
103.57 79.231 mo
105.289 79.231 li
105.289 80.7153 li
105.117 80.7153 li
104.93 80.7153 104.82 80.731 104.758 80.7622 cv
104.695 80.7935 104.664 80.8716 104.664 80.9653 cv
104.664 81.0591 104.695 81.1216 104.742 81.1528 cv
104.789 81.1997 104.914 81.2153 105.117 81.2153 cv
105.852 81.2153 li
106.023 81.2153 106.148 81.1997 106.195 81.1528 cv
106.242 81.1216 106.273 81.0591 106.273 80.9653 cv
106.273 80.8716 106.242 80.8091 106.195 80.7778 cv
106.133 80.731 106.039 80.7153 105.898 80.7153 cv
105.836 80.7153 li
105.836 77.4966 li
105.93 77.4966 li
106.055 77.4966 106.148 77.481 106.195 77.4497 cv
106.242 77.4028 106.273 77.3403 106.273 77.2466 cv
106.273 77.1528 106.242 77.106 106.211 77.0591 cv
106.164 77.0122 106.102 76.9966 106.008 76.9966 cv
105.133 76.9966 li
104.93 76.9966 104.789 77.0122 104.742 77.0435 cv
104.695 77.0903 104.664 77.1528 104.664 77.2466 cv
104.664 77.3403 104.695 77.4028 104.758 77.4497 cv
104.805 77.481 104.898 77.4966 105.039 77.4966 cv
105.289 77.4966 li
105.289 78.7466 li
103.57 78.7466 li
103.57 77.4966 li
103.742 77.4966 li
103.914 77.4966 104.039 77.481 104.102 77.4497 cv
104.164 77.4028 104.195 77.3403 104.195 77.2466 cv
104.195 77.1528 104.18 77.0903 104.117 77.0435 cv
104.07 77.0122 103.945 76.9966 103.758 76.9966 cv
102.867 76.9966 li
102.773 76.9966 102.695 77.0122 102.664 77.0591 cv
102.617 77.0903 102.586 77.1528 102.586 77.2466 cv
102.586 77.3403 102.617 77.4028 102.68 77.4497 cv
102.727 77.481 102.82 77.4966 102.961 77.4966 cv
103.023 77.4966 li
103.023 80.7153 li
102.961 80.7153 li
102.82 80.7153 102.711 80.731 102.664 80.7622 cv
102.617 80.7935 102.586 80.8716 102.586 80.9653 cv
102.586 81.0435 102.617 81.106 102.664 81.1528 cv
102.695 81.1997 102.773 81.2153 102.852 81.2153 cv
103.789 81.2153 li
103.961 81.2153 104.07 81.1997 104.117 81.1528 cv
104.18 81.1216 104.195 81.0591 104.195 80.9653 cv
104.195 80.8716 104.164 80.8091 104.117 80.7778 cv
104.055 80.731 103.961 80.7153 103.82 80.7153 cv
103.57 80.7153 li
103.57 79.231 li
cp
f
108.273 79.9341 mo
108.273 82.8091 li
107.773 82.8091 li
107.602 82.8091 107.492 82.8091 107.445 82.8403 cv
107.398 82.8716 107.383 82.9341 107.383 83.0122 cv
107.383 83.0747 107.398 83.1216 107.445 83.1685 cv
107.477 83.1997 107.539 83.2153 107.617 83.2153 cv
109.367 83.2153 li
109.445 83.2153 109.508 83.1997 109.539 83.1685 cv
109.586 83.1216 109.602 83.0747 109.602 83.0122 cv
109.602 82.9341 109.57 82.8716 109.523 82.8403 cv
109.492 82.8091 109.367 82.8091 109.195 82.8091 cv
108.727 82.8091 li
108.727 79.6372 li
108.727 79.5747 108.711 79.5278 108.695 79.4966 cv
108.68 79.4653 108.648 79.4341 108.602 79.4341 cv
108.586 79.4341 108.57 79.4341 108.555 79.4497 cv
108.523 79.4497 108.508 79.4497 108.477 79.4653 cv
107.617 79.6997 li
107.555 79.7153 107.508 79.731 107.477 79.7778 cv
107.445 79.8091 107.414 79.856 107.414 79.9028 cv
107.414 79.9497 107.445 79.9966 107.477 80.0278 cv
107.523 80.0591 107.57 80.0903 107.633 80.0903 cv
107.633 80.0903 107.648 80.0903 107.664 80.0747 cv
107.68 80.0747 107.695 80.0747 107.711 80.0747 cv
108.273 79.9341 li
cp
f
95.0859 89.7153 mo
95.0859 88.6216 li
95.6948 88.6216 li
96.2891 88.6216 96.7271 88.5122 97.0229 88.2935 cv
97.3198 88.0747 97.4771 87.7466 97.4771 87.3091 cv
97.4771 86.8716 97.3198 86.5435 97.0229 86.3247 cv
96.7109 86.106 96.2729 85.9966 95.6948 85.9966 cv
94.0552 85.9966 li
93.9771 85.9966 93.9141 86.0122 93.8672 86.0591 cv
93.8198 86.106 93.8052 86.1685 93.8052 86.2466 cv
93.8052 86.3403 93.8198 86.4028 93.8828 86.4497 cv
93.9302 86.481 94.0552 86.4966 94.2729 86.4966 cv
94.5229 86.4966 li
94.5229 89.7153 li
94.0552 89.7153 li
93.9771 89.7153 93.9141 89.731 93.8672 89.7778 cv
93.8198 89.8091 93.8052 89.8716 93.8052 89.9653 cv
93.8052 90.0435 93.8198 90.106 93.8672 90.1528 cv
93.9141 90.1997 93.9771 90.2153 94.0552 90.2153 cv
95.8052 90.2153 li
95.9302 90.2153 96.0391 90.1997 96.0859 90.1528 cv
96.1328 90.1216 96.1479 90.0591 96.1479 89.9653 cv
96.1479 89.8716 96.1328 89.8091 96.0698 89.7778 cv
96.0229 89.731 95.9448 89.7153 95.8198 89.7153 cv
95.0859 89.7153 li
cp
95.7422 86.4966 mo
96.1172 86.4966 96.3979 86.5747 96.5859 86.6997 cv
96.7729 86.8403 96.8672 87.0591 96.8672 87.3247 cv
96.8672 87.606 96.7729 87.8091 96.5859 87.9497 cv
96.3979 88.0903 96.1172 88.1528 95.7422 88.1528 cv
95.0859 88.1528 li
95.0859 86.4966 li
95.7422 86.4966 li
cp
f
99.3198 88.5903 mo
99.7271 88.231 li
99.8828 88.2466 100.055 88.3247 100.195 88.4653 cv
100.352 88.606 100.492 88.8091 100.648 89.0903 cv
100.789 89.356 li
101.023 89.7935 101.164 90.0435 101.18 90.0747 cv
101.211 90.1372 101.258 90.1685 101.289 90.1997 cv
101.32 90.2153 101.383 90.2153 101.445 90.2153 cv
101.789 90.2153 li
101.867 90.2153 101.93 90.1997 101.977 90.1528 cv
102.023 90.106 102.039 90.0435 102.039 89.9653 cv
102.039 89.8716 102.008 89.7935 101.961 89.7622 cv
101.914 89.731 101.82 89.7153 101.664 89.7153 cv
101.602 89.7153 li
101.195 88.9497 100.898 88.4497 100.711 88.231 cv
100.523 88.0122 100.305 87.8872 100.102 87.8403 cv
101.492 86.4966 li
101.539 86.4966 li
101.68 86.4966 101.773 86.481 101.836 86.4497 cv
101.883 86.4028 101.914 86.3403 101.914 86.2466 cv
101.914 86.1685 101.898 86.106 101.852 86.0591 cv
101.805 86.0122 101.742 85.9966 101.664 85.9966 cv
100.617 85.9966 li
100.523 85.9966 100.461 86.0122 100.414 86.0435 cv
100.383 86.0903 100.367 86.1528 100.367 86.2466 cv
100.367 86.3403 100.398 86.4028 100.445 86.4497 cv
100.492 86.481 100.57 86.4966 100.695 86.4966 cv
100.82 86.4966 li
99.3198 87.9497 li
99.3198 86.4966 li
99.4922 86.4966 li
99.6641 86.4966 99.7891 86.481 99.8521 86.4497 cv
99.9141 86.4028 99.9448 86.3403 99.9448 86.2466 cv
99.9448 86.1528 99.9302 86.0903 99.8672 86.0435 cv
99.8198 86.0122 99.7271 85.9966 99.5859 85.9966 cv
98.3672 85.9966 li
98.2891 85.9966 98.2271 86.0122 98.1948 86.0591 cv
98.1479 86.106 98.1172 86.1685 98.1172 86.2466 cv
98.1172 86.3403 98.1479 86.4028 98.1948 86.4497 cv
98.2422 86.481 98.3672 86.4966 98.5391 86.4966 cv
98.7729 86.4966 li
98.7729 89.7153 li
98.4302 89.7153 li
98.3198 89.7153 98.2422 89.731 98.1948 89.7778 cv
98.1479 89.8091 98.1172 89.8716 98.1172 89.9653 cv
98.1172 90.0435 98.1479 90.106 98.1948 90.1528 cv
98.2271 90.1997 98.2891 90.2153 98.3672 90.2153 cv
99.5859 90.2153 li
99.7271 90.2153 99.8198 90.1997 99.8672 90.1528 cv
99.9302 90.1216 99.9448 90.0591 99.9448 89.9653 cv
99.9448 89.8716 99.9141 89.8091 99.8521 89.7778 cv
99.8052 89.731 99.7109 89.7153 99.5698 89.7153 cv
99.3198 89.7153 li
99.3198 88.5903 li
cp
f
103.57 88.231 mo
105.289 88.231 li
105.289 89.7153 li
105.117 89.7153 li
104.93 89.7153 104.82 89.731 104.758 89.7622 cv
104.695 89.7935 104.664 89.8716 104.664 89.9653 cv
104.664 90.0591 104.695 90.1216 104.742 90.1528 cv
104.789 90.1997 104.914 90.2153 105.117 90.2153 cv
105.852 90.2153 li
106.023 90.2153 106.148 90.1997 106.195 90.1528 cv
106.242 90.1216 106.273 90.0591 106.273 89.9653 cv
106.273 89.8716 106.242 89.8091 106.195 89.7778 cv
106.133 89.731 106.039 89.7153 105.898 89.7153 cv
105.836 89.7153 li
105.836 86.4966 li
105.93 86.4966 li
106.055 86.4966 106.148 86.481 106.195 86.4497 cv
106.242 86.4028 106.273 86.3403 106.273 86.2466 cv
106.273 86.1528 106.242 86.106 106.211 86.0591 cv
106.164 86.0122 106.102 85.9966 106.008 85.9966 cv
105.133 85.9966 li
104.93 85.9966 104.789 86.0122 104.742 86.0435 cv
104.695 86.0903 104.664 86.1528 104.664 86.2466 cv
104.664 86.3403 104.695 86.4028 104.758 86.4497 cv
104.805 86.481 104.898 86.4966 105.039 86.4966 cv
105.289 86.4966 li
105.289 87.7466 li
103.57 87.7466 li
103.57 86.4966 li
103.742 86.4966 li
103.914 86.4966 104.039 86.481 104.102 86.4497 cv
104.164 86.4028 104.195 86.3403 104.195 86.2466 cv
104.195 86.1528 104.18 86.0903 104.117 86.0435 cv
104.07 86.0122 103.945 85.9966 103.758 85.9966 cv
102.867 85.9966 li
102.773 85.9966 102.695 86.0122 102.664 86.0591 cv
102.617 86.0903 102.586 86.1528 102.586 86.2466 cv
102.586 86.3403 102.617 86.4028 102.68 86.4497 cv
102.727 86.481 102.82 86.4966 102.961 86.4966 cv
103.023 86.4966 li
103.023 89.7153 li
102.961 89.7153 li
102.82 89.7153 102.711 89.731 102.664 89.7622 cv
102.617 89.7935 102.586 89.8716 102.586 89.9653 cv
102.586 90.0435 102.617 90.106 102.664 90.1528 cv
102.695 90.1997 102.773 90.2153 102.852 90.2153 cv
103.789 90.2153 li
103.961 90.2153 104.07 90.1997 104.117 90.1528 cv
104.18 90.1216 104.195 90.0591 104.195 89.9653 cv
104.195 89.8716 104.164 89.8091 104.117 89.7778 cv
104.055 89.731 103.961 89.7153 103.82 89.7153 cv
103.57 89.7153 li
103.57 88.231 li
cp
f
108.273 88.9341 mo
108.273 91.8091 li
107.773 91.8091 li
107.602 91.8091 107.492 91.8091 107.445 91.8403 cv
107.398 91.8716 107.383 91.9341 107.383 92.0122 cv
107.383 92.0747 107.398 92.1216 107.445 92.1685 cv
107.477 92.1997 107.539 92.2153 107.617 92.2153 cv
109.367 92.2153 li
109.445 92.2153 109.508 92.1997 109.539 92.1685 cv
109.586 92.1216 109.602 92.0747 109.602 92.0122 cv
109.602 91.9341 109.57 91.8716 109.523 91.8403 cv
109.492 91.8091 109.367 91.8091 109.195 91.8091 cv
108.727 91.8091 li
108.727 88.6372 li
108.727 88.5747 108.711 88.5278 108.695 88.4966 cv
108.68 88.4653 108.648 88.4341 108.602 88.4341 cv
108.586 88.4341 108.57 88.4341 108.555 88.4497 cv
108.523 88.4497 108.508 88.4497 108.477 88.4653 cv
107.617 88.6997 li
107.555 88.7153 107.508 88.731 107.477 88.7778 cv
107.445 88.8091 107.414 88.856 107.414 88.9028 cv
107.414 88.9497 107.445 88.9966 107.477 89.0278 cv
107.523 89.0591 107.57 89.0903 107.633 89.0903 cv
107.633 89.0903 107.648 89.0903 107.664 89.0747 cv
107.68 89.0747 107.695 89.0747 107.711 89.0747 cv
108.273 88.9341 li
cp
f
231.961 122.77 mo
233.711 123.563 235.148 122.11 236.613 121.84 cv
236.973 122.247 236.559 123.071 236.762 123.54 cv
237.824 124.309 239.891 124.028 240.676 125.083 cv
240.211 125.454 239.582 124.852 238.758 124.622 cv
237.336 124.223 235.785 124.465 236.316 122.383 cv
235.047 122.977 232.918 124.09 231.445 123.075 cv
230.945 123.329 230.527 123.665 229.965 123.848 cv
229.379 125.09 228.891 126.43 228.414 127.79 cv
227.387 127.418 227.355 126.012 226.125 125.856 cv
225.922 126.161 225.852 126.602 225.754 127.016 cv
226.043 127.094 226.352 126.165 226.789 126.399 cv
226.828 126.989 226.16 127.485 225.605 127.711 cv
224.996 127.321 225.469 126.446 225.605 125.778 cv
224.672 126.524 222.781 127.352 220.949 127.247 cv
220.246 127.208 219.348 127.032 218.809 126.629 cv
217.469 125.625 217.828 122.997 218.734 121.766 cv
219.578 120.622 220.781 120.215 222.133 119.833 cv
222.547 119.157 222.766 118.278 223.094 117.52 cv
223.512 117.485 223.621 117.407 223.758 116.977 cv
225.945 116.122 228.473 115.625 230.258 114.348 cv
227.992 114.77 225.504 115.528 223.168 116.204 cv
222.426 116.418 221.68 116.805 220.949 116.668 cv
221.035 116.208 221.645 116.153 221.988 116.051 cv
223.156 115.7 224.465 115.34 225.754 114.969 cv
227.426 114.489 229.219 113.801 230.926 113.965 cv
230.969 114.77 230.125 115.004 229.598 115.278 cv
227.988 116.114 225.785 116.715 223.98 117.442 cv
224.281 118.442 225.02 118.981 225.605 119.68 cv
226.574 119.672 227.375 119.836 228.191 119.989 cv
229.07 118.922 229.797 117.493 230.629 116.282 cv
230.855 115.954 231.16 115.399 231.59 115.434 cv
231.453 116.333 230.695 116.981 230.188 117.75 cv
229.676 118.516 229.25 119.36 228.785 120.145 cv
229.328 120.524 230.219 120.547 230.406 121.301 cv
229.738 121.45 229.289 120.723 228.633 120.606 cv
227.688 121.75 227.18 123.356 226.492 124.774 cv
227.719 124.54 228.625 123.965 229.668 123.54 cv
230.086 122.575 230.668 121.958 230.777 120.606 cv
230.973 118.184 232.453 116.762 233.883 115.512 cv
233.957 115.125 234.188 114.903 234.324 114.586 cv
234.609 114.516 234.586 114.77 234.766 114.817 cv
236.27 113.727 239.055 112.993 241.562 113.192 cv
242.016 113.231 243.055 113.356 243.043 113.965 cv
243.023 114.942 241.465 116.071 240.754 116.668 cv
238.129 118.864 234.574 121.118 231.961 122.77 cv
239.715 113.735 mo
237.691 113.903 235.242 114.551 234.176 115.817 cv
233.539 116.571 233.234 117.688 232.699 118.676 cv
232.145 119.7 230.793 121.313 231.516 122.461 cv
234.531 120.61 237.574 118.688 240.234 116.516 cv
241.086 115.817 242.129 115.008 242.527 113.887 cv
241.648 113.547 240.648 113.657 239.715 113.735 cv
239.715 113.735 li
cp
231.371 120.219 mo
231.816 119.067 232.691 117.95 232.996 116.899 cv
232.312 117.809 231.426 118.915 231.371 120.219 cv
231.371 120.219 li
cp
222.727 119.754 mo
223.379 119.614 224.242 119.696 224.867 119.524 cv
224.336 119 223.895 118.379 223.465 117.75 cv
223.273 118.481 222.949 119.067 222.727 119.754 cv
222.727 119.754 li
cp
222.578 120.219 mo
222.285 120.75 222.172 121.446 221.988 122.149 cv
221.824 122.774 221.781 123.653 221.246 123.926 cv
221.059 122.872 221.723 121.465 221.988 120.375 cv
219.977 120.782 218.305 122.301 218.367 124.543 cv
218.41 126.204 219.656 126.797 221.395 126.786 cv
225.082 126.75 227.777 123.45 225.309 120.145 cv
224.582 119.997 223.531 120.168 222.578 120.219 cv
222.578 120.219 li
cp
226.789 123 mo
227.184 122.125 227.617 121.293 228.047 120.454 cv
227.402 120.274 226.633 120.227 225.902 120.145 cv
226.352 120.934 226.641 121.891 226.789 123 cv
226.789 123 li
cp
230.406 123.075 mo
230.68 123.028 230.84 122.86 231.074 122.77 cv
231.023 122.54 231.055 122.223 230.852 122.149 cv
230.73 122.489 230.535 122.75 230.406 123.075 cv
230.406 123.075 li
cp
226.348 125.469 mo
227.332 125.649 227.676 126.5 228.266 127.094 cv
228.43 126 228.859 125.192 229.301 124.387 cv
229.289 124.297 229.277 124.208 229.152 124.235 cv
228.379 124.817 227.172 124.942 226.348 125.469 cv
226.348 125.469 li
cp
0.8 0.415686 0.152941 0 cmyk
ef
246.023 100.942 mo
246.023 100.446 li
230.059 100.446 li
230.059 100.942 li
230.523 100.762 li
229.402 97.895 226.598 95.8677 223.309 95.8677 cv
221.172 95.8677 219.234 96.7271 217.832 98.1138 cv
216.434 99.5005 215.562 101.422 215.562 103.54 cv
215.562 103.567 li
215.574 103.786 li
215.562 104.008 li
215.562 104.036 li
215.562 106.153 216.434 108.075 217.832 109.461 cv
219.234 110.844 221.172 111.704 223.309 111.704 cv
226.355 111.704 228.988 109.958 230.25 107.422 cv
229.805 107.2 li
229.805 107.7 li
231.137 107.7 li
231.387 107.7 231.598 107.516 231.633 107.266 cv
231.656 107.075 231.77 106.883 231.969 106.731 cv
232.168 106.583 232.449 106.477 232.77 106.481 cv
233.086 106.477 233.367 106.583 233.566 106.731 cv
233.766 106.883 233.879 107.075 233.902 107.266 cv
233.938 107.516 234.148 107.7 234.398 107.7 cv
235.863 107.7 li
236.117 107.7 236.328 107.516 236.359 107.266 cv
236.387 107.075 236.5 106.883 236.699 106.731 cv
236.898 106.583 237.18 106.477 237.496 106.481 cv
237.816 106.477 238.094 106.583 238.293 106.731 cv
238.492 106.883 238.605 107.075 238.633 107.266 cv
238.664 107.516 238.875 107.7 239.129 107.7 cv
240.598 107.7 li
240.848 107.7 241.059 107.516 241.09 107.266 cv
241.117 107.075 241.23 106.883 241.43 106.731 cv
241.629 106.583 241.906 106.477 242.227 106.481 cv
242.547 106.477 242.824 106.583 243.023 106.731 cv
243.223 106.883 243.336 107.075 243.363 107.266 cv
243.395 107.516 243.605 107.7 243.855 107.7 cv
244.879 107.7 li
245.023 107.7 245.16 107.637 245.258 107.528 cv
249.016 103.219 li
249.098 103.125 249.141 103.012 249.141 102.891 cv
249.141 102.395 li
249.141 102.211 249.043 102.043 248.883 101.958 cv
246.27 100.508 li
246.023 100.446 li
246.023 100.942 li
245.781 101.383 li
248.141 102.688 li
248.141 102.704 li
244.652 106.7 li
243.855 106.7 li
243.855 107.2 li
244.352 107.133 li
244.285 106.641 244.008 106.223 243.629 105.934 cv
243.246 105.645 242.758 105.481 242.227 105.481 cv
241.695 105.481 241.207 105.645 240.824 105.934 cv
240.445 106.219 240.164 106.641 240.102 107.133 cv
240.598 107.2 li
240.598 106.7 li
239.129 106.7 li
239.129 107.2 li
239.621 107.133 li
239.555 106.641 239.277 106.223 238.898 105.934 cv
238.516 105.645 238.027 105.481 237.496 105.481 cv
236.969 105.481 236.477 105.645 236.098 105.934 cv
235.715 106.223 235.438 106.641 235.371 107.133 cv
235.863 107.2 li
235.863 106.7 li
234.398 106.7 li
234.398 107.2 li
234.895 107.133 li
234.828 106.641 234.551 106.219 234.168 105.934 cv
233.785 105.645 233.297 105.481 232.77 105.481 cv
232.238 105.481 231.75 105.645 231.367 105.934 cv
230.984 106.219 230.707 106.641 230.641 107.133 cv
231.137 107.2 li
231.137 106.7 li
229.805 106.7 li
229.613 106.7 229.441 106.805 229.355 106.977 cv
228.254 109.184 225.969 110.704 223.309 110.704 cv
221.441 110.704 219.758 109.958 218.535 108.75 cv
217.316 107.54 216.562 105.875 216.562 104.036 cv
216.062 104.036 li
216.562 104.063 li
216.574 103.813 li
216.574 103.758 li
216.562 103.512 li
216.062 103.54 li
216.562 103.54 li
216.562 101.696 217.316 100.036 218.535 98.8247 cv
219.758 97.6177 221.441 96.8677 223.309 96.8677 cv
226.176 96.8677 228.617 98.6372 229.59 101.125 cv
229.664 101.317 229.852 101.442 230.059 101.442 cv
246.023 101.442 li
246.023 100.942 li
245.781 101.383 li
246.023 100.942 li
0.733333 0.705882 0.654902 0.776471 cmyk
f
248.641 102.395 mo
230.059 101.442 li
229.012 98.7622 226.387 96.8638 223.309 96.8638 cv
219.309 96.8638 216.062 100.075 216.062 104.036 cv
216.062 107.993 219.309 111.204 223.309 111.204 cv
226.16 111.204 228.621 109.571 229.805 107.2 cv
231.137 107.2 li
231.23 106.516 231.922 105.981 232.77 105.981 cv
233.613 105.981 234.309 106.516 234.398 107.2 cv
235.863 107.2 li
235.961 106.516 236.648 105.981 237.496 105.981 cv
238.344 105.981 239.035 106.516 239.129 107.2 cv
240.598 107.2 li
240.688 106.516 241.379 105.981 242.227 105.981 cv
243.074 105.981 243.766 106.516 243.855 107.2 cv
244.879 107.2 li
248.641 102.891 li
248.641 102.395 li
0.823529 0.192157 1 0.0392157 cmyk
f
248.641 102.395 mo
248.648 102.243 li
230.062 101.29 li
230.059 101.442 li
230.195 101.387 li
229.129 98.6528 226.449 96.7153 223.309 96.7153 cv
221.266 96.7153 219.418 97.5356 218.078 98.8599 cv
216.742 100.18 215.91 102.012 215.91 104.036 cv
215.91 106.055 216.742 107.887 218.078 109.211 cv
219.418 110.536 221.266 111.352 223.309 111.352 cv
226.219 111.352 228.73 109.688 229.938 107.266 cv
229.805 107.2 li
229.805 107.348 li
231.137 107.348 li
231.285 107.219 li
231.359 106.629 231.98 106.129 232.77 106.129 cv
233.555 106.129 234.176 106.629 234.25 107.219 cv
234.398 107.348 li
235.863 107.348 li
236.016 107.219 li
236.094 106.629 236.711 106.129 237.496 106.129 cv
238.281 106.129 238.902 106.629 238.977 107.219 cv
239.129 107.348 li
240.598 107.348 li
240.742 107.219 li
240.82 106.629 241.438 106.129 242.227 106.129 cv
243.016 106.129 243.633 106.629 243.711 107.219 cv
243.855 107.348 li
244.879 107.348 li
244.992 107.297 li
248.754 102.989 li
248.789 102.891 li
248.789 102.395 li
248.648 102.243 li
248.641 102.395 li
248.492 102.395 li
248.492 102.833 li
244.812 107.051 li
243.855 107.051 li
243.855 107.2 li
244.008 107.18 li
243.895 106.403 243.137 105.829 242.227 105.829 cv
241.316 105.829 240.555 106.403 240.445 107.18 cv
240.598 107.2 li
240.598 107.051 li
239.129 107.051 li
239.129 107.2 li
239.277 107.18 li
239.168 106.403 238.402 105.829 237.496 105.829 cv
236.59 105.829 235.824 106.403 235.719 107.18 cv
235.863 107.2 li
235.863 107.051 li
234.398 107.051 li
234.398 107.2 li
234.547 107.18 li
234.438 106.403 233.676 105.829 232.77 105.829 cv
231.859 105.829 231.098 106.403 230.988 107.18 cv
231.137 107.2 li
231.137 107.051 li
229.805 107.051 li
229.668 107.133 li
228.512 109.454 226.105 111.055 223.309 111.055 cv
221.348 111.055 219.574 110.266 218.289 108.997 cv
217.008 107.727 216.215 105.973 216.211 104.036 cv
216.215 102.098 217.008 100.344 218.289 99.0708 cv
219.574 97.8013 221.348 97.0161 223.309 97.0161 cv
226.324 97.0161 228.891 98.8755 229.918 101.497 cv
230.051 101.59 li
248.633 102.543 li
248.641 102.395 li
248.492 102.395 li
248.641 102.395 li
f
gsave
216 96.0981 mo
249 96.0981 li
249 110.782 li
216 110.782 li
216 96.0981 li
cp
clp
246.023 100.942 mo
230.059 100.942 li
229.012 98.2661 226.387 96.3677 223.309 96.3677 cv
219.309 96.3677 216.062 99.5786 216.062 103.54 cv
216.062 107.497 219.309 110.708 223.309 110.708 cv
226.16 110.708 228.621 109.075 229.805 106.704 cv
231.137 106.704 li
231.23 106.02 231.922 105.485 232.77 105.485 cv
233.613 105.485 234.309 106.02 234.398 106.704 cv
235.863 106.704 li
235.961 106.02 236.648 105.485 237.496 105.485 cv
238.344 105.485 239.035 106.02 239.129 106.704 cv
240.598 106.704 li
240.688 106.02 241.379 105.485 242.227 105.485 cv
243.074 105.485 243.766 106.02 243.855 106.704 cv
244.879 106.704 li
248.641 102.395 li
246.023 100.942 li
cp
clp
216 96.0981 mo
249 96.0981 li
249 111.098 li
216 111.098 li
216 96.0981 li
cp
clp
216 96.0981 mo
249 96.0981 li
249 111.098 li
216 111.098 li
216 96.0981 li
cp
clp
246.023 100.942 mo
230.059 100.942 li
229.012 98.2661 226.387 96.3677 223.309 96.3677 cv
219.309 96.3677 216.062 99.5786 216.062 103.54 cv
216.062 107.497 219.309 110.708 223.309 110.708 cv
226.16 110.708 228.621 109.075 229.805 106.704 cv
231.137 106.704 li
231.23 106.02 231.922 105.485 232.77 105.485 cv
233.613 105.485 234.309 106.02 234.398 106.704 cv
235.863 106.704 li
235.961 106.02 236.648 105.485 237.496 105.485 cv
238.344 105.485 239.035 106.02 239.129 106.704 cv
240.598 106.704 li
240.688 106.02 241.379 105.485 242.227 105.485 cv
243.074 105.485 243.766 106.02 243.855 106.704 cv
244.879 106.704 li
248.641 102.395 li
246.023 100.942 li
clp
216 96.0981 mo
249 96.0981 li
249 111.098 li
216 111.098 li
216 96.0981 li
cp
clp
216.062 96.3677 mo
248.64 96.3677 li
248.64 110.708 li
216.062 110.708 li
216.062 96.3677 li
cp
clp
gsave
216 110.938 mo
216 96.2974 li
248.64 96.2974 li
248.64 110.938 li
216 110.938 li
cp
clp
214.887 112.239 mo
214.887 95.4388 li
251.367 95.4388 li
251.367 112.239 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 140.942 ]ct
[36.48 0 0 -16.8 214.887 45.5031 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 76 
/H 35 
/M[76 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 76 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 76 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 76 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 76 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&RfF;$UnXNSSt2@=R$X,&PEM&hNf8mQLPCJ6.tN5"I=$6`F`hbFDf'6&BP(gc?s[,D>$+d(
;GU%\8k;E>69dUq3]8fM0t%&^!Vuda`l?!8_8*gu]=GJ\['R*DYH=n,WMZMfTqJ$KR[KP/P`h/iN/NLI
KS"c(I<g'\FE2><ChdTo@prYJ>$+a&;,'\S7`PMm!(<WYU7e-MSXZ%7Q^3i!P*(fcN/NOJL4k/0J:;on
H$=CRF)c,8C1q9mARf+S?!LQ8<E)jl:.n2M7RTR-4Zkb`1bpfD!7q2N!Vuda`l?!8_8*gu]=GJ\['R*D
YH=n,WMZMfTqJ$KR[KP/P`h/iN/NLIKS"c(I<g'\FE2><ChdTo@prYJ>$+a&;,'\S7em%m!&LFHU7e-M
SXZ%7Q^3i!P*(fcN/NOJL4k/0J:;onH$=CRF)c,8C1q9mARf+S?!LQ8<E'N-:JOPT84H!65<V+i2Dd0D
[K$:.q>_GR`l5j3^q[Oo\[f/UZa6p?XfSS&VPU)^TV![(R[KP/P`h/iN/NLIKS"c(I<g'\FE2><ChdTo
@prYJ>$+a&;,'\S7]lakUdCfKT:VUCR@'>,PEV/lO,f0WM2-h=Jq8H$I=$6`F`hbFDf'6&BP(gc?s[,D
>$+d(;GU%\8k;E>69dUq3]8fM0uX.`!!!&r!(=iH`P]O-^V%1h\[JlOZa$^9XK/=tV50fXT:MF=R$Nu"
OcPHZLkgY8JUW#mG]n1LE,KK,B4YR]?!LQ8<)ZXg91VP/!7:d7Unj`XT:VUCR@'>,PEV/lO,f0WM2-h=
Jq8H$I=$6`F`hbFDf'6&BP(gc?s[,D>$+d(;GU%\8k;E>69dUq3]8fM1%t[`!!!&r!&_d9`P]O-^V%1h
\[JlOZa$^9XK/=tV50fXT:MF=R$Nu"OcPHZLkgY8JUW#mG]n1LE,KK,%VK?_@9m,A=B&3r9hS#HXoKH;
UnXNSSt2@=R$X,&PEM&hNf8mQLPCJ6JUi2t-[U,_F`hbFDf'6&BP(gc?s[,D>$+d(;GU%\8k;E>69dUq
3]8fM0t%&^!Vucu`l?!85f(7N]Xt_b[^<BIZ*1:2X/VtmUnOHRSXPt6QB[PpO,T!QLP181IXQKdG'%bD
DJX'#ARf.S>Zt6/;c-7^84LJsli9GLUnXNSSt2@=R$X,&PEM&hNf8mQLPCJ6JUi2tH[0gXF`VP@D/*`t
An>I[?<pf>=B/<u:JOPT84H!65<V+i2Dd0Dg]6(/!!2or7)m6c_nj.']Xt_b[^<BIZ*1:2X/VtmUnOHR
SXPt6QB[PpO,T!QLP181IXQKdG'%bDDJX'#ARf.S>Zt6/;c-7^84N7P\c=[bUnXNSSt2@=R$X,&PEM&h
Nf8mQLPCJ6JUi2tH[0gXF`VP@D/*`tAn>I[?<pf>=B/<u:JOOk8k;E>69dUq3]8fM0t%&^!Vud;`l?!8
_8*gu]=GJ\['R*DYH=n,WMZMfTqJ$KR[KNhQB[PpO,T!QLP181IXQKdG'%bDDJX'#ARf.S>Zt6/;c-7^
84K`^"f.rgTV%f>SXZ%7Q^3i!P*(fcN/NOJL4k/0J:;onH$=CRF)c,8C1q9mARf+S?!LQ8<E)jl:.n2M
7RTR-4Zkb`1bpf%!;6Bm!Vuda`l?!8_8*gu]=GJ\['R*DYH=n,WMZMfTqJ$KR[KP/P`h/iN/NLIKS"c(
I<g'\FE2><ChdTo@prYJ>$+a&;,'\S7bRjm!(<WYU7e-MSXZ%7Q^3i!P*(fcN/NOJL4k/0J:;onH$=CR
F)c,8C1q9mARf+S?!LQ8<E)jl:.n2M7RTR-4Zkb`1bpfW!5nj;!VudV`l?!8_8*gu]=GJ\['R*DYH=n,
WMZMfTqJ$KR[KP/P`h/iN/NLIKS"c(I<g'\FE2><ChdTo@po^M>Zt6/;c-7^84K`^+Jbg-TV%gHS!fY1
QBRMqOcPN]Mi!4DKS"c*IXQQgGBG-QF)c,8C1q9mARf+S?!LQ8<E)jl:.n2M7RTR-4Zkb`1bpeo!!!&r
!!gN``P]O-^Uu\@\[f/UZa6p?XfSS&VPU)^TV%dDR@';)P*(faMhm.AJq8B!H$FLSEc>o4C1h*f@9m,A
=B&3r9hS#H^B!a'7&6WQTV%gHS!fY1QBRMqOcPN]Mi!4DKS"c*IXQQgGBJ%LEGo]/BP;!h@piVK>Zt60
<)QLe91h`E6pa+$4?>AW1,8\,])Vg3q>`4h`l5j3^q[Oo\[f/UZa6p?XfSS&VPU)^TV%dDR@';)P*(fa
Mhm.AJq8B!H$FLS'68&0ChdTo@prYJ>$+a&;,'\S7]l_-Unj`XT:VUCR@'>,PEV/lO,f0WM2-h=/:rG'
IXQQgGBJ%LEGo]/BP;!h@piVK>Zt60<)QLe91h`E6pa+$4?>AW1,63;!!2rs70(?I`P]O-^V%1h\[JlO
Za$^9XK/=tV50fXT:MF=R$Nu"OcPHZLkgY8JUW#mG]n1LE,KK,B4YR]?!LQ8<)ZXg91VOn!9X>MUnj`X
T:VUCR@'>,PEV/lO,f0WM2-h=Jq8H$I=$6`F`hbFDf'6&BP(gc?s[,D>$+d(;GU%\8k;E>69dUq3]8fM
1#W,`!!!&r!(=iH`P]O-^V%1h\[JlOZa$^9XK/=tV50fXT:MF=R$Nu"OcPHZLkgY8JUW#mG]n1LE,KK,
B4YR]?!LQ8<)ZXg91VPK!4;e^Unj`XT:VUCR@'>,PEV/lO,f0WM2-h=Jq8H$I=$6`F`hbFDf'6&BP(gc
?s[,D>$+c:<)QLe91h`E6pa+$4?>AW1,63;!!2or)90\8_nj.']Xt_b[^<BIZ*1:2X/VtmUnOG2T:MF=
R$Nu"OcPHZLkgY8JUW#mG]n1LE,KK,B4YR]?!LQ8<)ZXg91VOT!!&f^UnXNSSt2@=R$X,&PEM&hNf8mQ
LPCJ6JUi2tH[0gXF`VP@D/*`tAn>I[?<pf>=B/<u:JOPT84H!65<V+i2Dd0D`W5N/!!2or7)m6c_nj.'
]Xt_b[^<BIZ*1:2X/VtmUnOHRSXPt6QB[PpO,T!QLP181IXQKdG'%bDDJX'#ARf.S>Zt6/;c-7^84MJ:
ci?J0UnXNSSt2@=R$X,&PEM&hNf8mQLPCJ6JUi2tH[0gXF`VP@D/*`tAn>I[?<pf>=B/<u:JOPT84H!6
5<V+i2Dd0Dp]/&/!!2or1rdPS_nj.']Xt_b[^<BIZ*1:2X/VtmUnOHRSXPt6QB[PpO,T!QLP181IXQKd
G'%bDDJThuB4YR]?!LQ8<)ZXg91VOT!#q`0U7e-MSXZ%7Q^3i!P*(fcN/NOJL4k/0J:8npH[0gXF`VP@
D/*`tAn>I[?<pf>=B/<u:JOPT84H!65<V+i2Dd0D[K$:.q>^T:`l16]_8*gu]=GJ\['R*DYH=n,WMZMf
TqJ$KR[KP/P`h/iN/NLIKS"c(I<g'\FE2><ChdTo@prYJ>$+a&;,'\S7`5;m!(<WYU7e-MSXZ%7Q^3i!
P*(fcN/NOJL4k/0J:;onH$=CRF)c,8C1q9mARf+S?!LQ8<E)jl:.n2M7RTR-4Zkb`1bpfA!87DQ!Vuda
`l?!8_8*gu]=GJ\['R*DYH=n,WMZMfTqJ$KR[KP/P`h/iN/NLIKS"c(I<g'\FE2><ChdTo@prYJ>$+a&
;,'\S7eQhm!&gXKU7e-MSXZ%7Q^3i!P*(fcN/NOJL4k/0J:;onH$=CRF)c,8C1q9mARf+S?!LQ8<E)jl
:(9ig84H!65<V+i2Dd0D[K$:.q>_PU`l5j3^q[Oo\[f/UZa6p?XfSS&VPU)^TV%dDR3n;eP`h/iN/NLI
KS"c(I<g'\FE2><ChdTo@prYJ>$+a&;,'\S7]l^oUnj`XT0Jp<S!fY1QBRMqOcPN]Mi!4DKS"c*IXQQg
GBJ%LEGo]/BP;!h@piVK>Zt60<)QLe91h`E6pa+$4?>AW1,6WGo`+smq>`q'`l5j3^q[Oo\[f/UZa6p?
XfSS&VPU)^TV%dDR@';)P*(faMhm.AJq8B!H$FLSEc>o4C1h*f@9m,A=B&3r9hS#HgAo_'7&6WQTV%gH
S!fY1QBRMqOcPN]Mi!4DKS"c*IXQQgGBJ%LEGo]/BP;!h@piVK>Zt60<)QLe91h`E6pa+$4?>AW1,8D$
_Z0Z;q>`Lp`l5j3^q[Oo\[f/UZa6p?XfSS&VPU)^TV%dDR@';)P*(faMhm.AJq8B!H$FLSEc>o4C1h*f
$Xm=G>$+a&;,'\S7]l_5Unj`XT:VUCR@'>,PEV/lO,f0WM2-h=Jq8H$I=$6`,^"6NEGo]/BP;!h@piVK
>Zt60<)QLe91h`E6pa+$4?>AW1,63;!!2or#0+[%_nj.'4hSD;\[JlOZa$^9XK/=tV50fXT:MF=R$Nu"
OcPHZLkgY8JUW#mG]n1LE,KK,B4YR]?!LQ8<)ZXg91VOf!:KnUUnj`XT:VUCR@'>,PEV/lO,f0WM2-h=
Jq8H$I=$6`F`hbFDf'6&BP(gc?s[,D>$+d(;GU%\8k;E>69dUq3]8fM1"cQ`!!!&r!(=iH`P]O-^V%1h
\[JlOZa$^9XK/=tV50fXT:MF=R$Nu"OcPHZLkgY8JUW#mG]n1LE,KK,B4YR]?!LQ8<)ZXg91VPC!5/@n
Unj`XT:VUCR@'>,PEV/lO,f0WM2-h=Jq8H$I=$6`F`hbFDf'6&BP(gc?s[,D>$+d(;GU%\8k;DX6pa+$
4?>AW1,63;!!2ut7K<G.`l5j3^q[Oo\[f/UZa6p?XfSS&VPU)^TV%dDR@';)P*(faMhm.AJq8B!H$FLS
Ec>o4C1h*f@9m,A=B&3r9hS#HaT1H'7&6WQTV%gHS!fY1QBRMqOcPN]Mi!4DKS"c*IXQQgGBJ%LEGo]/
BP;!h@piVK>Zt60<)QLe91h`E6pa+$4?>AW1,7bgeGoRMq>`q'`l5j3^q[Oo\[f/UZa6p?XfSS&VPU)^
TV%dDR@';)P*(faMhm.AJq8B!H$FLSEc>o4C1h*f@9m,A=B&3r9hS#HqZ*u'0r1V>TV%gHS!fY1QBRMq
OcPN]Mi!4DKS"c*IXQQgGBJ%LEGo]/BP;!h@piVK>Zt5B<E)jl:.n2M7RTR-4Zkb`1bpeo!!!&r!#W_q
`P]O-^V%1h\[JlOZa$^9XK/=tV50e8TV%dDR@';)P*(faMhm.AJq8B!H$FLSEc>o4C1h*f@9m,A=B&3r
9hS#HXoLkcUnXNSSt2@=R$X,&PEM&hNf8mQLPCJ6JUi2tH[0gXF`VP@D/*`tAn>I[?<pf>=B/<u:JOPT
84H!65<V+i2Dd0D`rPT/!!2or7)m6c_nj.']Xt_b[^<BIZ*1:2X/VtmUnOHRSXPt6QB[PpO,T!QLP181
IXQKdG'%bDDJX'#ARf.S>Zt6/;c-7^84MM;cN$A/UnXNSSt2@=R$X,&PEM&hNf8mQLPCJ6JUi2tH[0gX
F`VP@D/*`tAn>I[?<pf>=B/<u:JOPT84H!65<V+i2Dd0Dq#J,/!!2or1WIGR_nj.']Xt_b[^<BIZ*1:2
X/VtmUnOHRSXPt6QB[PpO,T!QLP181IXQKdG'%bDD@gW!B4YR]?!LQ8<)ZXg91VOT!#hZ/U7e-MSXZ%7
Q^3i!P*(fcN/NOJL4k/0J15qqH[0gXF`VP@D/*`tAn>I[?<pf>=B/<u:JOPT84H!65<V+i2Dd0D[K$:.
q>gQ86H-jY^q[Oo\[f/UZa6p?XfSS&VPU)^TV%dDR@';)P*(faMhm.AJq8B!H$FLSEc>o4C1h*f@9m,A
=B&3r9hS#H`;o0'7&6WQTV%gHS!fY1QBRMqOcPN]Mi!4DKS"c*IXQQgGBJ%LEGo]/BP;!h@piVK>Zt60
<)QLe91h`E6pa+$4?>AW1,7Vcf`2!Qq>`q'`l5j3^q[Oo\[f/UZa6p?XfSS&VPU)^TV%dDR@';)P*(fa
Mhm.AJq8B!H$FLSEc>o4C1h*f@9m,A=B&3r9hS#HpAh]'25I%BTV%gHS!fY1QBRMqOcPN]Mi!4DKS"c*
IXQQgGBJ%LEGo]/BP;!h@piVK>Zt60<)QL%:.n2M7RTR-4Zkb`1bpeo!!!&r!$'"u`P]O-^V%1h\[JlO
Za$^9XK/=tV50fXT:MDuR@';)P*(faMhm.AJq8B!H$FLSEc>o4C1h*f@9m,A=B&3r9hS#HWW7VNJcO=$
J,~>

%%EndBinary
grestore
np
grestore
grestore
gsave
216 96.7817 mo
248 96.7817 li
248 110.782 li
216 110.782 li
216 96.7817 li
cp
clp
223.309 110.129 mo
219.633 110.129 216.645 107.172 216.645 103.54 cv
216.645 99.9067 219.633 96.9458 223.309 96.9458 cv
226.074 96.9458 228.516 98.6021 229.52 101.157 cv
229.66 101.524 li
245.875 101.524 li
247.73 102.551 li
244.613 106.122 li
244.285 106.122 li
243.953 105.403 243.148 104.903 242.227 104.903 cv
241.305 104.903 240.5 105.403 240.164 106.122 cv
239.559 106.122 li
239.223 105.403 238.422 104.903 237.496 104.903 cv
236.574 104.903 235.77 105.403 235.438 106.122 cv
234.828 106.122 li
234.496 105.403 233.691 104.903 232.77 104.903 cv
231.848 104.903 231.039 105.403 230.711 106.122 cv
229.441 106.122 li
229.281 106.442 li
228.148 108.715 225.859 110.129 223.309 110.129 cv
223.309 110.129 li
cp
clp
216 96.0981 mo
248 96.0981 li
248 111.098 li
216 111.098 li
216 96.0981 li
cp
clp
216 96.0981 mo
248 96.0981 li
248 111.098 li
216 111.098 li
216 96.0981 li
cp
clp
223.309 110.129 mo
219.633 110.129 216.645 107.172 216.645 103.54 cv
216.645 99.9067 219.633 96.9458 223.309 96.9458 cv
226.074 96.9458 228.516 98.6021 229.52 101.157 cv
229.66 101.524 li
245.875 101.524 li
247.73 102.551 li
244.613 106.122 li
244.285 106.122 li
243.953 105.403 243.148 104.903 242.227 104.903 cv
241.305 104.903 240.5 105.403 240.164 106.122 cv
239.559 106.122 li
239.223 105.403 238.422 104.903 237.496 104.903 cv
236.574 104.903 235.77 105.403 235.438 106.122 cv
234.828 106.122 li
234.496 105.403 233.691 104.903 232.77 104.903 cv
231.848 104.903 231.039 105.403 230.711 106.122 cv
229.441 106.122 li
229.281 106.442 li
228.148 108.715 225.859 110.129 223.309 110.129 cv
clp
216 96.0981 mo
248 96.0981 li
248 111.098 li
216 111.098 li
216 96.0981 li
cp
clp
216.645 96.9458 mo
247.731 96.9458 li
247.731 110.129 li
216.645 110.129 li
216.645 96.9458 li
cp
clp
gsave
216.48 110.217 mo
216.48 96.7778 li
247.92 96.7778 li
247.92 110.217 li
216.48 110.217 li
cp
clp
215.304 111.217 mo
215.304 95.8573 li
249.864 95.8573 li
249.864 111.217 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 140.942 ]ct
[34.56 0 0 -15.36 215.304 45.0846 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 72 
/H 32 
/M[72 0 0 -32 0 32 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 72 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 72 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 72 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 72 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&])XfE0JYIC3]fMj5t+:78kVoU;H-_#>?kKB@V'.bBPMC&EH?8GG^=adIt3-(KntSDN/`m\
P*;/s$(%$KSXuIHTq\@\!<3)3!%1-&84uZS;H6h%?!h#NAS5dpDK9fAGBnUcJ:iN1Ll74QOckrqR$ek^
StD^PV5UAnXKA\3Za7'J\[oGf^qmq-`l>@c(,.Et1c@BV5!VD&7n?6F:/Fhf='8a4.pcUmAS,UhC2Im/
F*2YNH@10kJ:`H.Ll%%KNK93bPEhH#R%'Y<T:hmPV#15m!P8=86UaO=9i4#N<ENC0?X[JVB5;=$EcZDJ
H$t-lK7o#9Mi<^ZP*D<#R@Be?TqnN`WN*&%YHkL@[C3WW]Y;1t_o9X8^B!s-681)K1c@BV5!VD&7n?6F
:/Fhf='8a4?=75RAnYjmD/XE8F`r"UI"$QqJqSi6M2R=PO-,ThQ'Rc(S"6.CTV8*UquH`tf)Xn46:414
92/8]<ENC0?X[JVB5;=$EcZDJH$t-lK7o#9Mi<^ZP*D<#R@Be?TqnN`WN*&%YHkL@[C3WW]Y;1t_o9X8
i;h@-681)K1c@BV5!VD&7n?6F:/Fhf='8a4?=75RAnYjmD/XE8F`r"UI"$QqJqSi6M2R=PO-,ThQ'Rc(
S"6.CTV8*UquH`tq#J;45XRt292/8]<ENC0?X[JVB5;=$EcZDJH$t-lK7o#9Mi<^ZP*D<#R@Be?TqnN`
WN*&%YHkL@[C3WW]Y;1t_o;YqZiDa50JYIC3]fMj5t+:78kVoU;H-_#>?kKB@V'.bBPMC&EH?8GG^=ad
It3-(KntQuMi<XVOckonQC!u.SXuIHTq\@\!<3)3!$4Kr84uZS;H6h%?!h#NAS5dpDK9fAGBnUcJ:iN1
La.h:O-,TiQ^F21StD^PV5UAnXKA\3Za7'J\[oGf^qmq-`l>@c%59Ik1c@BV5!VD&7n?6/928;]<**4,
>[CfIAS,UhC2Im/F*2YNH@10kJ:`H.Ll%%KNK93bPEhH#R%'Y<T:hmPV#15m!PSR5!('%A84uZS;H6h%
?!h#NAS5dpDK9fAGBnUcJ:iN1Ll74QOckrqR$jG8T:r'WW2ZeuXfo%:ZaI6P]"Gbm_8F73`lJ/I!(&@n
1,LmM4$Gnq77Tm@928;]<**4,>[CfIAS,UhC2Im/F*2YNH@10kJ:`H.Ll%%KNK93bPEhH#R%'Y<T:hmP
V#15m!T3t5!('%A84uZS;H6h%?!h#NAS5dpDK9fAGBnUcJ:iN1Ll74QOckrqR$jG8T:r'WW2ZeuXfo%:
ZaI6P]"Gbm_8F73`p*QI!(&@n1,LmM4$Gnq77Tm@928;]<**4,>[CfIAS,UhC2Im/F*2YNH@10kJ:`H.
Ll%%KNK93bPEhH#R%'Y<T:hmPV#12m!<</4!&m8684uZS;H6h%?!h#NAS5dpDK9fAGBnUcJ:iN1Ll74Q
OckrqR$jG8T:r'WW2ZeuXfo%:ZaC.K\[oGf^qmq-`l>@c-87,/1c@BV5!VD&7n?6F:/Fhf='8a4?=75R
AnYjmD/XE8F`r"U)gm*aJ:`H.Ll%%KNK93bPEhH#R%'Y<T:hmPV#15m!P8=H6UaO=9i4eg=BSp:@:Wq^
CM[m/F*9*YH$t-lK7o#9Mi<^ZP*D<#R@Be?TqnN`WN*&%YHkL@[C3WW]Y;1t_o9X8ZiC4_0JYIC4ZYYg
5X@h/84lNM:f:7o=^,-;?t*\ZBP;-tDfKi@G'J=\IXcm"KS>5=Mi<XVOckonQC!u.SXuIHTq\@\!<3)?
!;-=Y6UaO=9i4eg=BSp:@:Wq^CM[m/F*;bQI=?^!KSPAAN/s*aPa@c*S"?7GUnt#hWiW>+ZEpmF[^iu^
^;.S&`Q#pF!9=,H0JG7=2EEo`5X@h/84lNM:f:7o=^,-;?t*\ZBP;-tDfKi@G'J=\IXcm"KS>5=Mi<XV
OckonQC!u.SXuIHTq\@\!<3)a!7Lp76UaO=9i4eg=BSp:@:Wq^CM[m/F*;bQI=?^!KSPAAN/s*aPa@c*
S"?7GUnt#hWiW>+ZEpmF[^iu^^;.S&`Q#ph!5\_#0JG7=2EEo`5X@h/84lNM:f:7o=^,-;?t*\ZBP;-t
DfKi@G'J=\IXcm"KS>5=Mi<XVOckonQC!u.SXuIH!hl?aquH`t])XHN77^'G;,UCr=^>BCA7]ChCi497
G'A4[IXm'(LPUkIO-,TiQ^F21StD^PV5P',WiW>+ZEpmF[^iu^^;.S&`Q#p+!(6ee0JG7=2EEo`5X@h/
84lNM:f:7o=^,-;?t*\ZBP;-tDfKi@G'J=\IXcm"KS>5=Mi<XVOckonQC!u.SXuIHTq\@\!<3)F!:BhR
6UaO=9i4eg=BSp:@:Wq^CM[m/F*;bQI=?^!KSPAAN/s*aPa@c*S"?7GUnt#hWiW>+ZEpmF[^iu^^;.S&
`Q#pM!8RWA0JG7=2EEo`5X@h/84lNM:f:7o=^,-;?t*\ZBP;-tDfKi@G'J=\IXcm"KS>5=Mi<XVOckon
QC!u.SXuIHTq\@\!<3)h!6bF06UaO=9i4eg=BSp:@:Wq^CM[m/F*;bQI=?^!KSPAAN/s*aPa@c*S"?7G
Unt#hWiW>+ZEpmF[^iu^^;.S&`Q#po!4r4j0JG7=2EEo`5X@h/84lNM:f:7o=^,-;?t*\ZBP;-tDfKi@
G'J=\IXcm"KS>5=Mi<XVOckonQ3inFS"6.CTV8*UquH`t])X3G77^'G;,UCr=^>BCA7]ChCi497G'A4[
IXm'(LPUkIO-,TiQ^F0ZS"?7GUnt#hWiW>+ZEpmF[^iu^^;.S&`Q#p)!#@7B1,LmM4$Gnq77Tm@928;]
<**4,>Us,g@V'.bBPMC&EH?8GG^=adIt3-(KntSDN/`m\P*;/sQ^F85StD[LU87\errK_3"[b^L92/8G
;H6h%?!h#NAS5dpDK9fAGBnUcJ:iN1Ll74QOckrqR$jG8T:r'WW2ZeuXfo%:ZaI6P]"Gbm_8F73`kMNI
!(&@n1,LmM4$Gnq77Tm@928;]<**4,>[CfIAS,UhC2Im/F*2YNH@10kJ:`H.Ll%%KNK93bPEhH#R%'Y<
T:hmPV#15m!S7>5!('%A84uZS;H6h%?!h#NAS5dpDK9fAGBnUcJ:iN1Ll74QOckrqR$jG8T:r'WW2Zeu
Xfo%:ZaI6P]"Gbm_8F73`o-pI!(&@n1,LmM4$Gnq77Tm@928;]<**4,>[CfIAS,UhC2Im/F*2YNH@10k
J:`H.Ll%%KNK93bPEhH#R%'Y<T:hmPV#15m!Vl`5!'in?84uZS;H6h%?!h#NAS5dpDK9fAGBnUcJ:iN1
Ll74QOckrqR$jG8T:r'WW2ZeuXfo%:ZaI6P]"Gbm_8F7l`j>_!0JG7=2EEo`5X@h/84lNM:f:7o=^,-;
?t*\ZBP;-tDfKi@G'J=\IXcm"KS>5=&rV^.O-,ThQ'Rc(S"6.CTV8*UquH`t])Wm>77^'G;,UCr=^>BC
A7]ChCi497G'A4[IXm'(LPR15N/s*aPa@c*S"?7GUnt#hWiW>+ZEpmF[^iu^^;.S&`Q#p)!"CV91,LmM
4$Gnq77Tm@1eUS?;H-_#>?kKB@V'.bBPMC&EH?8GG^=adIt3-(KntSDN/`m\P*;/sQ^F85StD[LU87\e
rrKh6rW#8P77^'G;,UCr=^>BCA7]ChCi497G'A4[IXm'(LPUkIO-,TiQ^F21StD^PV5UAnXKA\3Za7'J
\[oGf^qmq-`l?("m/TI,0JYIC3]fMj5t+:78kVoU;H-_#>?kKB@V'.bBPMC&EH?8GG^=adIt3-(KntSD
N/`m\P*;/sQ^F85StD[LU87\errM$Xg]0Z.77^'G;,UCr=^>BCA7]ChCi497G'A4[IXm'(LPUkIO-,Ti
Q^F21StD^PV5UAnXKA\3Za7'J\[oGf^qmq-`l@9Db5aj_0JYIC3]fMj5t+:78kVoU;H-_#>?kKB@V'.b
BPMC&EH?8GG^=adIt3-(KntSDN/`m\P*;/sQ^F85StD[LU87\e!!*'#])XcW77^'G;,UCr=^>BCA7]Ch
Ci497G'A4[IXm'(LPUkIO-,TiQ^F21StD^PV5UAnXKA\3Za7%H[^iu^^;.S&`Q#p)!%'BR1,LmM4$Gnq
77Tm@928;]<**4,>[CfIAS,UhC2Im/F*2YNH5h6\It3-(KntSDN/`m\P*;/sQ^F85StD[LU87\errK_3
'gkD\92/8]<ENC0?X[JVB5;=$EcZCTGBnUcJ:iN1Ll74QOckrqR$jG8T:r'WW2ZeuXfo%:ZaI6P]"Gbm
_8F73`j>^K0JG7=2Ea)_5!VD&7n?6F:/Fhf='8a4?=75RAnYjmD/XE8F`r"UI"$QqJqSi6M2R=PO-,Th
Q'Rc(S"6.CTV8*UquH`t`rPc46:41492/8]<ENC0?X[JVB5;=$EcZDJH$t-lK7o#9Mi<^ZP*D<#R@Be?
TqnN`WN*&%YHkL@[C3WW]Y;1t_o9X8d/`5-681)K1c@BV5!VD&7n?6F:/Fhf='8a4?=75RAnYjmD/XE8
F`r"UI"$QqJqSi6M2R=PO-,ThQ'Rc(S"6.CTV8*UquH`tklB046:41492/8]<ENC0?X[JVB5;=$EcZDJ
H$t-lK7o#9Mi<^ZP*D<#R@Be?TqnN`WN*&%YHkL@[C3WW]Y;1t_o9X8o)QW-5;4cH1c@BV5!VD&7n?6F
:/Fhf='8a4?=75RAnYjmD/XE8F`r"UI"$QqJqSi6M2R=PO-,ThQ'Rc(S"6.CTE:g]V#15m!P8=a6UaO=
9i4eg=BSp:@:Wq^CM[m/F*;bQI=?^!KSPAAN/s*aPa@c*S"?7GUnt"'WN*&%YHkL@[C3WW]Y;1t_o9X8
[K&\q!&-)^1c@BV5!VD&7n?6F:/Fhf='8a4?=75RAnYjmD/XE8F`r"UI"$QqJqSi6M2R=PO-,ThQ'Rc(
S"6.CTV8*UquH`tc2d846:41492/8]<ENC0?X[JVB5;=$EcZDJH$t-lK7o#9Mi<^ZP*D<#R@Be?TqnN`
WN*&%YHkL@[C3WW]Y;1t_o9X8fDs_-681)K1c@BV5!VD&7n?6F:/Fhf='8a4?=75RAnYjmD/XE8F`r"U
I"$QqJqSi6M2R=PO-,ThQ'Rc(S"6.CTV8*UquH`tn,UZ46:41492/8]<ENC0?X[JVB5;=$EcZDJH$t-l
K7o#9Mi<^ZP*D<#R@Be?TqnN`WN*&%YHkL@[C3WW]Y;1t_o9X8q>e,-3&!$A1c@BV5!VD&7n?6F:/Fhf
='8a4?=75RAnYjmD/XE8F`r"UI"$QqJqSi6M2R=PO-,ThQ'M`CR%'Y<T:hmPV#15m!P8=Z6UaO=9i4eg
=BSp:@:Wq^CM[m/F*;bQI=?^!KSPAAN/s*aPa@c*)Om=jTqnN`WN*&%YHkL@[C3WW]Y;1t_o9X8SH+6A
JcPQGJ,~>

%%EndBinary
grestore
np
grestore
grestore
229.031 103.54 mo
229.031 106.7 226.473 109.266 223.309 109.266 cv
220.148 109.266 217.586 106.7 217.586 103.54 cv
217.586 100.375 220.148 97.813 223.309 97.813 cv
226.473 97.813 229.031 100.375 229.031 103.54 cv
0 0 0 0 cmyk
f
219.109 102.09 mo
220.172 102.09 li
220.422 102.09 220.594 102.106 220.672 102.122 cv
220.828 102.168 220.938 102.247 221.031 102.372 cv
221.109 102.497 221.156 102.637 221.156 102.809 cv
221.156 103.043 221.078 103.231 220.938 103.372 cv
220.781 103.497 220.531 103.559 220.188 103.559 cv
219.109 103.559 li
219.109 102.09 li
cp
219.109 105.731 mo
219.109 104.043 li
220.172 104.043 li
220.766 104.043 221.156 103.934 221.391 103.684 cv
221.609 103.45 221.719 103.137 221.719 102.793 cv
221.719 102.59 221.688 102.403 221.594 102.231 cv
221.516 102.059 221.406 101.934 221.266 101.84 cv
221.125 101.747 220.969 101.684 220.75 101.637 cv
220.609 101.622 220.406 101.606 220.125 101.606 cv
218.562 101.606 li
218.562 105.731 li
219.109 105.731 li
cp
0.733333 0.705882 0.654902 0.776471 cmyk
f
224.773 105.731 mo
224.773 102.731 li
224.258 102.731 li
224.258 104.34 li
224.258 104.59 224.227 104.778 224.18 104.918 cv
224.117 105.059 224.023 105.153 223.898 105.247 cv
223.758 105.309 223.617 105.356 223.477 105.356 cv
223.32 105.356 223.18 105.309 223.086 105.247 cv
222.992 105.168 222.914 105.059 222.883 104.934 cv
222.867 104.84 222.852 104.653 222.852 104.387 cv
222.852 102.731 li
222.352 102.731 li
222.352 104.59 li
222.352 104.809 222.352 104.965 222.367 105.059 cv
222.414 105.215 222.461 105.34 222.523 105.434 cv
222.602 105.543 222.727 105.622 222.867 105.684 cv
223.023 105.762 223.18 105.793 223.367 105.793 cv
223.758 105.793 224.086 105.622 224.305 105.293 cv
224.305 105.731 li
224.773 105.731 li
cp
f
226.262 103.372 mo
226.434 103.184 226.621 103.09 226.84 103.09 cv
227.059 103.09 227.246 103.184 227.402 103.372 cv
227.559 103.559 227.637 103.84 227.637 104.231 cv
227.637 104.606 227.559 104.903 227.387 105.09 cv
227.23 105.278 227.043 105.372 226.824 105.372 cv
226.543 105.372 226.324 105.247 226.168 104.981 cv
226.074 104.825 226.027 104.575 226.027 104.215 cv
226.027 103.856 226.105 103.575 226.262 103.372 cv
226.262 103.372 li
cp
226.027 105.356 mo
226.23 105.653 226.512 105.793 226.855 105.793 cv
227.215 105.793 227.512 105.653 227.777 105.372 cv
228.027 105.09 228.152 104.7 228.152 104.184 cv
228.152 103.965 228.121 103.778 228.059 103.575 cv
227.996 103.403 227.918 103.231 227.809 103.09 cv
227.715 102.965 227.574 102.856 227.402 102.778 cv
227.246 102.715 227.074 102.668 226.887 102.668 cv
226.559 102.668 226.277 102.809 226.059 103.075 cv
226.059 101.606 li
225.559 101.606 li
225.559 105.731 li
226.027 105.731 li
226.027 105.356 li
cp
f
222.613 80.7114 mo
222.613 79.6177 li
223.223 79.6177 li
223.816 79.6177 224.254 79.5083 224.551 79.2896 cv
224.848 79.0708 225.004 78.7427 225.004 78.3052 cv
225.004 77.8677 224.848 77.5396 224.551 77.3208 cv
224.238 77.1021 223.801 76.9927 223.223 76.9927 cv
221.582 76.9927 li
221.504 76.9927 221.441 77.0083 221.395 77.0552 cv
221.348 77.1021 221.332 77.1646 221.332 77.2427 cv
221.332 77.3364 221.348 77.3989 221.41 77.4458 cv
221.457 77.4771 221.582 77.4927 221.801 77.4927 cv
222.051 77.4927 li
222.051 80.7114 li
221.582 80.7114 li
221.504 80.7114 221.441 80.7271 221.395 80.7739 cv
221.348 80.8052 221.332 80.8677 221.332 80.9614 cv
221.332 81.0396 221.348 81.1021 221.395 81.1489 cv
221.441 81.1958 221.504 81.2114 221.582 81.2114 cv
223.332 81.2114 li
223.457 81.2114 223.566 81.1958 223.613 81.1489 cv
223.66 81.1177 223.676 81.0552 223.676 80.9614 cv
223.676 80.8677 223.66 80.8052 223.598 80.7739 cv
223.551 80.7271 223.473 80.7114 223.348 80.7114 cv
222.613 80.7114 li
cp
223.27 77.4927 mo
223.645 77.4927 223.926 77.5708 224.113 77.6958 cv
224.301 77.8364 224.395 78.0552 224.395 78.3208 cv
224.395 78.6021 224.301 78.8052 224.113 78.9458 cv
223.926 79.0864 223.645 79.1489 223.27 79.1489 cv
222.613 79.1489 li
222.613 77.4927 li
223.27 77.4927 li
cp
f
226.848 79.5864 mo
227.254 79.2271 li
227.41 79.2427 227.582 79.3208 227.723 79.4614 cv
227.879 79.6021 228.02 79.8052 228.176 80.0864 cv
228.316 80.3521 li
228.551 80.7896 228.691 81.0396 228.707 81.0708 cv
228.738 81.1333 228.785 81.1646 228.816 81.1958 cv
228.848 81.2114 228.91 81.2114 228.973 81.2114 cv
229.316 81.2114 li
229.395 81.2114 229.457 81.1958 229.504 81.1489 cv
229.551 81.1021 229.566 81.0396 229.566 80.9614 cv
229.566 80.8677 229.535 80.7896 229.488 80.7583 cv
229.441 80.7271 229.348 80.7114 229.191 80.7114 cv
229.129 80.7114 li
228.723 79.9458 228.426 79.4458 228.238 79.2271 cv
228.051 79.0083 227.832 78.8833 227.629 78.8364 cv
229.02 77.4927 li
229.066 77.4927 li
229.207 77.4927 229.301 77.4771 229.363 77.4458 cv
229.41 77.3989 229.441 77.3364 229.441 77.2427 cv
229.441 77.1646 229.426 77.1021 229.379 77.0552 cv
229.332 77.0083 229.27 76.9927 229.191 76.9927 cv
228.145 76.9927 li
228.051 76.9927 227.988 77.0083 227.941 77.0396 cv
227.91 77.0864 227.895 77.1489 227.895 77.2427 cv
227.895 77.3364 227.926 77.3989 227.973 77.4458 cv
228.02 77.4771 228.098 77.4927 228.223 77.4927 cv
228.348 77.4927 li
226.848 78.9458 li
226.848 77.4927 li
227.02 77.4927 li
227.191 77.4927 227.316 77.4771 227.379 77.4458 cv
227.441 77.3989 227.473 77.3364 227.473 77.2427 cv
227.473 77.1489 227.457 77.0864 227.395 77.0396 cv
227.348 77.0083 227.254 76.9927 227.113 76.9927 cv
225.895 76.9927 li
225.816 76.9927 225.754 77.0083 225.723 77.0552 cv
225.676 77.1021 225.645 77.1646 225.645 77.2427 cv
225.645 77.3364 225.676 77.3989 225.723 77.4458 cv
225.77 77.4771 225.895 77.4927 226.066 77.4927 cv
226.301 77.4927 li
226.301 80.7114 li
225.957 80.7114 li
225.848 80.7114 225.77 80.7271 225.723 80.7739 cv
225.676 80.8052 225.645 80.8677 225.645 80.9614 cv
225.645 81.0396 225.676 81.1021 225.723 81.1489 cv
225.754 81.1958 225.816 81.2114 225.895 81.2114 cv
227.113 81.2114 li
227.254 81.2114 227.348 81.1958 227.395 81.1489 cv
227.457 81.1177 227.473 81.0552 227.473 80.9614 cv
227.473 80.8677 227.441 80.8052 227.379 80.7739 cv
227.332 80.7271 227.238 80.7114 227.098 80.7114 cv
226.848 80.7114 li
226.848 79.5864 li
cp
f
231.098 79.2271 mo
232.816 79.2271 li
232.816 80.7114 li
232.645 80.7114 li
232.457 80.7114 232.348 80.7271 232.285 80.7583 cv
232.223 80.7896 232.191 80.8677 232.191 80.9614 cv
232.191 81.0552 232.223 81.1177 232.27 81.1489 cv
232.316 81.1958 232.441 81.2114 232.645 81.2114 cv
233.379 81.2114 li
233.551 81.2114 233.676 81.1958 233.723 81.1489 cv
233.77 81.1177 233.801 81.0552 233.801 80.9614 cv
233.801 80.8677 233.77 80.8052 233.723 80.7739 cv
233.66 80.7271 233.566 80.7114 233.426 80.7114 cv
233.363 80.7114 li
233.363 77.4927 li
233.457 77.4927 li
233.582 77.4927 233.676 77.4771 233.723 77.4458 cv
233.77 77.3989 233.801 77.3364 233.801 77.2427 cv
233.801 77.1489 233.77 77.1021 233.738 77.0552 cv
233.691 77.0083 233.629 76.9927 233.535 76.9927 cv
232.66 76.9927 li
232.457 76.9927 232.316 77.0083 232.27 77.0396 cv
232.223 77.0864 232.191 77.1489 232.191 77.2427 cv
232.191 77.3364 232.223 77.3989 232.285 77.4458 cv
232.332 77.4771 232.426 77.4927 232.566 77.4927 cv
232.816 77.4927 li
232.816 78.7427 li
231.098 78.7427 li
231.098 77.4927 li
231.27 77.4927 li
231.441 77.4927 231.566 77.4771 231.629 77.4458 cv
231.691 77.3989 231.723 77.3364 231.723 77.2427 cv
231.723 77.1489 231.707 77.0864 231.645 77.0396 cv
231.598 77.0083 231.473 76.9927 231.285 76.9927 cv
230.395 76.9927 li
230.301 76.9927 230.223 77.0083 230.191 77.0552 cv
230.145 77.0864 230.113 77.1489 230.113 77.2427 cv
230.113 77.3364 230.145 77.3989 230.207 77.4458 cv
230.254 77.4771 230.348 77.4927 230.488 77.4927 cv
230.551 77.4927 li
230.551 80.7114 li
230.488 80.7114 li
230.348 80.7114 230.238 80.7271 230.191 80.7583 cv
230.145 80.7896 230.113 80.8677 230.113 80.9614 cv
230.113 81.0396 230.145 81.1021 230.191 81.1489 cv
230.223 81.1958 230.301 81.2114 230.379 81.2114 cv
231.316 81.2114 li
231.488 81.2114 231.598 81.1958 231.645 81.1489 cv
231.707 81.1177 231.723 81.0552 231.723 80.9614 cv
231.723 80.8677 231.691 80.8052 231.645 80.7739 cv
231.582 80.7271 231.488 80.7114 231.348 80.7114 cv
231.098 80.7114 li
231.098 79.2271 li
cp
f
235.801 79.9302 mo
235.801 82.8052 li
235.301 82.8052 li
235.129 82.8052 235.02 82.8052 234.973 82.8364 cv
234.926 82.8677 234.91 82.9302 234.91 83.0083 cv
234.91 83.0708 234.926 83.1177 234.973 83.1646 cv
235.004 83.1958 235.066 83.2114 235.145 83.2114 cv
236.895 83.2114 li
236.973 83.2114 237.035 83.1958 237.066 83.1646 cv
237.113 83.1177 237.129 83.0708 237.129 83.0083 cv
237.129 82.9302 237.098 82.8677 237.051 82.8364 cv
237.02 82.8052 236.895 82.8052 236.723 82.8052 cv
236.254 82.8052 li
236.254 79.6333 li
236.254 79.5708 236.238 79.5239 236.223 79.4927 cv
236.207 79.4614 236.176 79.4302 236.129 79.4302 cv
236.113 79.4302 236.098 79.4302 236.082 79.4458 cv
236.051 79.4458 236.035 79.4458 236.004 79.4614 cv
235.145 79.6958 li
235.082 79.7114 235.035 79.7271 235.004 79.7739 cv
234.973 79.8052 234.941 79.8521 234.941 79.8989 cv
234.941 79.9458 234.973 79.9927 235.004 80.0239 cv
235.051 80.0552 235.098 80.0864 235.16 80.0864 cv
235.16 80.0864 235.176 80.0864 235.191 80.0708 cv
235.207 80.0708 235.223 80.0708 235.238 80.0708 cv
235.801 79.9302 li
cp
f
222.613 89.7114 mo
222.613 88.6177 li
223.223 88.6177 li
223.816 88.6177 224.254 88.5083 224.551 88.2896 cv
224.848 88.0708 225.004 87.7427 225.004 87.3052 cv
225.004 86.8677 224.848 86.5396 224.551 86.3208 cv
224.238 86.1021 223.801 85.9927 223.223 85.9927 cv
221.582 85.9927 li
221.504 85.9927 221.441 86.0083 221.395 86.0552 cv
221.348 86.1021 221.332 86.1646 221.332 86.2427 cv
221.332 86.3364 221.348 86.3989 221.41 86.4458 cv
221.457 86.4771 221.582 86.4927 221.801 86.4927 cv
222.051 86.4927 li
222.051 89.7114 li
221.582 89.7114 li
221.504 89.7114 221.441 89.7271 221.395 89.7739 cv
221.348 89.8052 221.332 89.8677 221.332 89.9614 cv
221.332 90.0396 221.348 90.1021 221.395 90.1489 cv
221.441 90.1958 221.504 90.2114 221.582 90.2114 cv
223.332 90.2114 li
223.457 90.2114 223.566 90.1958 223.613 90.1489 cv
223.66 90.1177 223.676 90.0552 223.676 89.9614 cv
223.676 89.8677 223.66 89.8052 223.598 89.7739 cv
223.551 89.7271 223.473 89.7114 223.348 89.7114 cv
222.613 89.7114 li
cp
223.27 86.4927 mo
223.645 86.4927 223.926 86.5708 224.113 86.6958 cv
224.301 86.8364 224.395 87.0552 224.395 87.3208 cv
224.395 87.6021 224.301 87.8052 224.113 87.9458 cv
223.926 88.0864 223.645 88.1489 223.27 88.1489 cv
222.613 88.1489 li
222.613 86.4927 li
223.27 86.4927 li
cp
f
226.848 88.5864 mo
227.254 88.2271 li
227.41 88.2427 227.582 88.3208 227.723 88.4614 cv
227.879 88.6021 228.02 88.8052 228.176 89.0864 cv
228.316 89.3521 li
228.551 89.7896 228.691 90.0396 228.707 90.0708 cv
228.738 90.1333 228.785 90.1646 228.816 90.1958 cv
228.848 90.2114 228.91 90.2114 228.973 90.2114 cv
229.316 90.2114 li
229.395 90.2114 229.457 90.1958 229.504 90.1489 cv
229.551 90.1021 229.566 90.0396 229.566 89.9614 cv
229.566 89.8677 229.535 89.7896 229.488 89.7583 cv
229.441 89.7271 229.348 89.7114 229.191 89.7114 cv
229.129 89.7114 li
228.723 88.9458 228.426 88.4458 228.238 88.2271 cv
228.051 88.0083 227.832 87.8833 227.629 87.8364 cv
229.02 86.4927 li
229.066 86.4927 li
229.207 86.4927 229.301 86.4771 229.363 86.4458 cv
229.41 86.3989 229.441 86.3364 229.441 86.2427 cv
229.441 86.1646 229.426 86.1021 229.379 86.0552 cv
229.332 86.0083 229.27 85.9927 229.191 85.9927 cv
228.145 85.9927 li
228.051 85.9927 227.988 86.0083 227.941 86.0396 cv
227.91 86.0864 227.895 86.1489 227.895 86.2427 cv
227.895 86.3364 227.926 86.3989 227.973 86.4458 cv
228.02 86.4771 228.098 86.4927 228.223 86.4927 cv
228.348 86.4927 li
226.848 87.9458 li
226.848 86.4927 li
227.02 86.4927 li
227.191 86.4927 227.316 86.4771 227.379 86.4458 cv
227.441 86.3989 227.473 86.3364 227.473 86.2427 cv
227.473 86.1489 227.457 86.0864 227.395 86.0396 cv
227.348 86.0083 227.254 85.9927 227.113 85.9927 cv
225.895 85.9927 li
225.816 85.9927 225.754 86.0083 225.723 86.0552 cv
225.676 86.1021 225.645 86.1646 225.645 86.2427 cv
225.645 86.3364 225.676 86.3989 225.723 86.4458 cv
225.77 86.4771 225.895 86.4927 226.066 86.4927 cv
226.301 86.4927 li
226.301 89.7114 li
225.957 89.7114 li
225.848 89.7114 225.77 89.7271 225.723 89.7739 cv
225.676 89.8052 225.645 89.8677 225.645 89.9614 cv
225.645 90.0396 225.676 90.1021 225.723 90.1489 cv
225.754 90.1958 225.816 90.2114 225.895 90.2114 cv
227.113 90.2114 li
227.254 90.2114 227.348 90.1958 227.395 90.1489 cv
227.457 90.1177 227.473 90.0552 227.473 89.9614 cv
227.473 89.8677 227.441 89.8052 227.379 89.7739 cv
227.332 89.7271 227.238 89.7114 227.098 89.7114 cv
226.848 89.7114 li
226.848 88.5864 li
cp
f
231.098 88.2271 mo
232.816 88.2271 li
232.816 89.7114 li
232.645 89.7114 li
232.457 89.7114 232.348 89.7271 232.285 89.7583 cv
232.223 89.7896 232.191 89.8677 232.191 89.9614 cv
232.191 90.0552 232.223 90.1177 232.27 90.1489 cv
232.316 90.1958 232.441 90.2114 232.645 90.2114 cv
233.379 90.2114 li
233.551 90.2114 233.676 90.1958 233.723 90.1489 cv
233.77 90.1177 233.801 90.0552 233.801 89.9614 cv
233.801 89.8677 233.77 89.8052 233.723 89.7739 cv
233.66 89.7271 233.566 89.7114 233.426 89.7114 cv
233.363 89.7114 li
233.363 86.4927 li
233.457 86.4927 li
233.582 86.4927 233.676 86.4771 233.723 86.4458 cv
233.77 86.3989 233.801 86.3364 233.801 86.2427 cv
233.801 86.1489 233.77 86.1021 233.738 86.0552 cv
233.691 86.0083 233.629 85.9927 233.535 85.9927 cv
232.66 85.9927 li
232.457 85.9927 232.316 86.0083 232.27 86.0396 cv
232.223 86.0864 232.191 86.1489 232.191 86.2427 cv
232.191 86.3364 232.223 86.3989 232.285 86.4458 cv
232.332 86.4771 232.426 86.4927 232.566 86.4927 cv
232.816 86.4927 li
232.816 87.7427 li
231.098 87.7427 li
231.098 86.4927 li
231.27 86.4927 li
231.441 86.4927 231.566 86.4771 231.629 86.4458 cv
231.691 86.3989 231.723 86.3364 231.723 86.2427 cv
231.723 86.1489 231.707 86.0864 231.645 86.0396 cv
231.598 86.0083 231.473 85.9927 231.285 85.9927 cv
230.395 85.9927 li
230.301 85.9927 230.223 86.0083 230.191 86.0552 cv
230.145 86.0864 230.113 86.1489 230.113 86.2427 cv
230.113 86.3364 230.145 86.3989 230.207 86.4458 cv
230.254 86.4771 230.348 86.4927 230.488 86.4927 cv
230.551 86.4927 li
230.551 89.7114 li
230.488 89.7114 li
230.348 89.7114 230.238 89.7271 230.191 89.7583 cv
230.145 89.7896 230.113 89.8677 230.113 89.9614 cv
230.113 90.0396 230.145 90.1021 230.191 90.1489 cv
230.223 90.1958 230.301 90.2114 230.379 90.2114 cv
231.316 90.2114 li
231.488 90.2114 231.598 90.1958 231.645 90.1489 cv
231.707 90.1177 231.723 90.0552 231.723 89.9614 cv
231.723 89.8677 231.691 89.8052 231.645 89.7739 cv
231.582 89.7271 231.488 89.7114 231.348 89.7114 cv
231.098 89.7114 li
231.098 88.2271 li
cp
f
235.801 88.9302 mo
235.801 91.8052 li
235.301 91.8052 li
235.129 91.8052 235.02 91.8052 234.973 91.8364 cv
234.926 91.8677 234.91 91.9302 234.91 92.0083 cv
234.91 92.0708 234.926 92.1177 234.973 92.1646 cv
235.004 92.1958 235.066 92.2114 235.145 92.2114 cv
236.895 92.2114 li
236.973 92.2114 237.035 92.1958 237.066 92.1646 cv
237.113 92.1177 237.129 92.0708 237.129 92.0083 cv
237.129 91.9302 237.098 91.8677 237.051 91.8364 cv
237.02 91.8052 236.895 91.8052 236.723 91.8052 cv
236.254 91.8052 li
236.254 88.6333 li
236.254 88.5708 236.238 88.5239 236.223 88.4927 cv
236.207 88.4614 236.176 88.4302 236.129 88.4302 cv
236.113 88.4302 236.098 88.4302 236.082 88.4458 cv
236.051 88.4458 236.035 88.4458 236.004 88.4614 cv
235.145 88.6958 li
235.082 88.7114 235.035 88.7271 235.004 88.7739 cv
234.973 88.8052 234.941 88.8521 234.941 88.8989 cv
234.941 88.9458 234.973 88.9927 235.004 89.0239 cv
235.051 89.0552 235.098 89.0864 235.16 89.0864 cv
235.16 89.0864 235.176 89.0864 235.191 89.0708 cv
235.207 89.0708 235.223 89.0708 235.238 89.0708 cv
235.801 88.9302 li
cp
f
146.75 73.8208 mo
192.355 73.8208 li
192.355 91.3755 li
146.75 91.3755 li
146.75 73.8208 li
cp
0.247059 0.0352941 0.027451 0 cmyk
f
146.75 73.8208 mo
146.75 74.0708 li
192.105 74.0708 li
192.105 91.1255 li
147 91.1255 li
147 73.8208 li
146.75 73.8208 li
146.75 74.0708 li
146.75 73.8208 li
146.5 73.8208 li
146.5 91.3755 li
146.574 91.5513 li
146.75 91.6255 li
192.355 91.6255 li
192.535 91.5513 li
192.605 91.3755 li
192.605 73.8208 li
192.535 73.645 li
192.355 73.5708 li
146.75 73.5708 li
146.574 73.645 li
146.5 73.8208 li
146.75 73.8208 li
0.733333 0.705882 0.654902 0.776471 cmyk
f
158.75 84.0044 mo
158.484 84.2231 158.172 84.3325 157.797 84.3325 cv
157.5 84.3325 157.219 84.2544 156.953 84.0981 cv
156.703 83.9419 156.5 83.7075 156.375 83.395 cv
156.25 83.0669 156.188 82.6919 156.188 82.27 cv
156.188 81.9419 156.234 81.6138 156.344 81.3169 cv
156.453 80.9888 156.641 80.7544 156.891 80.5669 cv
157.156 80.3794 157.469 80.2856 157.859 80.2856 cv
158.188 80.2856 158.469 80.3794 158.688 80.5356 cv
158.906 80.7075 159.078 80.9731 159.188 81.3325 cv
159.844 81.1763 li
159.719 80.7075 159.469 80.3638 159.125 80.0981 cv
158.797 79.8481 158.375 79.7231 157.875 79.7231 cv
157.422 79.7231 157.031 79.8169 156.656 80.02 cv
156.297 80.2231 156 80.52 155.812 80.9106 cv
155.609 81.3013 155.5 81.7544 155.5 82.27 cv
155.5 82.7544 155.594 83.2075 155.766 83.6138 cv
155.953 84.0356 156.203 84.3481 156.547 84.5669 cv
156.875 84.7856 157.312 84.895 157.859 84.895 cv
158.375 84.895 158.812 84.7544 159.188 84.4731 cv
159.531 84.1919 159.797 83.77 159.938 83.2231 cv
159.266 83.0669 li
159.172 83.4731 159 83.8013 158.75 84.0044 cv
158.75 84.0044 li
cp
f
161.383 81.9575 mo
161.586 81.7231 161.836 81.6138 162.148 81.6138 cv
162.445 81.6138 162.695 81.7231 162.898 81.9575 cv
163.102 82.1919 163.211 82.5356 163.211 82.9888 cv
163.211 83.4575 163.102 83.8013 162.898 84.0356 cv
162.695 84.27 162.445 84.395 162.148 84.395 cv
161.836 84.395 161.586 84.2856 161.383 84.0513 cv
161.18 83.8169 161.07 83.4731 161.07 83.0044 cv
161.07 82.5356 161.18 82.1919 161.383 81.9575 cv
161.383 81.9575 li
cp
160.914 84.4106 mo
161.227 84.7388 161.633 84.895 162.148 84.895 cv
162.461 84.895 162.758 84.8169 163.023 84.6763 cv
163.289 84.52 163.492 84.3169 163.633 84.0513 cv
163.773 83.7856 163.852 83.4106 163.852 82.9419 cv
163.852 82.3794 163.68 81.9263 163.367 81.5981 cv
163.055 81.27 162.648 81.1138 162.148 81.1138 cv
161.695 81.1138 161.32 81.2388 161.008 81.52 cv
160.633 81.8325 160.445 82.3325 160.445 83.0044 cv
160.445 83.6138 160.602 84.0825 160.914 84.4106 cv
160.914 84.4106 li
cp
f
165.184 84.8169 mo
165.184 82.9263 li
165.184 82.5981 165.215 82.3481 165.277 82.1763 cv
165.355 82.0044 165.449 81.8638 165.605 81.7856 cv
165.746 81.6919 165.918 81.645 166.074 81.645 cv
166.309 81.645 166.465 81.7075 166.574 81.8481 cv
166.668 81.9888 166.73 82.1919 166.73 82.4575 cv
166.73 84.8169 li
167.34 84.8169 li
167.34 82.7075 li
167.34 82.3325 167.418 82.0669 167.59 81.895 cv
167.762 81.7231 167.98 81.645 168.23 81.645 cv
168.371 81.645 168.496 81.6763 168.605 81.7388 cv
168.699 81.8013 168.777 81.895 168.824 81.9888 cv
168.855 82.1138 168.887 82.2856 168.887 82.5356 cv
168.887 84.8169 li
169.496 84.8169 li
169.496 82.3325 li
169.496 81.9106 169.402 81.5981 169.199 81.4106 cv
169.012 81.2075 168.73 81.1138 168.371 81.1138 cv
167.902 81.1138 167.527 81.3169 167.246 81.7388 cv
167.168 81.5356 167.059 81.3794 166.871 81.27 cv
166.715 81.1606 166.48 81.1138 166.215 81.1138 cv
165.98 81.1138 165.762 81.1606 165.574 81.27 cv
165.387 81.3794 165.23 81.52 165.121 81.6919 cv
165.121 81.1763 li
164.574 81.1763 li
164.574 84.8169 li
165.184 84.8169 li
cp
f
171.262 81.9575 mo
171.465 81.7075 171.684 81.5825 171.949 81.5825 cv
172.215 81.5825 172.434 81.7075 172.621 81.9263 cv
172.824 82.1606 172.918 82.5044 172.918 82.9731 cv
172.918 83.4575 172.824 83.8169 172.621 84.0513 cv
172.434 84.2856 172.199 84.395 171.918 84.395 cv
171.652 84.395 171.418 84.2856 171.23 84.0513 cv
171.043 83.8325 170.949 83.4888 170.949 83.02 cv
170.949 82.5513 171.059 82.1919 171.262 81.9575 cv
171.262 81.9575 li
cp
171.012 86.2075 mo
171.012 84.4419 li
171.121 84.5669 171.246 84.6763 171.418 84.77 cv
171.574 84.8481 171.762 84.895 171.965 84.895 cv
172.246 84.895 172.512 84.8169 172.762 84.6606 cv
173.027 84.5044 173.215 84.27 173.34 83.9731 cv
173.48 83.6763 173.543 83.3481 173.543 82.9731 cv
173.543 82.6294 173.48 82.3169 173.371 82.02 cv
173.246 81.7231 173.059 81.5044 172.824 81.3481 cv
172.59 81.1763 172.324 81.1138 172.012 81.1138 cv
171.777 81.1138 171.574 81.1606 171.402 81.2544 cv
171.23 81.3325 171.09 81.4731 170.949 81.6606 cv
170.949 81.1763 li
170.402 81.1763 li
170.402 86.2075 li
171.012 86.2075 li
cp
f
176.609 83.2231 mo
176.609 83.4888 176.578 83.6919 176.516 83.8325 cv
176.422 84.0044 176.297 84.145 176.109 84.2544 cv
175.922 84.3638 175.719 84.4106 175.469 84.4106 cv
175.234 84.4106 175.047 84.3481 174.922 84.2544 cv
174.797 84.145 174.734 84.0044 174.734 83.8325 cv
174.734 83.7388 174.766 83.6294 174.828 83.5513 cv
174.875 83.4575 174.969 83.395 175.063 83.3481 cv
175.172 83.3013 175.359 83.27 175.609 83.2231 cv
176.047 83.1606 176.391 83.0825 176.609 83.0044 cv
176.609 83.2231 li
cp
176.781 84.8169 mo
177.422 84.8169 li
177.344 84.6763 177.297 84.5356 177.266 84.3794 cv
177.25 84.2231 177.234 83.8638 177.234 83.3013 cv
177.234 82.4731 li
177.234 82.2075 177.234 82.02 177.203 81.9106 cv
177.172 81.7388 177.109 81.5981 177.016 81.4888 cv
176.922 81.3794 176.781 81.2856 176.594 81.2231 cv
176.391 81.145 176.141 81.1138 175.828 81.1138 cv
175.516 81.1138 175.234 81.145 175 81.2388 cv
174.766 81.3169 174.578 81.4419 174.453 81.5981 cv
174.328 81.7544 174.234 81.9731 174.188 82.2231 cv
174.781 82.3169 li
174.844 82.0513 174.953 81.8638 175.094 81.77 cv
175.234 81.6606 175.438 81.6138 175.734 81.6138 cv
176.047 81.6138 176.281 81.6919 176.438 81.8325 cv
176.562 81.9263 176.609 82.0981 176.609 82.3481 cv
176.609 82.3794 176.609 82.4263 176.609 82.52 cv
176.375 82.5981 176.016 82.6606 175.516 82.7231 cv
175.266 82.7544 175.094 82.7856 174.969 82.8169 cv
174.797 82.8638 174.656 82.9263 174.516 83.02 cv
174.391 83.1138 174.281 83.2231 174.203 83.3794 cv
174.125 83.52 174.078 83.6763 174.078 83.8638 cv
174.078 84.1606 174.188 84.4106 174.406 84.5981 cv
174.625 84.8013 174.922 84.895 175.328 84.895 cv
175.562 84.895 175.797 84.8481 176 84.77 cv
176.219 84.6919 176.438 84.5513 176.656 84.3638 cv
176.688 84.5356 176.719 84.6763 176.781 84.8169 cv
176.781 84.8169 li
cp
f
178.801 84.8169 mo
178.801 82.9263 li
178.801 82.6606 178.832 82.4263 178.895 82.1919 cv
178.941 82.0513 179.02 81.9419 179.129 81.8638 cv
179.223 81.7856 179.348 81.7388 179.488 81.7388 cv
179.629 81.7388 179.785 81.7856 179.941 81.8638 cv
180.145 81.3013 li
179.941 81.1763 179.723 81.1138 179.52 81.1138 cv
179.379 81.1138 179.238 81.145 179.129 81.2388 cv
179.004 81.3169 178.863 81.4888 178.738 81.7388 cv
178.738 81.1763 li
178.176 81.1763 li
178.176 84.8169 li
178.801 84.8169 li
cp
f
181.305 81.895 mo
181.492 81.7075 181.727 81.6138 182.008 81.6138 cv
182.32 81.6138 182.57 81.7231 182.773 81.9731 cv
182.898 82.1294 182.977 82.3481 183.008 82.6606 cv
180.977 82.6606 li
180.992 82.3325 181.102 82.0825 181.305 81.895 cv
181.305 81.895 li
cp
182.617 84.2075 mo
182.461 84.3325 182.273 84.395 182.039 84.395 cv
181.742 84.395 181.477 84.2856 181.273 84.0825 cv
181.07 83.8638 180.961 83.5513 180.945 83.1606 cv
183.648 83.1606 li
183.648 83.0825 183.648 83.0356 183.648 83.0044 cv
183.648 82.395 183.492 81.9263 183.195 81.5981 cv
182.883 81.27 182.492 81.1138 182.008 81.1138 cv
181.508 81.1138 181.102 81.27 180.789 81.6138 cv
180.461 81.9419 180.32 82.4263 180.32 83.0356 cv
180.32 83.6138 180.461 84.0825 180.789 84.4106 cv
181.086 84.7388 181.508 84.895 182.039 84.895 cv
182.461 84.895 182.805 84.7856 183.086 84.5825 cv
183.352 84.3794 183.539 84.0981 183.633 83.7231 cv
182.992 83.645 li
182.898 83.895 182.773 84.0825 182.617 84.2075 cv
182.617 84.2075 li
cp
f
155.004 68.625 mo
157.23 72.668 155.762 77.7544 151.719 79.981 cv
147.676 82.2075 142.59 80.7349 140.363 76.6919 cv
138.133 72.6489 139.609 67.563 143.652 65.3359 cv
147.695 63.1104 152.777 64.583 155.004 68.625 cv
0.780392 0.00784314 0.894118 0 cmyk
f
142.434 74.938 mo
141.488 73.083 140.883 71.6489 143.02 70.4692 cv
145.16 69.293 146.051 70.5669 147.109 72.3604 cv
147.672 73.3794 li
148.723 75.2896 149.348 76.7622 147.152 77.9692 cv
144.961 79.1802 144.047 77.8677 142.996 75.9575 cv
142.434 74.938 li
144.738 75.8677 mo
145.063 76.4575 145.645 77.3989 146.559 76.8911 cv
147.516 76.3677 146.98 75.3794 146.602 74.6919 cv
145.594 72.8604 li
145.277 72.2861 144.609 71.0039 143.617 71.5469 cv
142.566 72.125 143.34 73.3325 143.645 73.8833 cv
144.738 75.8677 li
cp
0 0 0 0 cmyk
f
150.625 75.8364 mo
146.68 68.6802 li
148.016 67.9419 li
149.766 71.1221 li
149.785 71.1104 li
149.684 70.4302 149.684 69.6143 149.68 68.9302 cv
149.656 67.04 li
151.164 66.208 li
151.094 70.25 li
155.191 73.3169 li
153.688 74.1489 li
150.871 72.0161 li
150.828 73.0469 li
151.957 75.1021 li
150.625 75.8364 li
f
86.6411 78.7661 mo
15.3438 78.7661 li
15.3438 99.0239 li
15.8438 99.0239 li
15.8438 79.2661 li
86.6411 79.2661 li
86.6411 78.7661 li
0.733333 0.705882 0.654902 0.776471 cmyk
f
88.6519 78.4146 mo
87.6992 78.1294 87.082 77.8677 86.3159 77.563 cv
86.3281 80.4653 li
86.5981 80.3364 87.707 79.8911 88.6519 79.5981 cv
89.6719 79.2856 90.5938 79.0747 91.1909 78.9966 cv
90.5898 78.9263 89.668 78.7153 88.6519 78.4146 cv
f
197.203 78.7661 mo
219.223 78.7661 li
219.223 79.2661 li
197.203 79.2661 li
197.203 78.7661 li
cp
f
195.191 78.4146 mo
196.145 78.1294 196.762 77.8677 197.527 77.563 cv
197.516 80.4653 li
197.246 80.3364 196.137 79.8911 195.191 79.5981 cv
194.172 79.2856 193.25 79.0747 192.652 78.9966 cv
193.254 78.9263 194.176 78.7153 195.191 78.4146 cv
f
197.203 87.7192 mo
219.223 87.7192 li
219.223 88.2192 li
197.203 88.2192 li
197.203 87.7192 li
cp
f
195.191 87.3677 mo
196.145 87.0825 196.762 86.8208 197.527 86.5161 cv
197.516 89.4224 li
197.246 89.2896 196.137 88.8442 195.191 88.5552 cv
194.172 88.2427 193.25 88.0278 192.652 87.9536 cv
193.254 87.8794 194.176 87.6724 195.191 87.3677 cv
f
0.768627 0.752941 0.623529 0.811765 cmyk
%ADOBeginSubsetFont: Humanist521BT-BoldCondensed Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Humanist521BT-BoldCondensed def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 4 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 46 /period putdup 69 /E putdup 70 /F putdup 76 /L putdup 83 /S putdup 86 /V putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 104 /h putdup 105 /i putdup 107 /k putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 119 /w putdup 138 /adieresis putdef/FontBBox {-185 -236 1014 962} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings28 dict dup begin/.notdef <1C60D8A8C9B7C3C9ED9313AFF691AF9DEA7EFE9F59246D6675CBE223F5D9796E7E2CD60A70D0> |-/space <1C60D8A8C9B86A968D> |-/period <1C60D8A8C9B879BE1E15F0928490B4575DEAC5F0BE046314257991805800B657E562A3F331735C553F247A2239B3A82F69B7570FFB338D9EF3693E195285695C9CF285EBC3> |-/E <1C60D8A8C9B7AED87B19FE39751507F2030EBE51E4EB770DDA44897BA1B5F1A4ED3DE0A08E7F2A8B88B9C6489C0B> |-/F <1C60D8A8C9B779148895E53F2356500F400673F12EE2395F443CDE42609071A5D787ED4CCF0A75C3> |-/L <1C60D8A8C9B771A8FB4E269C90FB4FE29C12F712A52816953033B5E0> |-/S <1C60D8A8C9B76356853D649393BB4189B8A86FB3A86723A52F24DA0FD99875A3B97535CFB5C640F7B3D12E92FA3DA1542C2ADE3BE948A0AFA59578020A426F46127405FCB696AEFA9E2FCAEAB65249FF1528D4D4009032131967A906DF2D18908889720063A5CCB85E0BF532C87A48A81675B38B53BC49B1A365107964CF75D10F0D82BB10C8438BB75CDC2E22BDC21A9EF53F7A6F9AB213F3965F70BB3D64B87C7EDCBD7A4CA7E1E39EB1201B7000B9323828D599D5CC09> |-/V <1C60D8A8C9B7402F14A5810E773E09DEC91073C288028277F2EA310A71E147259AA9A33163DC9CAAE9E1860366919EFA330700E48D1025560A6E5983AAAAA31F9907> |-/a <1C60D8A8C9B779148889A84E89B7C8E7D4D6A0AAF55DAE6FC1446C8647E5D636256C8F0387D90EB70808303EEC4494E421F619A65D29BFEC7585F099444EA7FF2C0B514098B20CF8EF38E57B2E64CBF712ED0D15FA031EC0B5933C2F79D2774EFAB054EF3945C5E9313814756F382FAA1956F05D225F2899093BB0F255ED0C7C6948440E59A9E7CEA9ABA70613E621016DAD11D3C4AE66DE9C526970AD7EF7EFF4AC58489432C430EFA8B6C959A238D5E3930772393FD190773F24F462274DB3E0FAF3148A86FC13E27AA65D7DBC474B55ECDBB2FEEAA2B216A2ED8DD4547DC75D30> |-/b <1C60D8A8C9B7A66FF26611086DEB9F9ADEB81CF7A4477AE1B3FD58D040358B5A33225FCB34B2759315C93AE4FA8B4240D95010F63F8904C317A521B6457B15D720C994C349FE690D99D140D64B8F3AD73F85EECED6AF7A723882A67C41B6F860282A4856C7358E226A520056BD621A72457E8D34DE37A43BD93A48F3E1C8963639408D7B37A360DB5AF2C8B967D944E90C7E4F> |-/c <1C60D8A8C9B70B6BB5A4CFFDBDC9F1BE54F4E3EE2A47C32BF87AB40DD9F2FDE421F50A29E2E11A0534E113EA94664A8873446C17CC124002A3304F53D2925B29F28352F66A910067E089AB05DAB9B45E121CA16B016871152533ACF774BD798B6981E0984ADBF4326DFC51E32ED44C7E804549FD076B80A3118DC05BDFCF6C174E14> |-/d <1C60D8A8C9B7A66FF2B921E1473FBA581E7CCA4DB027DAA14465688580F5A5E05802E4BD0BD4140EDA2E3B603DA15FA1FA14E54AA1D12424A038100183B503B9A55971BB66125B4382B237DD98C019A41156FB1A3921FAF0E818F88C53F598505733B5CF700B52CD12DA10B0012B0DA08F2EABCECE39F4BEAFA6511710BDD78FC64677FE9FCB3EB64F29AA4AE6B2DD824A> |-/e <1C60D8A8C9B7635685105750B982F9BC390CAEB6C326CAE83E311C6801C091D71E4AB82FDB7D19A86E6A0570D0339025F1E2805F47552FACD5B4DF754819003AF7154BECA192471505CD07FCE5DB3D73252D4BBC6BEC3E11A02F5AF7E54B2DD6821AB0E72397B765289B2C5A2E3B935233132E0B982B983DC2D5D5A3BDB2AFAFA1EC6D105A976359BE33B79B920D2F0CA846C4FF57C0E3F60E186B8D302A86> |-/f <1C60D8A8C9B86B643B0524DCF17E0D9C1D05B3A4D44CF9A410D87E61B0308B4F5D656140D318C5CFD2302AEEFFE1A7722D190C1351E1E82EFA36000CEF7B55D4A7A2B1C54DA1E3C479C08E7273810E2E2B35B328941613377945B502101CA90A191750590BFFC2084A> |-/g <1C60D8A8C9B7734F839CC0865D85B881531240BDD0F7B706AEE178C525AF83B106C127E0EB7143D30FEDF9E9614CBCAB51714231DA8D7F302AB6C994E856F2F4F71B5FB57E83702D4621D9CC1BE26B0BC68FB125E2503E36416046CFF83D9F8D99675B99DA418F00BEE2031525FC91769F29817FE94B383EE5D5850D1C7BDDBD0FE5D46FF48CAEE5FE214C01B4B1EDD016D11420AD7011E7EF2CEB4FDD07395CF87474A405394E33D294F4F0371AAD6D0AAA9D1D41AEB8B39D1DD9672B6704D88268B17EB1EEA3F6F9D9FB130FD2CE47BB5DB3BA3C35F5F83BA4B3BB717CEBAA417E3746B8CE1B9AD8CF25BE6235C283D4477294DB70DFE7AE1F3A76AC0F897C64BA7B749506610F680AD4B88E0CEAD188A01C1D49870B3C89EE5678F31245730B290E03FBC4BB4A37D9BABA764813364369FE4B728E4355A4> |-/h <1C60D8A8C9B7A8F22C921594AFBCD6233F9E8DDCDA6A7AF4839FD968E7134FACC3A47347699BA1665A4D4536AE8AF28669FED8A17A154C40D717699B645D1FCB974F35C3B11135184A6760BD3007DC7B47CFF9FF04F2BCC43184> |-/i <1C60D8A8C9B87F87DF97D32C7F5B59CE576BC341075C2F8C4598E7B14292DC5BA62170CC3FF1CB58F75C4556715CB77554E6538F22B894BF1F12AD1AA9362663AA8C949D08C570504E552D98543858339A81E8F0BB> |-/k <1C60D8A8C9B74A3EF33C4CC7DE1734F2E51C0BF82E30767D57CD47FF1730F8C4B0125D31175C85800C7269EB5CBCF91DB7A22C> |-/l <1C60D8A8C9B87A8F726124394B268AC7A51709141BBB> |-/m <1C60D8A8C9B6E081B0A6EF1F3E589BC7EB9F1E72CA7B4096AF3FEC12A194E471DDC0DB197D1DEC1B91558447355CC2E9EA9F749716C358C43379D33923EE55B486AB7F7C8060FBB68F183611348A48E614DFC2816A4F5226162C5B01A7F80BBBA3CFECB41DB7FA8A7463A553BB03E2AB2FC06752E9B11D6492929A6ED35F18C9EA1A8E120D0821C005FE98131F63501CF1817CB1805D14AA7A0F5F> |-/n <1C60D8A8C9B7A9C0D3D62020D6D08025027ADC3EC22FD4A3A95D1F1087BAC5BB25B90CF54FF623B8736DBE4E6C76C74D9516F0EAE24CEB07986EC381B1B59F65CBC3EF3F6A3FBF9F8A6995916C36FB785BCDABBCDC45C402E3D9> |-/o <1C60D8A8C9B7587019EAEC8BA45EA4E2ED2A554653C8B708A048C615850025747302E2DA4F1F18F7A7733B9DFA1CC682CC1A51CC79CF9E84B335CAA7CCA859C309738ADDF424CE393ABE7E15C91DE65C4F693C295E864398D58F8FE080E134B73B272DD6E417BDBBDF54D05D800D1F67406730CBD1584980D134E5032D80B3530AA2> |-/r <1C60D8A8C9B722FF7362A249A6EEC353E591E4B77317ABDCA37C402D91FFE0DD94FAFBCA6E27FD0DEEA15DB5AC9238301B05CA72ECF7E11110FA4B87EDC4A2F1D4AED534BD6C1622892E99CE3A67CB92C163B5BC> |-/s <1C60D8A8C9B7361F02B327E702198C6FDA07A90631AF99025BFF3ACAEE7B88786B1C6A95B8FE05B6AC9D7D3E46EF4AA66A6070B70804864B92E3C29CDF3B034704A94435A84E7C3FEF8845A4C721CA0782AAFD335DBFD0D632D8C21FCB9ABE46849FEA1756E9A42A2DA4A6658496458CAFDE6FF771B16F251853A8AB82457C8144DC4543BAC61BBBB139E333A6455F20C5CD9007278C19E075F7F4EA5E6112F9C93C2D5D1EF13754EA0B647D9E7F2C00DA414A37CB24F31F0FAD03> |-/t <1C60D8A8C9B81F2C359317DDBD3F004A72EC983121ED01C0A70AE0B4287718DB87BED56DD82F422010083B3DDCD31D4A9BFC3B06453F71982413464D1FCEA284C516DB67AB9B1C0FA6CA12E7ED396CBA6A9AC87DA4AB86C406BE240F2D72> |-/u <1C60D8A8C9B7A9C0D355275ACD34CBD753DD029AEA635CF980A04715531274F0B91FFFC41F02AFB000AFBE0BE84D08C4442C5A228CD000DB53E531DF5973D1333A80C7E5AB79B7314D20BFEC35DC7B3DC84E5C0B6A9F69BEFFD4> |-/w <1C60D8A8C9B66F631934478D4202F116F9887D364D8491B758CC482F8057E6D7A94370B488B8E0B9452E3AB6F9C8EA6022C5231BE70CE87CEC8851CB5629E2A2AB40B686456B17C3E4121819ABDDD6C51ED4E78DFE37F3A1A697D1EDCF829A516AC31A1FCB423DF21D770F2546789FEF9A92B7FEE027B2129F20BB714347F3D91B58A7488BD34623B54A> |-/adieresis <1C60D8A8C9B779148889A84E89B7C8E7D4D6A0AAF55DAE6FC1446C8647E5D636256C8F0387D90EB70808303EEC4494E421F619A65D29BFEC7585F099444EA7FF2C0B514098B20CF8EF38E57B2E64CBF712ED0D15FA031EC0B5933C2F79D2774EFAB054EF3945C5E9313814756F382FAA1956F05D225F2899093BB0F255ED0C7C6948440E59A9E7CEA9ABA70613E621016DAD11D3C4AE66DE9C526970AD7EF7EFF4AC58489432C430EFA8B6C959A238D5E3930772393FD190773F24F462274DB3E0FAF3148A86FC13E27AA65D7DBC474B55ECDBB2FEEAA2B216A2ED8DD4547DC75D471CC5BA502AF2532FE735879295642F1AA6BCE60F3C94D557F16C138FB3C5A81A833382FCAC4D6D1C84F23D14D21B6E62208F4A8C4BC563F7FAFB6B39D84BCA9E6061F7C64395148C89FFAB188B8F9B87729970CEC5991855296D9A3B8130629341130579A38B421C092F7D955CFD19F4DA4EAAFEBE9736CB28> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/FFKGYE+Humanist521BT-BoldCondensed /Humanist521BT-BoldCondensed findfont ct_VMDictPut/FFKGYE+Humanist521BT-BoldCondensed*1 [32{/.notdef}rp /space 13{/.notdef}rp /period 22{/.notdef}rp /E /F 5{/.notdef}rp /L 6{/.notdef}rp /S 2{/.notdef}rp /V 10{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o 2{/.notdef}rp /r /s /t /u /.notdef /w 18{/.notdef}rp /adieresis 117{/.notdef}rp]FFKGYE+Humanist521BT-BoldCondensed nfFFKGYE+Humanist521BT-BoldCondensed*1 [9 0 0 -9 0 0 ]msf52.4565 7.90723 mo(Lege das n\212chste)[4.12207 3.95947 4.10449 3.95947 2.30273 4.50879 4.05176 3.50244 2.30273 4.48242 4.05176 3.59912 4.49121 3.50244 2.99707 0 ]xsh52.4565 17.4072 mo(Element auf den Stack.)[4.43848 2.16211 3.95947 6.74121 3.95947 4.48242 2.99707 2.30273 4.05176 4.48242 2.31152 2.30273 4.50879 3.95947 4.48242 2.30273 3.95947 2.99707 4.05176 3.59912 4.18359 0 ]xsh179.791 7.57324 mo(Vergleiche die beiden obersten)[3.78369 3.95947 3.39258 4.10449 2.16211 3.95947 2.13135 3.59912 4.49121 3.95947 2.30273 4.50879 2.13135 3.95947 2.30273 4.50879 3.95947 2.13135 4.50879 3.95947 4.48242 2.30273 4.34619 4.50879 3.95947 3.39258 3.50244 2.99707 3.95996 0 ]xsh179.791 17.0732 mo(Elemente. Fehler wenn ungleich.)[4.43848 2.16211 3.95947 6.74121 3.95947 4.48242 2.99707 3.95947 2.18848 2.30273 4.05176 3.95947 4.49121 2.16211 3.95947 3.39258 2.30273 5.7041 3.95947 4.48242 4.48242 2.30273 4.48242 4.48242 4.10449 2.16211 3.95996 2.13086 3.59961 4.49023 0 ]xsh%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ArialMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 80 /P putdup 83 /S putdup 97 /a putdup 99 /c putdup 103 /g putdup 107 /k putdup 109 /m putdup 111 /o putdup 114 /r putdup 116 /t putdef/FontBBox {-665 -325 2000 1006} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings11 dict dup begin/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |-/P <1C60D8A8C9B64EDFF4950CC53012D47AE97D5586315BA2F5162B63CEC117C5379A1B3DB174CB2C739C68916A1E99A346AFF71DBF25658867D9AEF1BF3C47CE1BA73978E8D0D40E52B85A56E08A1369D85E15B0A0C517291916FF6E61D0EFBF59B4862165C7DEA15B42BE3811C2CAA25C54> |-/S <1C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E558E3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051BE47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE626CDC6D4C322BB391537921D673F5AEE3EC19E36E7EFEC0F06A0EA4EAAB6BBA94DDCD11A6A564B13B510F8C915848233B82F046D854DCD4F1639F149305DC73D3C68DF8AEB47A96A30E55CF8BAD07FA2825BCE0D675F1CC2EBE61B07B772130E23119250F1EBF8FE12A2098D9F09F3F21BDC41666CA4A0BB70D5F0A750B44BB93A5FBFDD2BF8DE450B277265536F77D5BD6F44FB72FF2E708C60107653AE44BFFB26AFF8> |-/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177B5D88A> |-/c <1C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDCE9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F7BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148C344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D36548FE63FC8465B1B685766E782F0> |-/g <1C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817A065D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D559B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0C247BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667DC9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FBD88F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF575C72F67F4BEBB98F8AFA57505EC9> |-/k <1C60D8A8C9B7A73DB90BDE2D32BC36BC1297E20AB90FA9E27E830D444A320C85D226D41FA634DF03A4FEE2FD90BF314563D4BF5C68> |-/m <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519AD5BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD99C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176AFB9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D55C54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE37B> |-/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F518C54BB58C51D6FB6D0C8> |-/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE112857894FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619ADD420F549AB7C795751D32E8EE6> |-/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F5C42C88FB43C> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/FFKGYF+ArialMT /ArialMT findfont ct_VMDictPut/FFKGYF+ArialMT*1 [80{/.notdef}rp /P 2{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c 3{/.notdef}rp /g 3{/.notdef}rp /k /.notdef /m /.notdef /o 2{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]FFKGYF+ArialMT nfFFKGYF+ArialMT*1 [7 0 0 -7 0 0 ]msf21.9004 138.668 mo(Programm)[4.66895 2.33105 3.89258 3.89355 2.33105 3.89258 5.83203 0 ]xsh93.3047 138.668 mo(Stack)[4.66895 1.94434 3.89355 3.5 0 ]xsh149.427 138.668 mo(Programm)[4.66895 2.33105 3.89258 3.89355 2.33105 3.89258 5.83203 0 ]xsh220.831 138.668 mo(Stack)[4.66895 1.94434 3.89355 3.5 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/FFKGYE+Humanist521BT-BoldCondensed*1 uf/FFKGYE+Humanist521BT-BoldCondensed uf/Humanist521BT-BoldCondensed uf/FFKGYF+ArialMT*1 uf/FFKGYF+ArialMT uf/ArialMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (Volker Herminghaus) ()%%Title: (05-14.eps)%%CreationDate: 11/30/19 9:47 AM%AI9_DataStream%Gb"-6f6[#1Z7($*J9M!_*$m?WP;CkD#2;+HK#!ae#tC9uqe>a[m&P3:?L1Y#ZB0_FA'Hn*GLg$:5G2%YGBN#MlF,C:X6jpa>u'sk%^QN1a)E3G'0lo;mK`;Z3S#n`"TGY'pIPMNF5pOf"%u'!"\=Z=18U.#?)K$A@EcXaSL(qN><q@'N,gD%Xqb-NTIf`FBjqhbr?i=]a%chkVJjH]:N\UgV<HJ5"KFPq_j>hq%/b:0cS"Nc&3QXA!-L"133/K&:KH*P%gYNJi!FD(oi>,55kcDgAl?M$2=KV(NEOhk@Q4.VFM%[u18U-d?'DJUS+%n6@"PQitV<I:du3/VirbLq85l:nu_G*]*"GXG9$LWQbWd#K&m\.GVQmUmO`B$%G&MNsA&I"5jaiNM5eQ1MM$H%h=VY?K#,hjCAHgtiH;*<HJ[OUGWA)Ye/pE#&eXb;r62R%\`$RToRMmh,B;3cQJa)8XqgWMPkm0B$T+A+2_4$[Sa5*Ra<E''Dq`Zi%_6ftJ&7,mQ^HQJs'`GP3,+R\c''sBmWt@50oB"g\chdtK"TBJlrad$jqXfHp!1g7SgWaiJ9UauEpB[(Xg&IP9)6UG:YI16nS^eAp%D1XH3JdHM>9SS@Z3DRT=nGfHY#[n3u3%uT^`Jk&7NS`bYNPUe5_'6;Nl"%A!E^P`W.eIg./mKr@NjF6)W;U_XIgQ*=G'G^ic%]DB%_Z`X^gkbn?K`C0E+I8<YKF<HX+;A%O!mj1Go@8MB-@Eg/i:ZKkoO\FV!l*L?L16gZ3FtrR!u&9G#A#67nN^tKV.b+j"G$-2P<]-S%EB9`d"/Z!9]:f;8)^&cCd,LO_!ft2;IC;]hpD/;PVh$27F6]qo?YmWohoD8uq9CGeVC=d8Y>UNb.H/f+g\m@R1R5>8$>l*=HW+=k%[U$.T=-C!BU$[^Xb*HnUAXdSVVP_.0BKPKT-57I;_#Po60Ecb.QjlL1d4?,LLhJ@ofZr[0-Eupe#QsD]^]^psE\s-cQ=sA#oEI/[%$s2c0JOmL6JIUEW;2?G!lkfkEroIlNU;hah.F;PdIHK90r3W&6RDj9Y'cZ]Cr_4sHMllP_dnW"(h\A9m;pa':8YOIg4u;!>d20M_%++ECGs)'7i9ldW;EuCYM)UA3fr"5lC3pb2O"lZR<YjHPC4,aIO_E##+D<B>m,CX,W!E+<V7Pe].+Sl."Ftn"WZ#Tf.!\6Y`b7P.3%5V;IiR#h?f\5WA7gF)tIrm(L&Rf5$1"<ns__"ioXBh\9S'eO:e'cngd'Ofel)t(uc(f+SW*-hPF^`).47Yj>!>)RbdkVJGW5l:eS%DSB1V#"ZZHa@Sq0,l*s?.AJ-sY/I'3`r9;.P&!d*<+?lTfL@GaJ,Hr`Cl:fl`M9f08+t=9XVAZH"-U.HKimu&1no1*ose.SL`(eU%BpPMgJa_uHd\jR4H%3F,5$T\==^]m;pIq+jQCs@dYJYn98=FJU+fe&9Qms\C.qBkMbrni#$>T>f_#G,,+0h9-o?)4V166q@gnD2V%kO19>(n-J:f2_f(.\4T\]l":<rf)l"SDZ,cYttE9OS[f,kO9c9QnHFp^mi(b@KA&!D?*S*l6A&P?VG"#7+)+3dfp@BRZ>Dh^^&LA%LsXcGC:#"5m$^8%)^L-2qfj=3>#:EsfgI/2!>&7ee'2DI(?hs\Ktk,p,iXA!2$[&28;9.u!jV5JC,r!3_(^EYc[k&$mCsHie[u]+%s-:hk_Ce7fQKA[U#jF=tm2A-Ep[70JGZ:A<gN@?n?C@=od:tq7$[n*R=NjNqjug=g^<N5!C@3iucPtkbC-;`*c[E"4C7B])@&Bk?%hd@utJ#;G_^SpP<hk.&W]"gThe!-8K#[QDmn8EbNTlgN6):#2Z^"ae0:+ogEq!bCDLRTmD)![mR/t'u#j8SM&#SrmfZogmCs%lfK%&PngK!'pAgqq1rU["ilpe-=]7;uZng<?8FDf`@lImfh=:OUj-#[g#')+sBd8FaqS29?B\2HTU%#@hr0J`*eNXjr?-`VaI7oTHj9"%S'sSMT<*Sb%+I?EdLkCAO%02$3^r0g3+CD"?Q3C$nF,;7pk$m"'WEh".LHXYfBR]:'EcNF3IKe01\f/U-U9\OIR-=UJ?*sFfr**i%G92pSIrc'%-iM_1qM0@DTB#T0p];^nn.ke\+FPN#aZc?2YWhi9"T&>4KU]_BDj^Zd-!6H-M`D*m=fu.KJ_U0U14)`Hp(Y/>MLS6c%>:+<.a\XN*!O!r@+NQqbI>EOi6kK1.+nU9RJHXRW9VN&rD$5@(O1K`QmmIfNmbdN1%Ng/XVa&F7o8WS5K.rAEfBr`Yf*+5FUW@go%15"!o_nRZG"s5V5Dq*0Z1`/SijG+KS2a)u0^GlOG*KLfW#<a:+R?7Vmn,Kpq7jOkTJHbt,0^8WtR;3MJ.8T+tJA=7#Ds5Zo2IM#W%i;j+l-=4*Hg0cGV%XlG!UjSf&%]*RseVqq)-&=e3>;XqI3[mh/e_d;)2CAM;X3C`("MY5D1pi.M)2Aa/EVpIertt'6PM%DL`Wb1)%R5%[R13[,oWQYOh4T3t!%NN5:+*V\m\A\K,YA9(uBB[F\"lZC7D!?l@=ELp?a5[IEk!:)XSW=1ZqL_t[7O'`u9I)!h]$SS!I;Ai>%4,a'I5A1h05j9q:La.V#KOZ_0T-_nB5gh8TI<tOZ5AhX+MZ/Bd!?cL$aP7>JL;ur%N#-8Z0Gd.5^Xn"G"&fBI=$5]YJUq5ZA);I)%h1(i9@c;Mudp68s!"\6(e"mBM]aX3g'>uJ_0p5(ZIDe/]W13gBq\_Fmr2A"'2cr75?gM_--<i.=Ig9FJh^#i?hjn[Ee'2K"JYS^h%Np$H8Ii,Da&N)^(Vo.$ja9]b3^q-V0UflmfLR?=kkSe^DN^ec0),VO9_HejhW&a?4og/)MqlIlHo`SF1kVG$g-^+Ld=g'`@<djJK%fUlWGe\S[O42KJ=ZTj/S?\YUAc2Ma;`XHqBXNV3'jR,eC74ENcN1&;r22n/q0",g@,8%qH]0e/8M@<Oif]F@2WDJNe/Wb6/i*eU;%Y+Zlq^V@u@(;*g+4$[@qXL9&^N&<ED@PHGZ6iFu4-d]P@hSM%IXt?=)YJkkqO+#@W4WS>t4G5t[VYb21J%COooIjo9r!!\(VRUd.%$%[S`rbVR?EsqBB0:CZ=I@@\JHKGN:g@UI*I*8uf^G?eqQ3(?5,@P-?r^3pm$BHrmR/(JVUII^,_m_`A@3.M6_%c?$P6U.R_uZTk%'jLRu-Z+:/jZa=jUb3u&c%"FhbUFci^NW]XP8HIYLLF4R:&iHPNM\Yi17QhRh^chJ3BBhhIAA]^aT=#*PT9^C^4<Kd%iWUj%:%&7%s83t?NW77>^s&^os)_D&ZFr4r?ZU2r/aU5Vl3\tUHY2lYOkK[2n"'t+-N&]SRFjHfD[IdQ(mu#oo%uO4?m:9q$27-Zcfo-7D.H[P%_gh8enc#03F9\cT(^!KI]OCEYN6H,4Sc8_J+%s9?C.f'dS2:"[fDM;6rnTqD:n.Fi%&$V?OZ7>#QQn-<@t_E=NKk(ad`ap3:RMs?%6T#BNck\\'&/HF6r^?jS)iFG,@Q$1o@hr!+Fh=7t_#mt[2s(FY-]5l&+mZeKh5m<$IeQ-"ph)tgQd!#O=<7AMrD#jp7Yi<Y,EYej%1K7m3@@g\u9i9ordU6:JpTc$[E%nHN1+4$UhPQG:ltn6]J<VVg%Kk./;!&8\f>_&69fN$eF?\OY/Z]lBj_cWSfj@L_r<[&L>HR^t%gG*GR!i\o=X8NKLdp*@ZF6&TBpplj_'&)=snQJfD;YmnU/8YN4GBVCogmXkul48bYUDPO01.aef8*LsLVDmBSe8PKq*;&Fmj\T?V%J7L`00l,lgM3@L(GATar3%EPmU4T0TdC>$RS<?X!k$1XEUTG8cPdM,Im2ml#83kZVJY1K.%s3KcJ5R"/S#q5aJGggZHs4[)b\Xj3%!(LTR?(`U,O_-!u3baNidk0:]W36CR]tu=)Iia[;r3aq>0J?KO3LH^;*!T_(;gt$i5l5m^']_XKOr-7bUD$_d=h"Nj3#B)\o7JmZ%*/c47ccWo9'2*t'.1OEF0\a0j1'%u:p6R"!,V,[d9X:rW2%aulB_E`'"I(PW6N]uh#4]JeejdSq>?,F)ieqYc(h%7P6SZTp[3&t,%GYHamOja,QZC(I8`YYs"O8Z0EVp-7Bji0NRYNbRL+DnMuCW;EkRRZPY&l$$nDGC#]E0W?=U,F62gu$C;?Ag'QWY9r,&t;!)%ViD7%qBO90=Hq_*%S]Y&5X#0]\su[jAp7TTfo'On&8H`MMXb@=Oq'tk8[o?j0"<(jNsuCLg":I0SC@H@]WF+HHK8G\'>Ntn\Meq.1n&_@%#1P9EpU.Kd+$(XeNRm^[hqI_>[M^\84d8:&c#bSjQ)_3J(k^er"a&IK+[D%\Zl.;m[J#\bY*(AnC)^bHi+Ed&kINZeY.5#q1&f!'%M$I>;>uHkM9(puVhocJc(=HnQ-]o,,Dg#Z[U)ij]+/)")@Gn/fOH$UMM4tQudT1k"rA':&%0t5aD8'`q*#bp0_pt=_N6]pmK@*_"%O(n$O.lu$i@<t<D6FP(2+d%:ZpQnO%Vd/&<_QEN'j5E<K3h1m=fOc@L\Q*pr"_6\=B<BuFPJLoljpNMg";-*,l&Q7a>LTYCP\7:p%3_35&0]bGeGqP"]k?pBWV-#Ko?j?\<RI_=$gLRtE[g/tt26OX&=@V.MNt;Z]9>cBcNsp6XY+P1f):qc<;cH$I7jUjK>&JQc(5^$&%>LK6,M\GC"/@8F0)d6tj9G<07ltc<sBVoP!O!nU$=nXecFpW=@d*`E6:t+9U&fT><f4P<:c(_BdIS`tO%D<_(:t=YMMSYk9TM-2n%Tq[j)gG(tTdJE]Z73`Ig&#)n<0hBd^(&]eG4>^5M%nG??L-YhbSG1Y4%1fV4Nj4*L0==3.\hX1m2)StgEA``g"&$(jDM7]W#Ls8_%e.c"'3>?MO:jqQKVk&F/\Yg<L84r>R.!BJV-o:)9N"0ksP6UgbU3nZA=:c&Kg<qaGG@,-bQn[I;LnclT=;\Gs[^<cFN_C=*,I^T<%KSG1G/(kkgMJ=^j7K``ICKNU$fno-q[pp)np=L3;r_XEmX=;"Hi!c@i)=)T,*&_("XXAP8L9&S.H3bk<2jXYU@du.Eh1rlVp!pk5%=sLC/k-bhYj_J=_A`"020Dtp*pij]c;oVq8?"i:MmeYUOP;f$2BAd@O9Ydk^ocT409RA_!jf5ieF3,b)i56d[K,&=aL\JGAr2*O'%WZZW[NTlTNM-s.Si:AV^,9+#KW`-RMbK=3_FPj.!j4-Dul<F#;^)3$a+)?Sus/eF`I3cqlh8.L12mpZ+.a@`)>M)b%_lDk_c(?M4%eeBCl1%#D+/Jj.okA1u1@Wk7@V7aW=*"C6An1K\A%f)ZO*4Y3bre<SL6hdu2q\lp<nG+U@pNN\6<%f`;^W4_='#4]Y;fJF$.3_V2%[akt`&j,I!r&u^6q.>E6Z$WQ$*_Yk"U+I40fFPjkX\fm-h?PMj_KKR/"FX"b;dQ#n`Xe$s`Mfh[^#_"?P^;qf;N(.K2@%YtL>Rm^%S_55g15>uHg8fjT$iMrp@lL6+Hk(ThNsp`mG"30d;i>%?Or/n4VU@%^>rd^AX1t>hhqQ+Xfq6R_)-BVF82OL\Y@^(5+,L2UrX27d%bM2K$XfAi=')_pu%/asYH0(LX?slEF":XTgMt"*d+!,$LSh=orSpoN0obL+17p++g*?c^pmfcGmFX4Thq\`-a'e,>\^sT?m+E^+?%HTOKuEOFRa+E4671`c=ILR(FOPXOHqEs,-[3SM9SnB7cVr9T#c'Rch_k\R@!K>7S,:*i!/HR@@lFZO).o6WC)GVfNeXOfe_TEl1U%bQ)RK7oQc,a9l,?bX"1<=@=MCQj;,_JPJn+%`)FRRc,DdL/^>Q5rq`brAfN/NoFf.1E-1iOT/+(7L1t%'EZ'Hk*!)eY8No>:X*]?%bkf*R2_(2b/u:hWWtG4J!l$FA,m1NbVU:N-MhUt&Gl(isF5Ci</W2Rm#,CV80QNgroA[OacgVm%^jVmU?rW?iqL@[tl%J%d#m4Z9%od;Vei<JXF[`\\/lS!7tcGjd)D@Gdo>2Pt6<t6LE5ruoX3A6A0BF>QZZ"l[>78GW,lb/p2Ke7eLj=&a;i7c&OXNau]<&EcRk,5ka%R;3UR[<SK<+U"QqiCqGok".^C40JEcD`qWLq=7\"ZM70iQBljMicR9he%VHZ7N\\-k[cOH=@qD'1Wedkj!IE;LTtkKGS@QKiUA-Z%0ZB[D`(O4==.aqc2W\4#=f)c>Qu(HVVM4.OeMm:qotHhgKrK6(HCZ)mrI2dt#?5d:!q9[<Z7Qr@X_`kZ+8PE,c^S.?RS9m8hL'[u%dE?C;(q)WkJ*)c(PH?ekl3#S^XKf]'p2p?.T'I*g:YJ(1m?/REe?&S19eu^%Vs(O*bKe7DCpIJ[Q+oSI(<7NCZ2?^Gmj?*NmnMb&%p.EKSnRX?`al[M"Q#SpmrP4M__WU!$"eY.r`S.8&ant'^em-sR\R`b-m>n\&>N3]f)4$#>HY;;!gq-2?Ca$D<J*[((A.+F<Ee2rU%dnfY[n#PEO5=;'?T$k.EbsEb65X._6X^B37B76#:gG06\m<RUORVhpT)S[eL<W<PsCsf;]O)/\oF=]Q+2ckR_ir+0AMZoJf-q=e`%Uh>u=KcZ#g3qEJfM`I`gF,1YZVhIAXesF%[G5AjNINH+*YVUN<g9QE9lLMLH9gfh#QeG[91*%mH5!>mCd9A@c\GX.uVO'3.:cdmU%6qd(dI?*/;&Y@GHR4IR_8FpQF,fl%iRpr%_ZBm/7<uOA]U'I=#(Ylr>,6esl0`LE1QW)\;e8qV*2D9;J?YjAkQXC7n[nCtol&mu-%bY51MI\*`A=/2DB:V;k-J>'_Y5/KU:7esVLJ.HW"V"=E`257t_[tl>;lsWkGW60dgYL/tNY#G8g'ZYdEDlMW<=S'qVj*fq4epYcM%$Mh<n\39f8rdH+?-<i\3dcn$XI#X.m90L_pPRhtZX`Esp\Q>0t6j$NNKl'^?N85a%0`;`E4cEDc]Qj<tdE&_amRFbN)DtXPn;([j%+'*ltp>:3P:]4XD6Kr0rT=sN+/omNZB"L,^"_K'*i"r+\>PPAT^cAO6`agU5Nbjp;="7,ob4"!p-@sZJWa#\lE-jbD<T6rf<cZDV%(RAD6Q?"b<bSF[pjs%cC]iiJMl6N6oP\5F;<HaBArZ%'c]EVZmcP/GP3BEnhLBLV#g=NLEGP#<Enhg;VO]$`2?<0V6ZqDW3Tikd'%KcR%6kpfB@92+\eq"Tr/]`t*oCN*@G5KWc9W0D\d5sfE[&i6Ob0\LK;Rumq$9KH%p2d^03UW"f2m4'co0ec<N8-CI%RpF1igm)/h%o;cmdnf%.r.pkK(9q3$DC,di4MNM")l>&OkJ`A,Y:L4I:)#.:Ho08_l,!TEuX`C!$XqeN]G_?RX-1C+W=LS*9Dn1Yn[f]t6YihdQ%ju4eB?,a(D)MQSA^0)meHKnOV&IndZ+.Z4g41Xc'!WQ.>KYO.#O1$2VDeIBZFPc0MT=HV/-(:b<!/gQ!<@:]?R<(MCV^eK@,26HH%gjLVH5aP#p2+\4b-0OsiZ`%RP:P"\"S(Iju8%!Q4a1j`<2.d70H[$FMPM>n;Y5M?RE)..XYAC4Bn3`DC-]eC(H_,W@p2]P;-S.I#%NBrT@%uVu%9\S1MP4GN[Q--H@b?1jn^Ei*N`sg@7Y06<IPU@C1-qDcoXqU.Lp44ac!2',c"7um_!%@U_r+g`0Kmq)LFQ)S`-1A'F%aaTQUMP,d]@OUSYk^b7(a8I02$FgCsnl+VA_`QX%hD2C^;YRJJ]VVH#SY$2cU;Th?NCM@H.$('XF6+@G4jHO9SWSchAuCA2M8$Rl%D=64]lOAn]mO=2O%#T[sObLF/0jihF;XB>7fiq5*&+80eD=Q803K%Rei9RS,>CaT`e'CZ79Wh%:k2L+]Qsan]&;,A@,m;(nN5JCL%HdIB4/Ea(1aci6BK^@tC*>pdS.DC#1bmk4sU\Qg^':YY;&XHXkb=Saq]>@p#7-d-9Z3?-hJYqVE>7O9P;W4>-J`&8qnJh`D"F^qQ%L?V+iN5Mq@Q,,irdgeV*f!Xip7KFDXMdC9RJq1Z+<*</\I6"o3#XinHNNbF;gEO7=-u(?1BU'`@m5G3f_cWC-nV^c"M9,Pq>oI;s%"\iKc+B1rOj1,09ns$46`dLf:64pGXV19t.Gl]$S_-#jA'\;h\DGdudSYsK5S97XKE$3.dW?+[mQCrgWc19K29<rARqnEGPOGrcX%K[4D=JO*8*AY1Ut-\^et03]@?IdO4kPZTAsc(2;0,dh5Hce;]g]/]>k19<oi=*)'5W`/&u&XV/uLGMg&hEJRf)i`afF@,dEQ$ZUK%>M8]t4TJi)5q8RQYY1.l-0Dn*n#O)6T<h;q(To^dD4fCUTsk]V8%h3\`#U/qK1V2GQ`:[^X]++(7'r=tS8n9EDb9(@[8"Hs74rXj%?=&WA\pt:%@<g&+$J[bVkKp_dhuZ;Q7?7[ire#Wj_`]&O.37^F*:33GD2BU[HK$]HqK!uE54Q1UY&\=IBUa!R=1=dAf!-2j>ZYri%"^?E<G?>RI$DOeT^gY(93U`bDhncX4jJ*1bi#:\FZZ#:0^$T<^X_a_<+_*!HP.EW?m*j@:^KCAiobD0#OIo`XJWcYfbtbG7fDops%mSjZbb?&-BR>sbm!WuEmoB>70iD^'uXCRu'X&teC-t'7U'T/.aiKJIa=^MRM$-uWH<o.[l_tQ__0[O'OT(Tn2P@'N5*'Rn:_<dpC%_)]:O2[.9kL%iLuK!2N(_Y:Yg#t+.RpsoE6_fYj:r9VE*hTak9bfp;71Pu$hcho>=D%RirjA$sjM`H?SW@i8*U\Sr1o^3OJ/6;cJ%E*no(bO&BXQ<;(.](0#,D^J[N2Jgt9pNP<&T^-0/b7/Rj@a!Tb[\&WhcTc[R$$!nfZ4jLrG&Tr.fD^&LBi26$A<T^sp?@ZaJh1PK%qYSZN$R]ka1DmnBOh(<T:1Jhl-OM_&hlV%8RLa?."R1>F/@%-Xqog@h)F!+G-iE;&k29sqS#%e'e[!rk%@_/VY+EIHnrB$/SK>r8%T$-\ajr2C>#+s**o=`29r:[LqT`,QgR*I#+Gpb4BobHf"qb'4./FUK</Yt;Y;W(nbB@V2Ng`)47m$n9EEA)"d?2b:iYtU:0e[S[9%&B)9?@BRV(.5Qr!a1aJd\k9^@gn-DaC*7aDl1Ws8R[`Ks&6UG=k."!GN*C2CY*ZapY44i=GaWs8\/c;SMhIEE5N`3[ru%P5W*Ze)%oW9ZY59!s;<RgV_,Y<F;.1T/(]0Li5IitH>p/3_/P.-MBO&GGqp4ae;'2/$Xs614Sf!dng+EaG[)djje6TSjX)?aBEEZ53Ulo,ms%i:M/5!X*YPDMst<A.r1e;P=_'qJ6Ue@%1CEJMVJ7L*#>;(Nq.n5la*h=^-CY+1f[n16;-<D)$I^8"R<kgqET&P'cD;aq\.B,F4sa%,8qLN^m2"#_CCf95dC%6F<b;U!B1)ES8,)652NPKgZ@:grM;IXI-'O2X1)2T\t#L7_q>V8gC3jgas8UB`n'jme3;lBL-^Y[0I;cA%3gQd)ZrZL!r\OF^h/!589j$D3-+[fV+7bPSh^:V'X7*8([C8bclU&t%3:M:d1EIpANr'bLl+FQInYPMOS!pEa`,kUVH@$HtE#Mm1%kfFjW*F?,frEN3lXr._q-#Y/4dunqJ8qLT4OL]P1r)$U5g^_j%LQsQ6)T((E,m1a>k*rbB1=:!9E*IS0#^.4Y7I6lWD0Z5iq=an*%3Vt>3%QTChr.*Ye2;V>q>Hlm$pjkXKdHG`K\!eelRh=$Rk*GQ/dS_'o^K-'QKf&pb*H'u)l.Sa@3<LhS[8t1fias/qGQ"n3V+1/.%^Qr'[grNC=/F?)HO\F'_@NVB"i]-HC.(rLt])nU]+55*C^&Rnk>CF!9$;po<cc:8"&+AN9@8NA\KRhM&d?#8t,\FSb-PoE<@'d+>%*8`O]<`!aFXWf>taF-b)L$[loC:ts0\O9hk;`*L&jP2uQVbX@$:),^Nd=<LV]Z;FlWC]"^VL+JFV\D`Pk]5_6!\1eY<m4QbVQ?15%%KuHfWm#AsSoh&3c2PF`]a2f7AFaD2@Sl^s*iS,>Sp_N$[Z\ARdJC<8Ii/!eakNGU`&NN:S`iLf=l=IF"Esag"e5;kkW\7V#QSqi%"5hVk(QW=VAEV<:D/G3]:PL<E#N\k+A[OZ&/\_/F(ThdiQX9)55_70do<Tsq#uWBl"%01(5l.<EK<n(,(D74Z0csa;>M7HGd[-Sq%icmoh<<tJ`>'&[i>=RFh@@RYkZHl#L7<e%t"drJ(C\MI6"=(8A@O5ld^r/c3g!K0Vl'2jl]dc*ZUM&Xm^*=NC/Q/QDj=4t/8f8Le%4'h@^IJ"",;<8&Q$^hNVS"5sY;sEtOPS\U$#X44LOtI$[q\i0nL.f(5YAoU+"f[0,S)@_(Q@g3N0f>MD;/S!Z_oNH5qtr&]A3"\8%p.ZFUi8lT#b)LW+4b<`[Do?W#Ykkt;35Knb-HR3&kUkENfI_h;<KHK@2AtH]0n!L59\`e5Lg[*-%n-(ZP_Li5UmS9eJ,.+@'f,$J%/1FS*Z?*Z#M6.03Fo>>4g"t)9<O;UcT?"6<lq26oUJ\C2&T_lQ]Qd!D`[P)YWAF`t;fr]Jq0`.;FPu7Q)sp]ZVM!<I83*Jh1tQ6%%I?9rm.C@cJM=uIUgr$/&.=,45,Ml=eD1utfq?96kQ\H=(&"p3$gd7?#nV=,2Tu;D\%o)C=?]>kF4#lXm;7S9SYQ/Q+@[I"-oYUGX%Jk^7X>k56A*^JY]:JGcsmF!r/L(,Xu0)Kc75A*pdZ3sU:@"TskC[:I1YjcSi[ZpPr'hXp?9o.d@:[$MXms7;!afWZ#QsM+<S4Um_%.ei(V.*0Kn4<*T]9"B2#fq9@.?eJTV4Vc&Y"`m*Ym0f<QK1cP3rO_!haNT`D9$;'(5$1T+8c]=TfDC"3CqUR'2;V6<;Y7-I`IR"Y%+o6eI-Mg@^g0ed,bN8(94%H?dm>UbfD\Tgs(_at$\,cYW%Y?j,]#h@n=]h#IH`8.4dVsQ\bJeo/$_V#a#bqat!d1lGo&888'Rb<*%G`'NsKkfTDD01>VXG^o[54huo1f>.,*jkLGX)d*(b$KKYK$bIJpOM*2H@L\mj^2YnF3!V%_`[K@'>j]cQ>q%#MN)rG,M0ZRYN8rA%@h@K7^rS!8&J\%?]'I=DTaqoTd6.pIG@[!^Xoq<B#cW#NNksOeXRgR+,F?TE^%s"gU;$ge/c9/XEKM`u>jgsMlWe-,aR%uZMj*YN%%$kUkPlrDd-8!8.aVTq26*.UMfGFlIY"Hg`B\5o5IL`gJYE/'0b4BQpM=h>_f#o@sobAK3V:X\a<Md_NTYKbBk8l02Q^T)`(<Q7[%Ls/Is/gIp)5jVPhG9AIlp'+gf+oh.tY#[SHE-lk#).U3]l@5p!Y[FMBm.&QRjo_%h=jLW-mNXfYf6HHj$+MY<?O?X,pMW&l*X^K.%(?U=i@CSnc4#_s4;UNOs;#kk7d4=tI5mR2-QVmUnRR&R$*<h)1_<-aN9fA[;qjZTcO$Bg]*cG&-EZ?=C?=/WPGktFRmqC`CJ"O&:%o3l5KNQ!sEO_WBLjJ%^p35=/+\?0lGn)#eAc:1!hCGjnn-r4I_"Q\2`i/,+6*9V$kW2fZaG=b#kNDd;HGR\D11!!ZY>$sK*hJTT9%)&'=Fq)oQE2e<6`?aUMbeOgE9H_kj^8kqUaP?b$,\0]E3BX%a3?JTYC^jZ#TM"Od#!%Rj4F'NaMZV>Hc.P94A/u?58ih5Z)=IcYZ%C$,XU"6^$JMfa3Z^K;OFTD]W_(SXFd>_q;l].Hc1hlU]reRG]lb;g!oUY2=_cP.BYO67FVU9V\8FhoPl`cE:6ZH,MU>H\eY1%+jT%!]TS_&L<%q@4&VgA+IP)L!e]Q@,bNt+SLZ47Rf^_n0cWTP\rSiYe0Kk^m44;-j&#Ls%3Z1@e.[D,!I62c*Z6)ee5/-O<97=EqS'p%o$LSjr%f#3iKO88R[N>18%rH(bgR\""?\V\:Zd!;6D&kge9s(t4Lc1ki<NGX9P9OoK:k!#?9VWgOX6V8Sq;cELjiQuDsjjKqt+#H%fdu":kgnaOq`ZV*DEh[:LMIccMuLDp33@*oMta)QYrI/[(M[$XG_Z2YC>?+>hJTG`i;1EL`tbin>k_YRaFJl"'PHAulRO!ua$Xi#%G8IGfKF;FPM9h#nO"/LuqKbtac;P8,^rBYRI'nA_BMr1K,Pt,2ke"eD*m^'i=lUprKJ&36mhT<&c6J]j@BeI29JdWU%PeEMDg=RO%G_>+J`UiBe=F:->f4(Mr#+A#tii=H<(/K6WpP51Dpi*pTKpe%q*WtLnpf5Y5AVdZN/Oei"(5V.Nq-7ac/8bB3ETRccO_SDj./aog%bE6PB)G/Y?):/%]rp)JpN]"*[074f:fVqlcmL$h\f'lmTSk`7e5I`5lSK#AUGR?Y/"(8JReQQ[1/^`LY]1ihDY*]^trp$TtJT0?m%SJC(RM3g.s-<ot\27!Cbae]-`W*B+N?rG?qI-X@*J1-)IKpfq2iV;ll%j![=9N%PPoZ,5R]a,>8QjR4OZ-PtHp?>W^qJ!W[C''Ai%)\ni'd$2L`ZI'(pUXeOR8%sa3Jk<Ei:r_J-nS%u_Hoq4cQ]_VR:1N7L/l<tN2l]+rb+kmMCsH6BTL??^>gr`l]gT=n[rXS&\V=J*%Ls"iFUH6bZ0C,PGr*<=p^Ami#*7-d&"4fo$i6^"d5/KQ>%E_cFL&MA/D\5gt%XKZ)\+'&b_#ls?.g8aOQ]KHl=Tkc*)O\&e2HiBC%oV^O=U]IhbN%Q-u&-cmT.Hek75!iF<X5VU`b=WdglGCY&@Wkoa.*Q9"7G;"lbhIp,>`!KqPh#gQ]sP5?kUUeKiKk(Lr)%mX5S8u)%8Vt!`blU[X<M1)qp/Vj*K:6=TC-Z2[^bu4^=l3?o=SE;Wn&t,m/8McsTWtm;BJYs(iIJZ;S-kq:G'!A1JXUCcl$ZTuc1Nqe1uCn;%<M1/Y?R@\C]T9&o]lDM"24u98#+M1V$7sZm!e#,%m3KZL")[hi)^EM;;$G\AAZd^`UlflaHM_$NkI#gULaP\OXq%ga\SY+HUUU@R%MP29!:JGl+M;ZEHTJG+#g*!!<Tr\Gp0QB:K^N/8qW6Ouq1N7+2mIbLhB+:O&@H+'4E@HD>'Gg%PC\#q+VVJ1:5;rLf9q[D+O1hRt%ZqU,[Io?>9FfqjJMgii("]_4l+(%tLBY8)*^*T4!d/M"]Jq5*oS?Bu\gZQ%"!p\HIRb$SclZ9]%!RPUc$1uF>@-)pa&oNE#YnK(*%&JM5'Jr[4E.T^S<R[MYY&Q%AfG\Hq*n!DEW!6m8\K(+2R@"Dp[,qfI[Tl::GjN9%Z$hRqmXNM1AHLtHBYNlI-5QMQ%i?RTF2=3U.%[(KB?V5G2m@iX.^]jEtTl=8[_:LToib[[t.S*B#R',eI=+eZa`H>aJjMsf`A#!dgD*UA<SF+`SL`th:(c_XG/EQ?74o=_='FPF:#%Lt]IRU\5Bnrk9UOp6iNc[HFauAZs(=[hd@i'sTXsO0`XKdF0,1\Yst\Yq!XrWV1^2a''S8LrRog-;LFFA*Qj*G"]::>e1`Db3ZBk%g?,D4X'[XID`<K5VT0A'C-7LLDR8T06g^kp#1"7K]4C9MVttT7p6F\rC!aIBW<fQ/P.MFcN7oBNDl#:K0pUoNk>NPsSCMkQG<]<r%BjTh6e_;TB47D0-3Q>rWje$<iaJJn0mDJZ/djo]#Sp#T!+XRb"H\sM#]D,\-AlN%6m?`mGkX47*qDNEbiI2H=HhV7CpBaJ[/WBA7%_<VJIXK;DclJ@gc(G/8Xl'V8@G5TiB1b`Ng^)oKu/[lV*[qY]MG9=ua4.YT7J+mY2?YeK\OZs[^$6`rtjE_3Ro&2!s4U3-qFLl<<%bEp5tCR7-[m-]d-dq`$"X`2NY2UONp>rUUtMs7ic(3eer[!7K>ccF^U,7h?fY.&2)52@C6':dE=%kOFB/-Zs/0;bpS1DinLMrBMS%"#obH"!$as(:uXN>/r&mk[e.J4`Gt+G>SES-QnbFoL7,HIHTXlEQ2Em8[W"'1??5W.I6C1X:I*a=A+4"?16K40?ToMKuJ@F$C3+'%UFcqJ?l1Oa=$7"c0;"[u&\h9r&^@j!Pm[I6!"I&#`iGH@dHs"+ZnduCpHo)+=r13gK($#V&tgJ]rDEd`\XGb>C&j6@,ALG`!C`4m%IX.($<=\Yq4<ZP4@c'HRB_2p_%KfSsbNBdml0A>O&4oThfH*llb$!cG,'h[)YZGb?27m<l8MA^7(d.f9YC?Cm4#5.q).f%pFr.8r%MkV6e0.JR<D/X$Ma9sh?=hmSN\F?ZQl,g,r>F,!A;ZYR$22i<B?R-UuBfuH^DnOkt$m>r8E,i=jpHcqrGBOOYNjf'KLAjO]L7);C%f?R5`'MQ/mJH=g6hc/!Xr`fd1ghMC&(sQ9IFQ\.rW(BMmKu651SM&S@Im>V%,bDt<(JYX5hq<L!,B:<SOGS;%B#B*00ut=DGn:P,%O5_kX6)Z9-:l>(kiuNNT,9aF:oC0,B`+TY&`/j(:l,A-SN3X$77AQ#6H?6,P\dHUMT*NakkPTbI$p>K6dG-ZFr28F(lE=PCo@1<Z%jd=m3H>bd#@6Ggbq-CQ(f?[uP"TaPKj^H4C\roL/\B^\1jF/AZ'4]($Qdbi0;V$`l>9-^l]UOjh5&^kl89c4"CVUpL/;<;5nLd8X%KCh>GD<\a<Q3%W[J)G'hQH7JZ;\;%rM4V5IF=Re^B9]CRY4UT)k`,j?Ft`^`-BIfe:i-O7cj^:_9#\4g=1U5d(:%7(RM)b3WH70m%WP)[,8$q*jEKSgK#ccd/gcI$Q*R@?KfO):,d$6@TESQ5)IMn[ai_L_+#jT]RQWre(AP-%\IgmMi'.q;f7u/$1SZ`rfC#'/-,ALqR%2NGf]s-o`5/e2Bi1BlYFJh*\?mp@nOk6t/sjL]kDBVMbphNF6(_lXZaA7b<a@15I=q?nePiFF&@@]RjFs5JcDpVg)n$[f-?f=N8#%rb@BBp`%Gl-L,?0`%j@A<3a=4Q=Lb</!^=pIAA_H/^'EZ_FK<W.gRk@%>-pd@MIB^ZG*)k>d!KEVVUoFa5SYa's0ZB`FRJEK#%sK%\n^KXA4&-]llB'b6;psCUX:'ET_I,*I:$^u.P((kOnFnWF@]I_%#`unTk!];edn6l#1cT2([Vs5"_Dg-0aJ[8FZ+:494sqL>2a[]%H`oq^Aru!]@;MQAG7_dTZM#Q&aX,ZW(usUZ*2*Q-h%u^=ENLEc.4Kq3W5T7ON]64)@=qTRN_QMX$uF5%<jrdC]:SfF>WJbf5IUBB%!Cp:g0m5KW"ZmUV6.f$RNQJV)8f5?=j_gd\.[VJ>L"8jPqh2iCJKPjm^r=bBLqXQW)8qBe[QJXS#RUuO+58;nnj1?nW\sD(?<E1d%3+#A02e4j)Kcmi]h^ODka<.4/D.djp01)B9^nr%:i3%eSgr]X`)id'T2W\+o)lBat%ic38!4;ZP_ZJboAj?@c1o;o+@".fJjsT]n%CM3hDk&@-b%]Qs8=:-PS77"="[X@Rsq'M*HO,I3-XC1.$I7QIfeL/BYhbT4KP8>n86'`FAX2HV!+Y.RE0d'7sMC^cG?Z1*iS?-W<%3,+96P%oZGY%7(?@gQNj>K,!/X+-pD&[E`\Qsa8D^h-IKAQ>Y*#g",M22!]iiABO)l\.:_4).nV/!J4CJ-1P=W"Tk$HTlI:4=)6+%;2`jC'__o:'>Is5[-VJ2]nkq#LI<1HR^OMM7jVW>-OOCH#.Z1BEj?!0%O2n@%Abem%tKB`%H@>,+2@0_>si$,mu0`5#2-M_Q6KQm%jGHcd,5/$&`%T70PPM&Ke:@+hR;@VR;Y&Zg=+?"Q3Ch2bbbHb3qLk(_:Fk"o.fe-0V7&0.!+^Bt+_G)kd$QDCE"b#qai8."Qd[0T%XbU&%gBt)^m(FJ"_L`=W.f"aFrnU_Pi4DdW,)g7uQj\!O0LB+Cj/o71icLSn!.8CfLWADNg$/FGkpS])'T[U'\rj:(d0'8Ck<QF]%,aOTc5H!mJn@eI-PO3>6VpUo[Io+>"d-+.8(9b*38p_6MVCs\u#K4;PB?.!@?,%#5<bKlOFcT<3PoYfU,O6O25P6:j>=G8L@YlFq%Q:FTTVj4ta1E!I[OBK+a#T8]=UX$r%8Mk#p4P`mbJ:l4_31]dccQ^aXnZ!J#Z2OXfP@u:qrL@<b(&-2+gcWameE/L$;3AFA+CD?'%6K(4'BhYsXW,AGN`4ui#!=j)&X[q_T97&WRkGnE$O;k=0pBh:SpdVDu=!l[IXErY>c@4-oHSsqBU.cS-VpPK#9@a9K>L@Ml8WJ-p%RW1)CG!J9=;BQ[eW5`7b5DC`*]qZbEmI9D0jGM7V7/_<#a7Qa4=%+&l)t9k%#.<FemjXA.hG+7sCQANQC>YehPg6$.N>^)td$\>9%62F$.7/@^aoi1>MN-4+D>3pNIS*2g`p3_sMYH>d8cXPcrC[+7;h`jpVp+L<8RV\q"$e]?#D/G)l_S$:n\<Hfq2[N=8;X3O]6YYhM%R"h:pH^mIoWTfMe:an/q7`5A=$Gh-SZ>o;-3Xmg>^tWO.1q>^4N#:d&!52d!/^NH^Fu=,Codhs0_;(gY6J"9?FD?qE4=G%n28EH(%[H-L5$b9_m3E*F(\Wg2JC#t?naBXqSr^E5H01R<m!F_A/K)+h.h`!<^D2UIP25"+]m+n>;2RYD186u_EPI:)gjD/HXq3L@36,Q26%(]4<)jBF'%"H3a\#Rg6#%SM32,!_m5^nudc^_='lHS!Eo2.lB-s0PX?>SEYadlXL_Nf,l2<7$3Q5>)HVIKc:aG+KU5r<bS2@Eq_;%VdD^pP^Jc83rKCHlrfjPL/,L8%TNn.UP;MIBO@rHn@0Atr<bUZm#KP1kk$Ch\D"EUCZtC@k]kG5e/CCH$9FINb+i_8'WOhR:h+:C%36[qAD'4<qlEb3V!G-cB>&<Z#["_!;o>D5(3=Sq]SW^`;cQKg*)p&CD;Cg\Nh+;Y/fj'6knDr5cB-q(ZH4GcMSs5+]2p]]bTG.gt%p0;mg7Sd)l[BATiM_R7(/*Dl:ca8&W)E0(Z;5EY";UY@jO7OHIFL;,>+oJ'91hX%'N[7a]F'+?.?bH$1;*V^[F?hU;?7O$/8Mb$2%O7X=r)o).VPnM3:VQ:Lako9(\Mqo)H+Bk1pqhj5'D#>6/oTi5^<H7\GH8`NX`9;"saP7>hP-l8Ae<s?kQ4]_niE_m@!'Y2;,<$gh%qg<G%1:_n^ePC3>>3Ao:/2>*U`Ij%AqdlN+N8hA:>Z?.KZ>O-%OhdA%2In\NB/`L>Wgp8CLbWT[;&H56P@WT4Y2;.+7b>J!I/4'a%BS]^^3ki;9f?Hnr>3QH0PGu`L'9!YBWX_T^#@:;<AS;5\epV/G!Hie54_D%joohfueSWJ33nn]_!o"IUMs]tL:Pm;eECk=B/,Q[<%&"04M]Qu?Q[*o):^t>6R&G4#^CLj#N@e<EqdjD2F^5,Wj(/+WuF`.R2cg9qu\Z]2^A>G-s!iJDkJ+co,DDHRKgShH66b@]j\e1Jr%<DtH9J%;d&oVscXYc&,VYh,U%mkbC5j>A0/=%KkXU@%JaAOKK,nGYV!G'g5nN9Ykg-9;W7Dkc'^[/$a,pfu^:PZ5VN0EXPJ,%WW4%.Wr!WG,0;XcVdmIY>*.8j^X%_(>+/egjB"!SZ+^hL1Jc<`t%/)O,[)-?%n/86[3VkKI>%BjIb.Wi>lEnEEm@gd6T4:A2#3;g5Bn3%4*2a><%@7q0$3X.;D!dTNa0[1-'-,Xa?$)PaFpXO[C/T'7UoW`3Fq0+Y_>t%f?Y4p=k"/u)6MPFJLX[*i@m;Mm0o`ckn+e4KZ7Ri%Sm$lGRa.UoOD01^g;sqp73/$@=.Z0Pbl1:_KB5+DS`l1b-*0S%k=K3n4*@LDHcs,s3B^kT4GdP'35$Xno15nD$V3$QN-[(8_p8e@%eB$s1B(#!d;nI5C)+6tnkdk3pgb=pd^TR"cF2Li9=BOa&Vuu>Mp1<P-a<!`lFTtH/o[6*[l<7.lV]>or>?n'se-!dY%P\+/;DP9!%EpD7"(u$RiW/!J(]Y5WViRIUbc<Us)3fP#VLGP*eH?q^oS"Zj`Lc]fDgd)[S8(YYX<=9jH$*H!.c?\1i/^IB,a'*m=P\M&8LGO)`%af4rPb&ut4(De,q%jsN6?*&iDH!:MB;LAgYm)XLXZMp@?Fp&%=bE=:?*&;n@:*_4_'mUG4<fUnImtr,9h5s$U6:W(a.ed:h5K=j]%+mDG`4DWK()sHGb,@7^>$h^:^2]m,WC%i43VPP:E4$;P+AL"DUKV=og%:LEe/#&ge;!kAr3p%PmeVGF7m)]7j(eIGVY$N_U[`5pT%7bq`@CE.'Y1RnZ.Ws-hcL+jN7%-s:e44o"BpSA$$(ADmEBeSjGG/0'Zfn0ML0n\WO;8f]cDgQ74NTF'3)PhFRUqZl#XWmH:pP]id%n%WM780opJ']&,X8F9d>GY`K>:bPGOGuR3^oQ++\WCB<+oV6`*aMFVp'c!^:a$B)$Bjh3C*1Elu11JQLhNMOsA](=m]>K@pkMB.^%%C4qaV/SM"llR[1;dYl4Qbo/L474J\_Ppu1r2"@er(7F7A\8]e;6l<MSQ6)qaG=g2<D:<DV/Ubj6_Us"i7G-654Csb<*(G?OAP;&%**u]ZCr]#N/m<T[W9!<`M^QHq39n`'6&*CZfAoF1C[NJdOMh<PJ1u#X)Rj(QTcR%mJ[U_%83*@A(K=H`Vhr<4:k]2%4aUh3S=FdY%mdLCJZ16R.<dZJ`[BkEY^0.0pYC"llif#GL"81j:,unk"1S/dQHM-BV_PbNsZuZr(h=pIgkX]%p=_39(]s;nRP=i+7D+8iDRA/@$%o',72)SV@LJ>JH`[hiaH;-rV?eZ:i"2tN0#5k1]))F2^;f]ZN+&$9;"h$Uc:8/itg<*L+]Ob6*SC/;3oh-<"[DKh59"K8s5%,Jr?%Z\oX=.Z<-0"dsFk\hf[JL##2.n!?U=A[,GaFf,6sH>*cE(;I56h0QXIFqndlF07pmrpj%kBY8(q9lKl35Tb+:j1B.jB`frP*m8S%%ZEhLcn=R3_]WM&lTNlo)QD"@gTL\"bS]p?-j6Br6ajm767TEjI04C\+.W"(BW7-?)cFoT^C[fu+5\e4`:QmFM88g80O4CXhURG19%rDIr5`I3Mu)_UM,..^%'F0:P68P[P,A`I:`]Lbje+Vr`eL\5PJ1Q3^WTkA^nY&s)#P:QKXH%!9u^)_WYghp1h/%INdFD9jZ5c1^+%i$EYqmMa_6,U%13K/tQO;J/N^OlKsIA[V!>Hs*bU&5tVo24`G,jVI2CWp/%2!;W07kGY9,]SlB_eTAs5ToemFP:$mCVUO8&4E!*J%g4V/EZW>PG&@F]pRSM-':f?lKeT>Q6F;!Fp;`1+L/_uG?3OtSRc#732bB$_5WR]G%H`uV6VGjOl_gAS"XesRh[QS+XS_E@<3Hitg%]%tmW<?uRO1KDo'Ct(X>ilPi5VGg\`Q'72'XJV2`hpSsZ;ED+P:9?%g#ukQ;VDGNqH[7Q?X=I&DS-NR$Cr1fYAuM0D.)o#_VNXH/%\QV&)(->#DSQ[V9g.cjj<R[piTZDjK6T(E</Y.44a=5Y]C::IoN<VmRe&fVFe^E^=.sb/PS_=Ebk#rj49d`WDC5DVFXJSo`L=XZI%n^V`n'2kE9In2Gf@S"'?TN4L]U3O^]Um2bbIP?sK-AFKH4YI,C8'<%W8%TNESZ?-p?Kf@LC.`DB:6=ha`ok"<cIff:qsURAMC3C2%M7<;A`RA/26?*Klc;eb>RqN<S&o7(X\>mh^fcghrKpjhJL%jP?T*:l)P(nY+=5IYh;B.S?C1CA_4D9"..Qbt7\m-P[m8k25K,o-[%SJK4U(YtXF07g=;47o,,j0#pKG[&aUfA*Y/ZKIrDUP3fY#ndL(-_GA&SM]M%o:iiaU/\/Eh!MXd67Ydh^h`ABY2"6KSUC$Bmko;Y%c\2a<*^,i;'#V;#[Q9=?o%lq-X3$1F%9#n\:Tie^2\ap^7O_;C8>i"T@lW)OECs)j[#.dHqq(&FI;12N#?IZE`#MYPWgX7I0N\Hf%Yau-VS$6*oFLP)F]&OJF.Tc3lp;N%C&3F5W<;W3=;!jIMFiE!6A%a*:+'jVATObaW1[b$e:9LR-HP'5KQF&L$O*2/d+nm7nc?%AY%HV^C%S;"@##8CZRH*(G,BJf"0UeX4`GXYbBBr'_k3XZk;@n:dlKN@4Vog?8!Ti0l@WgaP>=!E"9V9GWfhtC='A2&WS=$N7%7l=1_%B=u(MBm%E7%%gQJ*tWt,/NN=^Pfh#s[o%3JmuF*4F,H#!NUI8jgq*e*CM'L5m71JbZ0rkX"VWBS8bD551)sE;i:qG)-C!CEiV;68%&-gfaH,JI#op#d=E/1.Ngi7PHH`M;X\3&"GG6_,3*dtqsnts'`F"C:/\3'D]]X-*6$$Y0="tqk"6WCW@%@qN_ndTfS=Z8eXCWVJt%#W*mK:-JMW;>\p#E4N!B_V5".5S>b1p9*TAK?gCCWI-fu@4gbuR6@12F+sJDmol3>olK+9<ENG!Ia1sNrk'UKnaQBuT*cN\e`'cT%]KThAQuj5t=cmGRc(^^LD6RP^%k?9(@Cg)5GRh;_ESKRl1OQPilKj$FVL9:;'K@mJ0pHeVNKu;5(GRqQT<nbXb-aF3`YF5MGS--5%N[[]?K&=%9j'(s@^%6U&0N>`Hn)]M[4U1N6Di=>7aItJo"i'X-eK'"\G`?LTDl?cC*^8.7k6a73p2%G`N4iI5g.O2C;kEC]Nle0^%9S5RW-$`!dpSaC#K*QORlQ/L_,m*2":HaJd0/TF21n>e,Clr$O'721BQ<u\lf+OY!<MQ+2+n$Kg$McphV/`rq]]-3@jb"5PD&)fL%4g*sdlLf*FbF?d7GPB3@.3\6SE-ts>eZblML)9Z/gJX?&<Y:pHjWAP@*X1W]X.o<kPJ>]L)SMA8M(+")W<(!4-/j4'HjRo"Q1qL/%4cBA?=dg,oIQ+Ge.fV-R>6H7WECjj_^&9/RRQs$8X+g8,F)#pb+UaU*l^M5Jha4s5O=7:n*DN4#-M9M7q*eG@8*Nu5hVNIaJX132%.LMhNmrJc#?!aH4HG?ed^mZ6fr/%3?UfojR>#<rDb#"/XpSP3=Xuhi,D98d!AlL'lJI;mabM0R*Fm;DPZdS\u@u6D@h=Karlmq,l%@sVRQ\)P,$(hJ@g^%quk>\sF'7kQ.t8Lq&<HFBrLdO)ZWWe52$Gq0r(>.%Q\jffTJK[e&+grMXX.a:e)Q(b4bI6!b9k_ZFQPEY.6%\NRoaZF',4kRHgMX?Wg1@3><<4>"7H409q$_>I3)1p\a>ltCS@*9@JMrmd%=HL\.6N\P&4os8c21!ocp`Z96s;sDAOCGcFi=ZSRU%$r_L;4[/RB3[h/-'d&&c5C(FUN%F:b6"Hp'e(>hN-JQ6a5\'Ir#3%>81[R:V_cLmM7eIn6;HP+;hRBB]XGof=6#_0'+8NucY\K]C%XEu5^@=\E##['u:-dg#W6h6TOHSU7*JY9:fk<GZO9uh--E^k_Xq(06?ZB/lM;e>.iYuAf>GiMNc%QfqhXEJ_*V0U@;+_t=D.##;u%pf]g83]a:^jo#L^S-e9]Q-,MVL._Q>Hq&rY\7J.-Zb8;2m2[!EOh)Ju4f.$*8\%'1'#r"6@Vfskclj7\Hc_?=8VV@A[Sne0ZO^Wu%iINrQR;<+Q6q?.5-Z\<'<IdPS!(C]$QmtA/oeRXb2Hg8tZj(Kq%IAGA!0,P0WanI;:^*f.6Aj^-auR-?;umoVkH:sMU^BqN5^$lB%p\MtB<Ib>MaN%9]Ehh<UQ,7i6Qh%DLOJ;^GcWnW%LQZe\[Z"S9Vgf>u\Luu2X7%V<e!KVsmn<N?0'-%'OjAM+TA_3R8XK"icVjY<%0'*bSfKXX1hk'GZp$gH>^MDNJO2fJ"3r!$r"3uW^iEe_LT'EG,8"L0tF0D3b-rmbAq1*hjoPaCa0i(BNf2$lsqp'pOHEWt?K[+Ws%'IpUSrG8G2p\O.;X=.is:WXX(^=?#*MqL+RL=L5841p_LrE__eR"IjSf;XHpimb2ZJ)^El_S(Dr`%?u+l_e*4LN_P#ENe9a)6-0o%oeTQSH)AbLZu5P8U#`!:p#?GSe8P$/[)WZhfC+NqZm5#3djbM/.-rZUa\uB6mCAP":_pEhHi4B"fGX,Mj*OWV^chTZ^11-6g3n@H%E?O.s1k`'G@s-G;Iembr>5'?`HEWriH&B,$E8&!SqFLkM9h)&:l_f65TD#i9G-@P;XaV`76V#tuVf*(1=/?eLf2$UcTRaAuc>]s/%5;)V5r=7k9m<eg(blF%+peJ#>fX]Q$K_tNS3)W$95/'rKk8%t.e(itFn6S?8TNi744eLb@5Q1199XaQJlZZ0*g<oZk.60nIX.M+,%[f9[K;lk!!p\O-@8[:5BVr-g<J#hHMp[K8RZA8?A^=1bSpJsMsKIW698)<L/J#hJ@'6T8jl_j2JCS#Kii4XRXF67B5e+I#X\CXO6%bV9tiFMuIb9TtW@4Wf0WT<'#Pk>o?-n)HK'DJJ(LG?FgF<\MDU3EMAjrRA^;@R?&GgF6/Wa=5*t_DrkhhWq']f92XjF4.aN$</L\%C6VogfR*Shh0,",:sIJGHi<TmFu`VFJ$7`^`h^*?S`Ejq%6F!k?`>3YN8Nr6Y_r#l2,Ag4W'":HKl[%'IR5cYl60^9C%J7Zl_c$9%]Flf>qRq@S4#T4@c4rTF^X_dD)eS8>5Q/h1^!hNB\^sXW<^3ATQA2O\e>*AO?Of7MV&B!q.#2D:400jcpU]f);b+otQj"1t?/7Y;%8`IE=G+hsHW!mC^@p!mlgH-5"J/9!FU)%7^"S`V.\2;tmpI.qJR)Sm`g0/k)a,N=59N_*;9noNt9[;Xhd.[R5/SP_YhaDLIW/(1,%fkQ)g[dU.mnUs!qApq@se2ApPY5Aj@Gkm:FXmP;pU2@>T2]^EBg)"TbIs\HRW&_uF^2C\)<'-5PIBWW6[E3Q$h#>$[c6"QfS*a.X%ic=a="cr!4-1V.ejl4R,2-tW9ZQ%WLFuj:tA@5[DW)^W&=MM%EYKc$i-fMUUVLP_+-8DeXM_ptrhHAVUPoE@MhjSnpL>a[\-8K;0%gj(LcQ-7]0;/+j8e+>KWUUT,p#J0TSHTOJk[r@Uul/.Ze3e$s\QGeBuhMBTYX@G(1qBZ_e;6&W3>8LOMRV"Isf5e#s^<U!pnJ./@%]!1o73qC#rlH#EXiV*#@op<rVUUQQPgP/4FVV<c=eSVd<n#Z&[H/<_rY1-0(a&flr*DY7*U)p!f'UJ!sjGPn_5<p!U136<qq(211%,Cg+\+$d6@BK8!dV!R\aS'*"V(-@C$F7IhoGe^)RJ#&IQ`#MAG.Msd$kC9,0JW7:/X%%jr:Eo@+L/4XDG5OnlES52HGlQ=TgZ=p?%05.N)r/7JkdPSZG03rjHU)b#IVs(O*bKak)7[?6%WPZ"a+OT1"9>fG$Jd?I2^0n-*ne-NQY7KlB/'<\;Tm&e2?E[t7bi=C!qoG*6%?FF3%YVSZM,%2;e$5gshi+pbn^B-J]r5.'eO8\pk:gX&KA5/o7b!"?\K,B)M-eYPtKn`G`fO:4blp/8&nk45gQH[-KYRQ6j?Km)4%E[3d:9-6j1a2.pF#/t5WIIiM;?$NM_V0UH)Ie-,,WI4Pt_?6G&_)b/\hZB<?LtiWA?tj&TOk",$LjfW8I1JMY6JqMYgkZrO8T[_J%]h]2!<Zi,)\fKqicScY1$`KD=!Zr=V%]_2ZQ0f9Y$t%m_m%t>FQa.uXe"29OH,ki8#@5`QJ=)@hKgN;NE?[A\gIg=UlSElV4B\K`%#pPQJW7]!eo3OH!%m:,WlqslLbkiDIdN]X>A5]#>.ls,J%,^2V+!W/V9s3*VKqmOl[pX*YC,3?>oCJ;>?:!1d1uft_/0Pb4@#NQN%A.(T-oGoKseju+rMo/SKq_Wd2EhBdYT:";a-!.jjU\Bj6P>o\2Y?@`8A$C6@.h?1fn@L@.8624I`N-i4eh[S(Wa!+UD+j!/Ac()3%9('Zu!Oh4KJVOX8+HCYI>s(^8X]WmNR,,[*.c:28LqrAo+.-Bifg.PM2?`"21E9:;IKq]TnIb-@l'Tf%>S6e%K__F;n#Fu<HKnNC%qVU8&-c?En5?@%t8]-VL0Sk-RW2^c_#YA&'2U5Y@6Mu$+&]f_!-N0tZ$CIYT*iumqVmBLB3'#BM0)GgXpctgEZi'`1=[j,;lN0qb%VcEpWC6:iX:H%:QRM_<*2a9Ng!f.tq7]429OPYJW*I$(9Ko^O"1bu/`nkE)!@R&L/_M2(32I-$=,Sk"B?5(g2N&4Ft'h9\/kYX+<%^_A,"EjBdLQ;aXLMD\3MlUSS+qu,!K=GnoR@\9Qf&fV$H'<JICZj9>UT/@n_>euRbEs$4N*?qOBU5%+)"!N#iRZPNtJC1r=\J2]5%$VDFNpV,%1=CJiG[rE_ue*hH=V`,9ra2nZk9*`4La-i%FSZ)dil0C0/brgA^I>tibh>'p1Q$i.I%=!W\">P@GJ<P"Vnd.,>lCN3N%;E*s.9Hu7a-K,X*c@S(SP6nh%56]?=i9n)a$^>CiDbJd*C=Z5`$0-n'WX-$tn3+3kE?^!lf-9X(eB(=VRj.-M-;^?cSdme/-lPp]%"d"C_jPICqBrf<cr53*c&XZ#p-.:Q?&Ad5?Oq6YPTos_bMBoR@p`Sk.63?q''EDq[gG%R<2:4sXmhjHBK[E21i25PY"f;Bd[E9Ub%i[Dlu0br>f+Q'%<1SES@,nNuE+R,:/MF@E>lrA2LA=6`>5`csBCFQR[kR<13dpX8Ip+ot#Fl+BMOC#5X%":>Mn'L=e8HiW2NJXFO%n&,HV9RoB&]-S?uo<G^q)$+W$fHAL,I[1-&D><Vb%Il%)gcgZU,]gr>=Z0#Eki-KXMm0hQ%p*f[c5F,u\Y[K&F]6H'B0p(l(3Cm0%66an:UGja4]X>h)0spCkOUp6'*K]B#KbQ+J^kdJkYjKA*DO/)tO!Um/&-o);4QM!=qW33RT``cpdN^5f@*RG\9F[^VLL'?]:B_bB%Jl\Ld;t(OjM+c-NR6TP#m<3m,"m\'W6_\MWI\T74lkZhgUS)&`??V>Q,cpgd*a=eg[aYgPn_CX!`'c9+c1&4?0dm]%`\6CVR*_`j%+i%2030Bak1Q/G:a"9OF"tOg+-UjmaS-G^tJ)85bq1UH8pnM9#K6XNf"6[Jrn.'>5\=u)AVYYGK;&_G!PZrkY]F;Zf4n=:,pN1K!%6?)*BZQ1;_n`1JL,5^`po3M->g0Lq\aW<,?PAR3*]Fi/Eig;IY&AG4JIU*A+JPSHk'U@*_-t<+A%&e=M@ouBA=S4"!l55_K+gTj)%[$Y\,H@.!k_6[c.$)dc)*u;[gBfiQaZpr[QY1uf-a<)Zf:mGd%"GQ@;.qr),s17tKrK(JMPKalW/Uh]J:kWqBohX-Q6"a?qj)Y7`%I\r4-L;*+thR,4@U>Jk^@OBIV@"5pZIjRD=BcnE@Cd'4'^'FZA7fga=9BchsK@3J3Gl.@<D\Lf5`]8@YH>P:`f`3h>.ce8OKna]Q%'7GsGYcLd>7BL.8p+=qOK<[N%H6C(4*G7NUa"G1(*IV_^RYrh@B3rmF:dbRq>(6Be-m&u=9t'9GFg@*UZsPD1Vm3qTg*/9oN9jq@%^H-KW8T3HQqJ8PVn@eD!A^86Hq3[B">JXnQXGd"Gq\*\%=5IqFqA&TNE4A")Yt<N3QC1]\(8khH0l.b!,:U]6(ebu,aQgrZrQ(jl%96H*)Jm=sA8JD7C+Cg?R+bd5AWc$*bcXa6+]3"2gRXAXeB;I("YCiJF4FS/<i.8n054;^g]hui0m77(Pqjp$LM7&DY=5iIAY4iS4%SFh^f_!1r1CJp6Un0I21Fbra$)?!q,\St)87spI:/Adrk0e91nUi+3Ci@&`\=T=`.#kD\!p3H^K"JA;*Z4,^`"@1GS:gba77ZBMq%2AG/iYIGr#Fk,OHM0Pke].^f3)`:8-hRK]i,@(h;),Iks)1_MI=pVF[gg*N.+pe1R")QCkJtmIJr0JcAZ<"fl?eMTt'"!ZEhMif%%0^'.NCF40GRLrqb!R<nF]d3*;V7QR#AWFBa]X&Pe[S('9)A21p&5gAR/(@$sgkpG:Gf)rkfT$:C-DmkFoU`@c=d$tCL8lFb`bt[A%CE2Y-QB]T\+W?&W%L@l)U5OL6aO2_l"ohC2THpasWT`k%s6t+\#Ck(=/s)pjQTmgK8lbA*05k,^f-jY>ehJ`HM\gcPAr\`Up^"`*%YZGD9A7`%hZ)dsn4IH=$^k<:L?R07pik?Me@"mNlZQ,%IR2:aJ`ZdTA_I2P!16B+m@/BG86Oko[&DF`f!eEK+\@I,We,KF"c*e(1%\[i*7>4so-)jV]lCQc?M(Y8`m#$pH@1S>pni%ehm>$Sr^Cb^ATrLH5ld;(0)S1'P#Ifb#^TIUA@b,@^)Z^0KZ"'7HZ%88Fm)&.7Q%JUb8V"cEo0/\>ji3;p%mc?#uqrn/[2o*g+tEZoe/>!qIHLP&rO?^^Q[HoGk$S,/ho]&7'`@9;AFP(\98M(0mKmd?XA2u-UBa91\0%&k67`Lq+XmEt]]:.?aGb`P!DmK)/=n!5pP]Z3I:'G(YtOJ2?[k,_ss<+0E7E[K_UXHpQf-p58ApY?-g'cdGq<K.k3$9YBUB%MZ/2%,7!O'&QU[SieS,CAoqZ]R-h]j[%pRM.^CYR_M@K\<ZDq4#"ueS2-T5I>$;:bI$'('SQeKN+o$.j7nll8Y,`s_B!,*Aj*X]1IPejH%cX*s@oYLqn(YR_JW`2EeKnQjmk/A(RcHpGC!uQ5qrBZohZUjSdPUQia,7Bs9.h:Xj9Ee(gk::FOPScD&?J#NHBIARga,it1Gtbb-%a3k"Oh<dCf`BEui8F3=e$!.]*Wnggj2r1LQ)_;dV?<=RKYnlADk\CKQ]!Zd;rfY7llHFkN)nr%#<u([WC[oAlTBK50EfjQ\>VAmF%?n!6Vq#ZV)4k)n32(GoXI0'5C`V3\RUF'jM'^O8GC^c__je@jK&G3^/9LRFA8G<;:f,dM"EFciT!W=qJ7n*R-lKcCj2'[Z#9X%C0%6Tac2BN#oS;N,9343@`t4;u&62#C3fZrTU-$<eu0ad0bg(R=,O@OIoDs4`iA)8"R<>@(#N[<J$_m7e,Z:Dr=C<,`Ji#FccP;2Y&m%jqlr,HalOIm.]A*So&2"KlXOH$s(1iO,sO@[(&n'\*8TkEB<Ya!)i:Q0`J\9_R@[N1>B,"&9-XKSs:M\/Bp'24W,$iapN$_Vo'm#%U+YH^h4Q$c@Eju,UGF?RWc/AEUo`Y@2=lDo>81"6.$U1\$K'<T:h6!K,/3J#b5R!"WsYT+*Ll=`c.GWf?a_@30c(CCV%7:"J=nDa%<GfdsP6LW>pU_,)58LrDkXb7a&*,:Ji6#4q4$YXD7oV9"Hn3a4TH"hn-0Q7jP=VAkqoF-#ldm*NlJ+)0YMa%k0WUpU$3!EA!IS+U%7UlaL,A>%,:^9;[[]Bl3>`Ws;q.>dVkJO(u<QuRP&@,W-lKmMXYHiH/NYiR]Z=&CJ91WJ\M>A51%GAM9cU_Ka5[hCgYejpH3dMUE%@q+6"2H_>1**GRC2BR#0NgE0&<5DC(`&W6PW>.b1n+?ZX]MmTMK)l4)d\V"-?VFS7X?sZO(*4kak@]2kI1k2SmEYMRH$ss4&il%=%0Fu82">!Z'&fHnX,VluHC'9,Hd"C+o#Aor<Dr-Et,:J;u']gs@6NS^p9(XM9R.sD_Wt12m4Bpbb&ebO+cJr*X()@BWGuJd7d%5sG%<tlGg/>YdhBI&uO/98I]n=A\X\[PEjm1Cd1B!H%lZA1bl0[ggideama_u@c@#G\V0'C,?:Um%.Ba<Zj-8FWP:k%n!2ES=o[aWAMQ%;e14`CLiZP/Y6hMcJhFA8mkSGP\$7Y7MJrugj<T)5/1H/\TS'\530N+.:3J&\Q:-ClPA`fTb'[iZ,/mJ%.B.j(g6<nhgT4os,;$\%`UQ/I@fXTemUt3l=(+;RkPbbnPi9-/_[RgQi4SSI!t*"U.u=!nZ58>a^W^2o.G+k;.2:_$MK^F9,<K5(hZ-3W\]?#L-Br2*]8IKQ%P)sr\5qhr]&<0uQH).L@[mR$rX>Er-NYW:m'lrIq.CAR,B-l+#17L_&':)67D`A4FjK0t(,%S"AD\\E@,`IU3@M,]_cG/W=dI-&+%(pYKS5+tk"Y7-9c33$[abb=6I]0[.m/JJBT4Chk76qoZ_<hK3)&Ze:&KL%pQM$-Q^9.u^Rk=l)+2+n$48B&C3qg&TsO2DjR0254F%TR^@Mg7i_3Z=jk-;&/rQXRf>N03#VPgY<7&mhCC$di1R'#i?sD"g2WH"i!C5&+&..a=.[)Kh%bia+n8_kJqpsf3,>26a<tCI'2]r%NC:pS`ETu.Sg%&H!X8JBqB@6/*%k,'!_!l%4J,/A#S^88G.^A..KZ#/;$[jZDQ+s\E3eh-+pE\oS?i(RImTqZ*ggdDLe(AK'Q3U>%]cEM3\P6^X6!)W7P%M/i1QgM1=:#[X!S]AO$eC$QGDJu*ph3^HcJX"eK-5YMZRE8,E?Q5KW,[[dIYXAJc`]\r\"s5[*YBQB.T$OH%n+q0;;$I'sdjA4#UQ`Jr0uO5*]ucpgdKRhdBp;T<&B%Y#^euD.1,U,hPK@EnHN3kF`IdbTOj@484SfFTbnAEd<6MY3mW!NNKh%F:%B4+e-YYfsF_0Yqt]j^GdHl=Z2@$Do$Z_hpo`sERhXo9[-OX0X8BDCkK5>\T$WsH^aag\S6NsPtU/UhO/mI#S=qMKiQatA?pIPer(%i4;$M^cTm;M0aC(!.e#u#n4kGG6.Cq.e,kM-R>ST+F2m,feLO:&6oBlV@Tfj6$mc;kZ"ntHI7"lb]Ig"DH"WW[^,c@ls(%TJ^E/$%BK1ipV4>PZ%!_dQ'J%X?/L@U;)IR\6[f[f4fb\qkMZ!cD+>)D[ab4IT+5$L%Ab&3-ojmulS),KG3837,b*:)(m)=EAi48r\/io'h%9aj5G>oj]/Q>Sn!LN:jA$(R^@UhGO&<_0P)7`=]7%B;?_BNQF;('7[U9q[gWb(]_uKITOjLOc`-<Kp)e'."3&"t@5).Jg;nK@/"W%7]T&f^1KdV^H%@!,N^Bm1.I;rDIb,HmPdUq1dtMBgorMRUaa1BO(nGL`k<<r(8YGsQu%,.&V/k)ft.85LDV7+RNb(!V_M]B8FM;^%Q(%]sH+Y*'/pdNAH+Y(9<RC8ScK!`"G-]Q2@5V9W4XZU1-WT#RZrF$<3HsQonre03DpDX6K@XVCp?(.q2d!r`eD?_-nck^H]Mj/u%m`HKMOUY=5GYY3MdB;RkBB>,pVH/%bL<>un1FD8/E;G:C%D7.0ZMS+-pRIGl\`1[3/8qs'0U`7.&AtN%SObg;EH"s_4WLu]"Q_po%3)]rMY5#\3A/`1`r#DJC/K\4D>J]dIL10R]S#QXhh2S&O(8#oh>=1^_D_n=4'n?H-G@hXm]7:E^E/ktGp*,'0bU"%1E61uACC`Yj%L6nroH,Q\Ab1a<)?g5uaLrc7*Aj\FH.2V)qUS)-F/T*))S"GTRCLY$,l@5X)Z$8B?N^r(`F5UIgVs"mZSP5A^YNa1DaONiPEB.3f%Bo;1PIr1(DiH@L=2s-nrOD>YI[<SK<%9FdsN/tl4I)R?@L!15@Bj"j1->%7fW6D9.&(gd>R!;3k(?rEJB`#Q_DZ=eB!VUCqKJk_E%()Qpr@rY]0S7nt<@WD8@0%@&DAe75fQGrH=CW5A1=Y54_BCn'mGW"/P^9@)Wp)G8G$>1%8V3RYDe,ul?8pn$p3UAf+*p"[+4lV/J%N%=@_>jJ`6H?aJZ1WV*u^?,:njXK7e8q_sWAo/785gq.ZJ*aj_[r06+*qha4h>_F"ne1Q1hEC8>+\i"lOT7ra,XcSO!Up(7+eB()%+J?i='h(c]UZFHV@QUlY3*M3*A_CC]*SHGn3JusEQ7UcgA6G3E=gicFdPX-eebad`!*jIh;%@<fkC%7:mcs*&lK[["l8RPthX)aI%CYpYIf5`J1kZnTTPjWef"#%<7s/VJ=5BuAg*rF%('Z?.0K3s#a@h7*[mX(bdHhi5:hYGichuE'?dta5Zht>:,qTlL[V/(1k)_OC7%_68+Ia<S^-IGt$_V]U5MU)9K]!S,8Nor_raFN91*CEZTOO5H_+gth^eM*kSC>=H#XVKh'bGHFQ;a(C"8nD%6NHpVpWhsse&P^A-$%d(<;3p72ip]Z66cCCSZIA7j:Vq030@6/Zt/k"gH?qiksg;u>o&GG'&3n:gbi<-UpDNQJhTR4!KnA8]!qs)d]M5q<*0iZ7L!/)5K`%opq/W"91&]LjSfYn%q:O2T8]@!>")22TG-hjbM_.i`_(%fSAngJ*7;gZ7E,6+1k$#n&$67a?7&?D`mg#iB7]9R92t'e+Ao"X6?9F%Kb+@_pj;GKCjHgWipk&a\VQ^<O$>AHjhA;*ch$f#WMH5a>ueOZ.O038>>B+W1B!fV`1PK&[]e%ILT$?=Gi=jqJ,7unD%D%[,:'E)%!AUBPoo6OP5!3i2l`BVYI:PfsoZ8QG*Q5?JqsMc_O+-'%&)[-07sHpp.*A<,QN!Tr+5+Tuff6R8HH\h>3Bkfa$TXi*K(].LoIete%o%.rlHmN!\`:OSr+b.ltJt3mok3Z)*N72*tK"Ga"&HQt?Bn,Fb55]\(d>u]iJ)O+GSsRJgo6hpa]#WZL`u!Y212k;%_.a37^?;V-%NpCM.hb,G^+*c`S&J47C%ge``,\*%,i#d763Scn^pC&t/@M\T]Ib-R*n"K^!SK*#j7`F2Rf:ldD5,Bei:T5O`psIjTrHROtj-`j2%HR;=pnj1N4L6Q;O)^lWuFJfh_Vno.][ofGn+2(m\KMO3RQpok3f^b;g]_gC.h=j%Xb0QXM("p9CNn^c3PDOagrR3I&p\Ch0'h?Ft%V_g@QFk9-U(8b`>QfSYap[V]F1-L\QH[YP(GAcO79BhY4s4gh2%tZ`Wk38P[Nq[ak\c&]'bk#$tMXL?!BmT9/qqF7e55rL<FNrm1%3\.BG)e[@]ooheR-b8];hu<,jK0#g@^QnuOG+nB<!dT(WOOiohQcZVIpDnZ<rO+aOEdI&"o@_1=6b6-EUG&MT=&V=CPL&80F@"pS%njZq\4a'-`dMmWqp%;UKIJWNc-0G"nl-=<r/M2`#&O&+bI@9R%gd?"LcS"+gg^q4Br`H_o`VRrnBMWb3T=shhn!rj\I!<8TCU%6D%>M!;tGR!HhAVfl\=)UV*4Q(L4kM&5ni:GR1D>L\25;HJGIJ8L]<JCm^oauMCrdCa)fus7B?N&C6?]=_o5F1/QE3K!&+2,P5[cD&f%PD;)45PfW+U43*8I22Q@+2;8"Ht[n]]o&C.qaW9?hO8>sErSIaeSTDTB-MbK]40*7nIEN%GKZOf#$"mkT-'4ocn]j24,A>CmTNZt%fc,<`D3V5IhW"8gM9K1C[56Sc^!4UZg=KX+?"L`.qU(B"[F+648)O#be=6@Km,;6b9:,D)?2:ki]%:6V183)WOa>^RhK^73?F`m,%=0N1<(Z3<q@X6Yi`\(`c--tC4cj"a+M1N1eD^Y,c@ZiIJiosRafa$AXod]aVqJ2dUpL6K)ce\0]SPI.>V]cO$.ZeY\nLC\^(&Btm%%#HGjc.QM?:[b)D1Ar,#Gaic?/pLa(7dp@70:C^@/IJskimm@q:0e[Hl&c37oI4S@V;6QC[`ju3&)V;8qU)2qqRBsUNudgSESUD?%?2$Y+gN20i+ZFfkUpkCC)^..g+/E-$2k(cK#4@,b\pp7i+ZFfk7)NT=I3[gMmt8F@]>6)9lb!bVf?3F:#eB3s+N%]K=1]&be+Z/h%!;JT66>lW`aJI'=E$OG@mt4`Z;"HJ`)VFRLaA(OsM<XqEF#;'GGOD5/Y&YV;`oXcj6>lW`8@VW<oc#&5I37O]iVmpDjJMBu:b_<[%DhQp<I1Qb-]'bQ>S%]DR8\N3s]Ff25pHdjil#glsh"6#V9:'ST7`\<]#9atsmZ!<t^(3P=9\6riEmsbKqYG72)^..g+65s@_j;NU%lH#6R013ZWGZ*YH(blbh#^lFlVXP/l)\b$GH--XBVC7DfqVg17MJg1sLoK7RlX-`23+Ansns[J*msN@l;[4+?^+9jp#fZf67SN?+%U?gV@\`no!nb$2N7S(0&o)=\eZoNCRBpeYC:@3ZmEUdA\H69iL(/`e&V:3_MLYaq=l8*Y@]6D[F::O\pL].2]RcLbk3'D#>9@BH9%HK"SR`f4TlNQ1I0gU\=>G;!5Gm\M3Zh);t@Q-VQN`:=m,YPF,qe=j&n?-TL;Y3*i9H"G'O\OpHOmE:J10$"gdBV;eeQL;-3=7Z@P%m_aP4PU)KL`,C$:+qgHB=1OE4O$%K+lOZX94Oj_Ipo[\0Z&0=I@up@Eo_a.%JbMk*=B)cJ_d"^pqqbQRG4+=e\ukIfGGQO(h+r0Y%;;[PoR\!buK!0Pl,[Z#n4UX>Ofjp5\iqL`BI5*t9Xjs=65fmZqc;E:2UKop+Vqjsjn=B7ASqe.7T-/jZhL,?-T76_-R`X;*k+0K)%pSVZ]pP$)kd:(n79>Y$%g.'8PkbS!Y2r4;G>981ZSsrB>DapR^=0SiVk'](fr8q#%:8.%P0Q31Jg"iUe<7*Xi!UH[VfdRWKj9_)l%OK.SgWg)>p-B<Kl<6@t0*7JCZQ*S&M7&>:lSeiL;qLG;Br?]1YVDhEQ=JYZL:Z%^\J'/YLLj8hmSTh`QhulQBH_p1oT)$ghOKWDI%lY)k0]d]i0"W[`[1V`T-O1se5Fn(=S?WDHKDZHDUJ6IEBcF>ltTIR8INkkW5^8;go,@cBK57+<-<'7P$q3f:[p$!j5#@D+%`VpBl%Na\F<jF$aU4#n2WQ2BNSqT:JfoK'X:ot'b_Oc2ja_?]KmbXM;)7T_[)s1GLJ./*\'LZI/,@BQ%fDn&Y7m]tgWIIeKJrqOOhT/o.t%)E;a"9*d\T&;W$0*rkGpIeR`InILM0On5<.VuJS\Y'0dtI6";A86[)(efAnnh=9]WjG0.A\U?09hgUn2fN5WD7@TKRn%(C%fj3De%^A8-&S2M=7AoN't"P*C02h1=W^'2%H^%u!LCUj?r[!qkV:Yn<!HCO\ADC7*mDS,M]6YeV8DL%`Jle_Ai/\9REmu$p8Z-IsA*pVn9%S*$7V_P7W'j;M+MSpNu=j%Z<Q?J"V"rVSTuh`^CFm^W9Tns[3q%^<N^I?a`*'<CNfGJ-O[>>L?Go(^VMWa>7E'K,Q:ISGT$rNCDL%]B8ZWm1Z\T%s'Rml"a(*.^<rr2t>CW-8MFnnlet[%]2je%fQ;1b*+H'MLp>"\;'S,/ba@5qUBo^'CWHS0E%gsBn#aC]dHCrV)R:X%/>]?#r7=YXqX-j;natB19V9&nPE5?IpOPCSW9Y$Z\`9?E)gK$SP@'2>q!i"2pc;=ufT+:jCO?o!T!Z1T/\fRebW]BgpFT^#dp!o?%11*,Xh6en$mt55o+/bFQ/tE'SR^X5AU9:dePqRH"lr>^>a&=AV?b_#]<%f:smIKfhXF$9d?Z5&$XRTAM5!+Q`]8Gu,V`]=lq1`_K%_n;Y`$@6Y45`*Bb6fq/up%Ea8D&D`%22Gc*pZ28'QTtMD5!_ATpHdrfZT$dYV[;F2.nK,S?T2]I8s*'pV*r#p<0J;!I>&au\H0rp%IFlcmqAc&_5Q?7Gll<=<*ma?o;jPsUqo<W'KK+/LQQA807!5^<hIqqqd<qWj0[$5A[u2CClX<.MlP]G0Ce:/>UR`G5Efb4+mr7**%.us]-?tg%PAa#Kg]:KIAAEM(=Id+Ra1H^0eOHfGC161lbj'1rBBnq!2S&g=Ui?[s7p.5ahjN6A"aE[A/X`(eY><kusjo-K->!I#_%djI1L,.m$3Y48*R&'pkSpCZG.4h\RjJ)bG'>e5=Lm`h;@nBDn9GsAfco1%WMTe!j4GAl@%RlBD`3P9_17c1l;lcKHVDr0]I2n"(H%mS0+=\Tr8H]0(#qc'q@mO57L[q3s<bX2RGXj>#RGcXUqn'HBUQldbScqCssZ$LX'A]_$qC#3Sdu&]\50@rQqq*LF><7!E"1H17Zn%j1X&;QS3RD6SH+Cl5-BaIHLMF54dc,O$35[0>)[H5*>k?rP/!>bB>Y=od&)AIoJ`Vqp_Is*rOLq0>2<[hgY.K9:%7qF3f7f^[f0u%B<SuCq3R\"q<LfD-0V?&4ndr`*]U_)7*7^BbC7FPD4R-[R9mK)e*V81p6e\71RFu&qtg=Uoei(BmJl&K/kr7u[&m7eq95[,.I$m/%FoB@-q]B1qTs$I*-gs.mps[^6o:=g;T"$Vdoeb3_P./o>Y4Kc#9<#"jI<ePISNE//EgjJ:F\KP47)F/?mNf2cCX[SbS^tG-1JUT@%0lR#OPa53/S\=GKjiW)FInBX[;pS>@SiB'PPn@fN8>q;/am81P=]ab0h)iPAB9%-1=Gp62f8eA4ZEc>\]:HJ1:\nNQLUA,>Y!M;>%QgX&]EOo]W:M8k=#@o-p[T^+rr`GIe(?5:_[PALOcNO%cSbM`]SsKB?8T(qshjcd_$![93#0k?B/#`rAN\HPnmh-dXCYQta-,OEc%-Y%47nl[J!Pq&\9R^WlC]ghhATM2J@MTY1jX@%()FNY'+':SK+012jml4-K]UifBDqPk(l)PH[%BlD=Y0SKXX5'\7b:<Y,i/YTU:%<-@"d/Gpd)bF/U>rdsX>9Nh60#u`VX>;+J<Ai)52\/Q"q<V]Cp4pKJ:\<IHY=phaITZAm4l@kQ.4P8j.+h<1&egEoMPBL,&$eRIL%>)ds`Of9#;8E8"(:fm+Aes07l[.SU2<Y_HrjF'F.Q(3BhLjMS&`qhZ4H.B)*aWb6E"7Ac#`4\0h(_OTP@\NAn-1-(#IME+qPHjXk%cDR-?Je9oQ5_Jk-T[+WMb"b<igaa;Q0T-ddMCM*3>-n4\aNP2(,C.9[[kUqE9W#g+8n>Z@N7iueLfUIe,G;>OfN7;Q@kq@2!MKaK%FZ<dOQ;Gse2:2S#C\,X)5h$"4K^Qd.b?no",j,p1@,cClq]tE5<XEP&bupo^+qh(5Zn./DOm:"g'p<j1qn,lk+]?pSZrX.s8a]F&%Y7csm5U2bnPG*D,8cA0\W=rs;D.VE<_ofZYY()bQU(67Y9G=r[Ua;9O,4^[W/+]RR`3Y/Z.MYtZ[4Ym`jdR`,Yb^dW2$NO65\j:`%kbEGbjVk@E`fs!eAOj1C$\HokPa)6i2IUB\1S>t<Y$:7/5Tj2A>J'QI1=W+9lU]/J=\ek,e0nJLS&R<3md;Da9ZiqaS"_%&0<:%s%[b4`q3is_61n8@/eIUsJ8X:oVWtm.`lB4`fMrdSk<CHFNb6uLDlS*o#&>^0-O?/SW^80YU0)j4t`.Clmo/]O;Rj.tD5%'iibM8u)%((_Z6mgB=s+=tC86<&j_@d3E3pnC3@V<2dF,$)-SNY%=SX.6&#9d9rbS$K+-2A=8sKe4c)!O46^9GnLY;V<<_TT73]c[6[d4H:c3%8Ibj#RK0JC!5#sSeJP!R<'<Kim3TiMOd(IaJFJ5SJS8SMPP&:4#9H/6KTDf6j`Q00$R=*A=^YB'9*r2WL:/VS['O;o)07nG`N7eA%5+J=(XR[78+HS9EM4+"]eiAl]q4P(cNZFgR>sj1BZVM6G^%K6sB81.2o$EY-g<5+W8Up$:J=iiKPAm5FW99*t?Y@%SVDGW<=Kh\4%BjO/K#)##e#/FCL^%(aroO*s5"_2]ZDG,rq6!.kq<:!6k-`c$Uc>=C7:"V-2hYD9fe,#MWg^$oi]I0d.i+aVEMmLY/<G%);e4iI#%/5597S+1<gQr.p<\r;qL2fP[+[=sAeRr2uCaeA;3-2lNJ.>=C*91c,L)i;#!fSPV^&/L5N8q)D+c?3[Sar2)YJ/Dbu-G0j(<C>>S%*f$t`OR"UIS`WAU;dln*"Yn`XZQM_c1CFif9A80<d1dp<9qs/mYq<l;&kY76VI0a$^j6tSj\)OCH.SNASjSl+Am>R<b</(Xq?FT5%2cquB,AA7mB@%h#M\Rb.@p5^C,iaSm/`T:HD:XEPn%%](J=%AeR.]5a;Jg6p"eFI()1L'$Sa\\o&q*kdRE&lK7JF[)@=hurRW)Es%-A$dQ'@c==6=m\Kb^n.(J15+t9r^gf]te+2d&1=6VJY-K=C("NAS4c>@CS#8L6ZZ#oo8Wi<#ir_nEk6WYL1o89Qc"cZ?-1_)8p+n%ieBXZ_f".ZfIWDr`ghPr$Nm8b?81"i(`f$mDTEU;&KBB!DjAI!p^;g(LeYbe"gMe&OW3YOr^V^)^nBOPgC.]`<ZiYAQ<iRV?SNgn%h1h>;DNdSZCLOTc@A7>'^25fXKW)NgW?M#VZ;V6f-2\J%J=j.V5n[)\W2trf@1T6JQk+KaG&rCk4eH/k1UNTepUEN<LJI(>R9m@"%1u7'0HCf_^+``dhIb!YFPGdA4P:iolA2()'-E4Fg/A=k"!7p7^W<m$TBD+oi1G#UG*D:+)"(<CGpd\N9Aug[2pG>Wp(_3c9%ZH@_%#2.F=C.W9,<W(=#e]kNV>OQMQUcha:ncAh:,VQJJm#`W*g&tgtrJ\LtqE#>tQV*ZqZXY]g<l_KjinpHe7GF-5+_6c\(dMguPLrrZ%^bX$<!\=Y_&!3Kemgi'7kaWeV2=M-_1IUQs)b)%Y'QaaO$'foPf`a5+,Tt[mL^?Sa,%Xm^o#TBWd96b:pQ!a?(nfYcVWtr7O7kWR%6K\Aj1GhFme2kGl&^\TH63(P1d8LFiQmq)giQ9FY@2pH=Q&`6%!VoFa4VUM-f`S5>VV`-9TnHFB;Nqe;-1?@eWFUn3JgBB85c$OY%`JR9a82h^Y"Yp,E#Rc2UWj8I/$DaN_M1j.e#Fkk5;U`3SO.:#_@o]$s]]cDHYKE_F-UB3(g_gdE\iZtEOg(X@Gq%j<"(5[;Cao8(%0a*6`0^3V&TOLSR*Do"QEh\a:G"($FLM&XK#r=O3-HMp!>WP]TYr5"?cJkGh;N!4eeC<QT#gL?KN#KuHP#PCVC]%=G)X*Ri0KYTJ%C9eod86acnBbl)^i35/7P=S=0=u+cN#$<<aP1=*Eo_.K*Ws4a`DuC#R7g,B(XSR-GO.AT(L[FHL:e&c\<^u;`[%7,:BUSP/C(p;`%K9na,&IE8TXS/&KdV'@q*+beJAojn<EXG0uEJ]qkPPWU+orpedY)"-Bn,\?3gA24[]parD3]D_12E;7e@V?u#WR]n"7tt]\;2$_/%bp`2Ui-)t.b5n+FRrJ!7U^5/!GMGeBEoc?tm=somE:ioNpM`Z?>14o/H'#n%2V0H5G,qp$VB^8[+g.c(i'<f;q`-Zpq65Mm8=cN]%!(OntoENG5Ygl\.[B5E'2pRAXU?CK1G&^<YoW?b4^*[t8!]uHFF*i>U(-<*%_HB[KX?IVRdnp60.n=EHVGN9`W7V2RMtbse:n9]-%KBnmGN8lah,4$ErFtdf9_ngR(@jl)dW"6!T3#O*DUt`Js1:e8d/^W?+dA8BX<++u^?/g(nWiV+?PeA8b.*iGfG:9X=<:3Tf&7!?b%R8;M9fsTA):K^H$C3-#Q*!j.6cd&9CKjBI3k7PVX4T8kl8;2(X<Kk%ZQ*_62b"@0;pGrJMZ3&FQXH7^mXW$d\>@X?k1,(.:Q1[(`%au[,U[rlsE,8)V!ErKA,,8IC`c^C_K5?/?J[&o704@Qs9"2UgMR'Ir9A;=$&W"f&B'_r?,cn$8L&bS8$MQf"!Z_*L29f6o:<H@*b%Nc!4(,-^Zp9kMlN\&U3"p=$`=/@qfY-=:1PCeeL<<n-=iee>@RMM#p;R-^gq*!F@N"9K8LnD5m*o?Kjbf0u`%lSNbdMKDI*.]oXL%"q&KUZU2l;oXD?\98d_Va$MT:\?Vcb/`U#.[h-!GBjs`Jg/]IAd%g]k?-($tOT!KL*0QlG-L<sWYl`Wf\hiRV30LMjeCKNt=ie<T%3hjnh!p3)!&fEVh%+gs2@_5Lt,RUMh+OjofLRCmS3lkM,7Z;/TC(Z#?Ff^H0Hp2#N?aJJF^3(?/gjL]Loi*lpdZs*enMHT_&c"tO%,*\Na8h2g@`nf"/NBpQ;d`8?(Bb1hf_:bXc_lE1RE=DI#_e&0OVU!I-VEKH+=.ccJq,O<"c5<cPehs'e]P"NQ7_a%W@M%Um$Ws.`%<cf!:[SfC`W_n%Ti8&pNA&5Ar>rj(4;4TPs=9WiQJ6q1tN!i^EMlR!FURNi@,HjHXdF(Z=`dl-reNJb9,hO[O-/GAqEg_"s:5I,W%JA?2^Qo]4R:"J#*H,8R1i7W_H6=!aV+B9\".L9q'\FVApR:5liT4--qHDLl#//D&0/t$A+H]S_`NgQGpfYS7TQ/th@`F&u;__Pia%@uD@^d+1Q'B/a5l$`X"g%T_605MJ#B\,SPY!O"1(nW%aH>HdLQA;<*2q*Y@s2.3G!F>lVo%lW#k4%&b]Db\,l.mhN>`%hrL91dU*%@Nb64m]8dT[`jU7o,;eCZd7tA4'86k)p0%-gUF%9\d(s@o[6@/Pu=Nt/FCa;.cItD[FKV*\O8gF3h36e_YoRi,Fe6pMemh=PJ*"D%FPk1%N@6+-W>&KMpgJVF!%QBco35kE#)?)s!sd,%,h+M%M]AbYU4ai%DDq5L=d^-?B@T[2[RhG>ao[TAm053A=ESjf)m'f7^H!KF%W$I-r&ur'V8=V7hU:\g5Yu5,l=?.u&n0HhKdL`13l=V8#YUP2kBF)W!13,j\Y3La.<Uo)8AO4;RYV%Mp;!A[co*$p"WO$frf_Pm'%eOrFr)6Od?1&i6oQ$<7AQ/6eS'pC.V12l;F$SnG6_s>p:-M8'qo0`_Q.*!fZ5]FZqGE[=#YYs/Q_oYMm$N`ibAf`pUf5>Hoe0UZ\%?FUHE6cCf;=4KTK1f_a5UY?@QjN(tgBku7H?`HaK`]optC26XF8IYpRMokXk8Z\Ho1oM^[+!sB'DM%R'[JnjAQ,&`J#2sM;WpBL4%.io@nU,+M(2TgR.P4WM]GWRbESkUCNhG=ebF+p(^2BQ`+Bt=VSXOM"1=V59aJ^=l.d@D1sI2g.[KPgrecVghkA'\ll%c=/2P@9:c%ambL=a4ugBh7$;%+00*?A7nDeOe%"m"udG+Bpu9kl"9Q[`:W8N&@lgYoq3X+ZW!iM(rC)d@HBbqC>+UF85hQ/J08Ztl5E<,f6UV!%`k!)Bb?4\%We*7%AHE%R2MhGj]99EN+(.[++iO^A?bUQX5kg_\9:2\:)D24pXbbNDJ>dTR@(\H/'sZgR,-3P8Sk0KATI)l:^8XT_%5pZZ3=1XqFmcf=7gBeo-+i-?9:c;@"dNp\GOA>JQ@["W#=MLsc!O;V.9Y$>'YmB&Ul]/U!:KV]IFF=MVP]n?"r@RmI#,FHM#jKSd%(.Fa@'j<#REN<hp8/1I8AX8l(2g"o%a@AMl0Oq4RTbDMGKkZaAa"s%E0EkI%BRD4(5ci6K:!F6r4sd^pF[oOrA#`Du]mc(tfp0&b%`g+i4!Qk>o\t<!/$ZNmt8_;@YKDq2LSWAa,%$Rq6jd<;&4q<s=3M_6DC=u9NiNtNtHa*m1`nE+N6JoYMR]q<t3Ap'jgP8^pSPm"i%J-H(PE4@GTItGaD<ruk0%@Amse7=OV\&$f*6I8ut&$pt?\r:80@A*tE]3eBBB,k,jYS<pJnH0msfH\Vcb]M='VP],c!SW$\_lkms%4XuQYE*]G0\]`fe.Z.7;6kZ;I%^=lPQ[Kf]'%.4j!@(/FD&/iH;-1Sa5sJRB'o4_K?*>2E"[jfa]%cCCQ0Q.&ZUf!$\?CG9AlZs.%%7^M$H.-OcObAGk,pTemai+9g*=eIB,ug\A$dENb+\cn4pb4NEk/\q(1QfD/_nN4#'NWl*R5D$(j:RUQ4SmTcY>gg>:b6pD`i3,5%)FC6Fn\NbIoaN/Vc*[3G0cgKl(`=g'L917a#t,L>`HN,HBNIDU1SNH?H5M<E3tR9D/e<9a)jh?gT^_PeNHB&];RZUB]lckK&o(:P%Ksile)[("#.*0;<o39@t,AC!UCKdD\WZJhDVMYD:_<)uDdpg.bQa$\DO+@lpA1E#D3GDS'R\"GPV4bsG0`S<E2j^f7$G+,a:iSC,%ACa#UE%`?B(^*MKK2@ahLVO1"$n<OO('C%?[Mi*[]!*#.Dp9%"f>,*/7'/T<7HTOR7on:6XMN%7UAiX-n!Je-7P&9'ZOtq($"(+N%&].E3U"^TO0OO=(J2YBS1a6=J`+19*7C%)8F6d^?$'XdbkW9t#\gAKJ'ojCH@Ppq"D]RpHQRc=FE0\9D$Pt7d?u92cCkJ"(b7uX3%!AVCtQjQlmadV6O$rO5iR<+3c#'D7_%mM3MJ0-%PT(FX**+d%W;a81GM.<5Z9ro>Y*jpgp@Ser9K65K3TX5+6Ra!NM#8h3U2B$8T%VMgF1:pq"iDYi#=j-kA@HA<q_nr>:G3VI"gqb]Eui.<[AH](3>+ac_5H;dt8"+i]uAg'Md[di9ZmBT4f,SW66"//.WBC:__YFNa*%g>?pSoa?V)[ssb1-a<`DOTidrN+EH=iZ3DC2X2+rONBLn.`jO"W2E*"edtoc137#^ku'>s%AZad$-bgYMPuYLLI]pR(/BSiPFD+D%fKSX84K289g!#8BOsQn)+DeL8.[bSj:0Aa^o7BO1KVO7H.O?Uh`>*#h"1Hc!-h`E"B:Jf>fle<sH,H=7P]-k^,KBg>,oeYrZGqc$%$#_e_%SCsLo1TJ>_8JGai=uC]5m]2(r,X/H0*i&l0?JEF;QP;o0^VEKJnP.cmPGL0(0C6d=J#\mS6=p96OUf@ZuL(5Re!s()VrXA%_%*hH<NNh(=V8>YM-`Kb.aGIi\I,S^^)^\h#a)?Qk#5`lo8`b2bgK8?lnUI%`0_:D%F]+=G.Q83>GOQK%:Fn6g)sH3oH50n:Y[*5%7:Y6R4,Z\7\h.eC&5`#9M+Otk3gc^5"PjNS1;tcL`n$9[7AK^-!/_ldlPLAMU(J]H@"&NZ4/tTuSVIPm:nT8T%r2F(K].ke<jrS&%3M``n.Jp(^aQf-QRUp>/fh]m]Fs;OG/HpWr#)j!.SUH162**7Li/7hK%8gXY6(K_K$l8\T+_)sh(Y22)%p.AOjN&`;N%q[a.bQ*K%0jk'U!Fl/iSkedsmXA>U=A#oRR3*Oi.i&\!J<G3Q?lX8VR^GC8L>\)'-PdkO0VD9N.1K-`7(dS:$budTPpGNQr3_3O?Q:E489L+>%r5SX7@KBp=iOs60[6h[1D2[$R'QSG#k^u?R0f&'o)9t:!'f_"SN.W==)I;Ge%?27c2*B*;7YAUqDcdm;^p\;=3/7792d&0C=]edZ%P\q/i^pb%XW`&L=TM]-+RS_X<Qq7o+(+(""h9I3e]WrU*KiW#!b=QZ?qAL,-+;u"20FJ7-Yas4h_s*gN((_H%)q0.lWt4T,=DYFp%]uRZNFXY8NN+EB?Q$]O9fPH">a_W:ch9ojj+Mmn0b\T,:adU-#<j;8pk):iN)pUEZ_:_d!I(ecrk;QrpAVOc-J:*&X3&ru*NFF^-%V"nVA%cK/>IUb/N&_e-+9[/bt;oMl6+[=Q)c/USeW2d`rkQC4!_1T_TQJ!M+W;5/27;Xp0!EU+Z:VI*AKC3S=HPSgfc&he@:OM4'%.P3:EP>'CNbb(a?<PW]'>"s=D-F?hd_@T8<&tZpM(C^_;d7hdqVDd8qU^E,4FrmoC;"d8rfL\E2JcE6sR'"d?Wi[F("e3n1O0412%c\%*2Z9\V1H#,J.[Y6:9!Gp-4+fr`6c@STu,g/gd0jla7C+eP?5/PAE#@;"PKifdf\(0jlp`;J.Yt"TO\ejL^i.td4XaZkFk1T##%._5ri`6>Q<WD0_q9TckXLs9p^djIm5BTo$6U8Oa`6Z0kW_)[qO+Amhe@Op?qVOe\:MjkC>?0I*4+ZP<)$oUT+Too,M+u;pl!eW&n%X2n"R*m%t&Td`*=0WRn"(Ct4gMQ')a=&j[%$o.GmU:-i@NHnMrmE?RZ22O&IZ+(:kV/cl>%dH8tNku1m]P9We4U_AhBUY[DQUdN&%[Q_.;oeD`\P/m5M`IJ9jY[Ec#jVIaPlXN6m"d[2.p1LZCdG*U^VL0iO9NFQpi!sS@-D5T?'54`d=chhPkn<PXR,=*]=u._qcPlcm%e"HIg9#mW5T4QKMfN)hG@<HGsLs=Y(=blCIZ40+>;%pr3:fK^-W.CHj5tt>^@$m+W*atk:2;$P^Fjo%-7pQGkCrmJ^$Z8*-XKqq+%Q@qLfAR!'"$bWkN`V<fbNo<`AB/Zi*H!JX20nL]j\9&0!mQBMr.j)@t:UdKId_qV"(=.<j2lF;F>:s\T_I2kEah%nL0IK(b'!j;:%0J4Rs]^olK(=MZ)5R\Yn,%j#?b=KH]PFdjbl47@iL*P<C0"+TCaQaQ+&im2Vbb-TT5h#AEk#Zb,%K_5'7ni[jCU3)ANbA7</KElo%U:qep!2J&+rNTY"oLq$!/YK3$QZ)@dl]g\g4G6Eg@;\c:Gd+gG[4UA=Z$@$;<>tBeg.&phUS0P'O#8>YW\*9'haE3(Bt08:g45:F%.hcr&CdRPN"4@L@iUWK3@ddT^QnZIZEM;!M2Q%DACnRZJY_CrT+GWO+RUM`^UJe%>S9?4XFJhq&L2Fo[oHT_U4qSG)QOl0YK!Cf-%?7Ipe#fF37pi/?(a"q0;GJoMji"=++'/@I(P(kF:A4K8]#^'rL(HI$R,=VQ*Co@jMN_peFF;F$a-;g^JHPO^ccsV.U)<3hTjr*^G%_!C$/G2JC&-BqErM3#b=>`jb%N.\]&I&P\)&q=LAj++rcG2YE8"g,(\VIQ"*LE`U#5gDC]&+N!pasji<3`ZTjrQ1L]N*+f-DP-&*%*(5(g))D1s%j%u-c&61%KXXW=dW=0CFu^]g7L(jpf^q5e/u"0,SaD][7H>^F+F2f&b2]%sFj9dIlWPpQ8:kp&VR6n@(*&fJm<5KK%f%-o_fmEtKTc\Y10d%%!JE_A%C9ltQSc`"\#r)Kj>$,F]qC!MY!t/>\%#Ij<%)Yl_p1?O%r+k5EWRl)%%\(^i@#@"8Z]"Jm&QAH*%;iqPIak@Nb$_9&QF:#6MZrP9$'37&t5Z>Hd9kg8ZI;.0bC2]O@2UZ!U`@,S2^\&or92OlgPV]![j^)WHGT<[95aD%>51+ltTruC+%&1htAH8[<sA]AFE06R8XpHJ5\9@BS](S_K!0J,P43$0HbDo/g8Q5&c'WcT'%Jqb.>&lQ2IP!fFO.:U0(:lk+e)tTK`,[l-<,Wmk'%@,5ted<VJ>lWe_"3S\&/&*Nn*GF??_[gGp!ECR'@cJ]V+m=U3sIflQQZ$NK#mCmR`p2Lc>cb#rd6L6mWFTQuQ0XqdV4c;aJjNWIq%eB8V:*;nQ:4@JRmP-/n$LU9iJ+b9PdqZGZ1(n1T(@M((fL/5<E*TUZrS;.R0KX5l,)n+SE2pJ`FaT98YZ@Xb'jU1G/Wj7@Pl<%';%doM7ALQ&-sI-2:W>?(a%X,9EG=DK..$!E"H#GQMM;5!n`,nH`42igf)d1oBK[VUU>'!&rTi2?9HR]'q>\E")B!5Zn:0W:io2[l_R%('7t12IOCW:f0(QR9+5)Z6:j:epu$6[HflYNE=[9*T7B"a##OO+*M1aj8)*X3j`7Wnf:+2JDd7+!1f+:YU%_n;o+pVS7YT-b"2@d%kQ[sh>:+/h):so/\Hg;uR!Z&I]A/$Mh<,g^&p"S0.HDQBRPZ*/RZ"]]$^*kZ@_pKIgk2Gp*on@nFe=#bP[3^nin8&tpL),?gk-pA%Et=RaR![1Q)3_-KA#6Z43<P6db:7198)tfe?tlN+m_OKc)$e'&G%<!3EY"IVOF+3!]A/%8mW/o!Cfd_*EY"JEb<8sn_q]l4=i`a.%Q@80e+>NV`QU8hZX[_m^:d_kMK2.A9(3F<aGNb/4A*uWq%%8W#\Hbd\k8l1"T6h,?bWY0d2#!YEZl?$O_pKED&,MA/j;n^cg6243%o0e(>g#jD-b<bP^Yh7D3QF>+&=P?(/_:!M;#>9;B7iSLa\Hchj`nZ1m]^d7po?9Oe4:G?94m5i'J1ZPe#>5qT&!hO/HZ6pA(C&*)%&!jfQ4]lN1m^WQ1DKf;c_:&%f#>7/&4\12[jrU<Q*-2XVAY4=R/Gn4TA_lMj";5bd!qV(lrgfpr,@J_#8B=!hTG*t)ouaS`_H3%U%gk4+;1%uf)K<_Q?0_\sXp:1E6n7QAG1oKFQN8e;K3Jk9Om3f67K\V3.;X\W:Q@,'Hd&+O"1%0,nQ@+d@YiL6#6!AENgk-mpj;ok<%nlElWqqQfh4SKt[R![2pP>$I4YN?lWq(VQ9Xc&KGYiO78i#qceZQiGVb<6^<C)$&U&*a\I4fE4NM11h=Ya!&\K-_Q#*X!7"&!m#F%ceqYO*Q^I3`=AfTAW(0.aLq*gAC\n?&gU5,'p=a'4ogD78s>?:0/`(p`TEcRh^1qh/6a)39Z@7A?AXYH)NopoiX9D;/;'9g"Dc%^%$i'jd@Gg-ukg')f,BLC@`rZn&c?Uj5nQq;o*(f(HhL@c][.GYkJi/DIL+#r'.Oec]6:c,'8JgoVV+D=B8f=oeb3#H5U_>5hKdrAo%0H^Z>i=$=)Oq?Se6.2"E>"GtG40hbG8WNO8V0F=Jfi/]Ee6n6E3O':mhSuV;`\A;P>NXa45rN"@ftT"bpmmY\OPGpV[a]:KUDu\=%D&^,1(J(]B;q\#((n^HK!t^T@\J>`Ll$(+P`@he?OM5&hZ&kN3`u'K,HE&(GB1SXJ:pU<!>":p]2J^Eo?RKK;'WPB?/4bq8ZWRn%%7uirmD=Jtg3.E$>_^b*F1ZRj*9Pi5a)>m\_h\EI;HWdeHB&XCF/8h&i/$#/91o(,'n2-IYSc-eSos=jRZ';a2A?TVp#`H8V641ZZ%p*j!7")e6MW@B,na"mLuJfu:a@54WoOs1-Iec:M#.AWBsCkAf\XCWDV@p;!4=-Z`pc\e6!`l-F!!u4Lp:eHFQ7HUeJ2iS+5'X-k<%0E]T*dAY98dAST[__Qm+PcCZeQ/-<i4$-^!4HIt-Jp3:`E71k>7"'@c220=#<:m'k7bLQDY[Ro+3[<6-Mh]nQ4gJ`N%l6.&7#i!T%A/c*'Y8As(:U5kX+kZMAU:Wt5%l:%5$(Ml;hBt81/-B65djV[G.'Pg^l3[jNc]h^d"?_e6KPn@?79BDrFk7eu8Z63e`@mTmQ5Iuh%@)E27s-=?`eqUK)B`I_&>NbXt]'c734\L>6fF9eVI*^aC0=sthlOa+i0^=bmfkT1kDk+2rHQg8UB/ZG8#nunZ\S:\c<"k^n.r<10%>3nT^PgsVK(C2_J>^S$"paue\+8Qp1cT-iN)KH:U=3$\d+AX)2<S^)%8h3#E^)usg*JW1MArjd=W]5`eD\80n@]C0%OsRW)K\48?%b^6.G3&!@dAn-cCJUN7jP7sHj2A#.'*JR5M72Su1#P<#V/+ZVG.L%7k9QfO"IT\N\dqdPpOF`/O^:OiB"drem2Z^0I#L$'R@a^o,%+"=Eq6PI<ReD8ahZK7Xm[,'B'm\oVVihsBPMR6_\SR`FgFi!pH%si"P0Hd5@"/Z_We5S.((#%HS@\[DD]=Nc$om9]ZG$#TC[kfWF%HCPj:1kDsT:$dVB.D_ETG@I0<E^-XYL?TXZ3a'=W3q!jh%5s8_ZV%a)bn]-:p/-UCN&)JTJL??1=V,'m_<f?"Y&7!;@p4G'U-4I$%AMop"UW*&o0O!!^fPq*mN;J-Y<(i)`]=f(:NjA2tMl5*(&uqjX.B67Gjj<$0RXE@@>OC;0Pf:BuPZmE174QEHLt0snA;I,1PAN^L%H6OKA\f%^c8Z\dFA,!<5JDQME<K:S!^DSb_g7+6TRArQ"*ACneclQU!9Nh"oA^XKo$-/MJoP1e,4\P#U9Bdp82+^SQ`]`rh/n%Ek%Ju)Nd#K1YE(tS$pB>c(bbA0UurZj^IYL;[q4](?n/fU*'d5OhUFWA/!+\@Sr1ajoZF_IlA;39Slo\mVlJ;E,)B>b@Kk<a.s1JJrZ%lPS2(=>+.;!>B'X*CRVEYb"XLOKq_2&)T>;q:/4t4/VsTZ'-m_XTASL1gkC[F)]FEl<,LJ+h5VXfO@^(&_lO\28b%FYQU^)[Y(r)%H>n!qi+?Lj+#oM5oRT@i7UWZb)?&@'?jnrZ-P0O8XV?>R5&^s3f2.I7AS+<N*f*`acQ5%_JXlYa$kQ2VW8#96A;1itWLr.Ieltm9%ZPe%:-=82RYKu8We%:(h<dXm`*H=W(3)ig.NMEW<hP1J]!Yja)9akNJ7`OE0l,g4@f@4fb>r6JmDu)Ke=jkQU>i27aAlT>*j@\(3%i'biFgmka4_TBJfgRU$D\ha##F#pM)H\r-__PURjRl_`6%i[5rIASk:E6m80/-hD?D2W93cSc%N2Ks*0he/,K/WD(;)M>W3/W63I%\N,]l%\QeKoY&Zm:0\(/VQF>Yc2fe*6jGVtV<VO?1kY5[VX.*B\oKaS2)WoU]tL]Q"sb?&QQ_eWGlq-ueNC3Mo![P.PA_KT`H#]n%0O%VmIGdk<7]'`JU0Y7U6=rZ1EtaiU/L;3[V\PrH^#7d>l*J@"1g<rrJ'u`4_&gdZ#[oI8=E"CW$3>`sS6p5U'f8=BlRlMBkuVO=%GphFobpi0@%;4<mlBS#gWmY^uE>-^(VG`1QRche_0uMMgmGof0_hLad0'k9ac-bq#%:c@@;cQ09M6Cr3^7:Y9,?R5a4j`u^,Lm/P%GSi3X).o;t<kX%cG;g`bXFSKe"DRln?+7pPF/`%X@,>c:`YBBrV=[`t6)%4p;<)F\=)jps&E[a1IiL/+/O4G,Z%>',Nf>XMX7K:b%jac"E0dJX\9[c8]1fXdcpM5c5XU$>j"C%PRB/(3^L$%]57W8&1V,Uc%(u[!*E*(rWXGB.sEs,tiLpYfbbr*eZN*RS3bn>E[LMPSr%OnHt#`l"'[beuE3c<3M&OrQe%<nes'PM-;+r-\bC3@Lk;etA7b"HjC-:B;jOdQT"*VWm+R%]tkO?r!/iNqR:iI4'5k4R.anaiPLf%AtjBXk*nVJIh:'#3"B#CkH#3H(Zag.UhWVe)_\<Q]1(ScXB0sFp3_.KS^M<gbFfYf'M?lACVVdi?_5^@V-Mq4$Y[QQNF4*X\?fS_%e;UFEhViueHB!Gh&roePZ48f=JqgbiKXNR2DjhZT9#a0U,<-tCB>ipXcEFhQBVS.?(90>*+;_KohMGfXi7gdkmdRNtn.c(`eRCCR%a\,:EP;SrV0UTe3M:<$&OpmUB4do4T_B=%rJuNWJ).CiQCLH^'`%ntnCf>VDPbVh1&gHo8]+E0RBR:K;mV)I7]AcGBAkoI\CYf`,%qNjaRlEqk9C8<$;PnLT[4jg9HKd%-B],G;G?`bXi;WNt"/2fY!"-IbZao[c:@$GC1ZtI8rPSb$84#W>Ho3OiIK2uW@WDPPY0`q;0%7L11n]4<?8!b1L'QngNuUl:q>r5.rFU/o4@TflDF2UJdBmu/GG@HIe,R@m)fES@(ZCpT(:Y]7".r2dW]fg63.c0BW%kD37^>cVSj%>hC]J5'K+"mTPD14@+)p$(:EL@iT'tMZ2+Z"$]f]`r*,[*ZK+Po9jO"k:I54MA9X?0#Nd4#M1ZQK53>i*aH'RIGa(#Le,YKbG"+8%?/sW`E`7_#7n%kT(So5h2]4HmI#q=o.:&D6IM.=qB\kNl<ofGe@Hi@10^F^/?]Ja^48C%d>HO/N/k:9#``"B/>!2];[$'<HpUlZX%2@gs>KNPaNCtL/ZB5%B,PFSHf!2bGc$'?sVY9%2,lcgI!+:RT0Wo4uN^'4SlBnP=^mXPKg_)FN\Ltf-M`JG]H\A7sQ+HT8PUN3B\%\FMNcL7)Hg,$/>A*ZW=+Rc%(TG:06e>h%)UiN9s)hMKGkO_C&b1a&)`f.]pG`K_-#aOG=S<A0\]"M7JK;@@(Lj0^&SD@rA%`t-"D%Aq`,P7C#7<"rT!`qi'%>EFhD4=PJ[1VHAi(Z/!5+"Jo,KetTV`#nmVPS>7%I=a)Ilnq%E4m#GdV&MUU`Z<k*7,JQZN0X+_'7IN;9%7d(OEjWp.>6`]DsC]Z;d)l-W!5[D=4riCnYe5\jiR49`2^(m0W`WoK>[YMH!W\#OB+$q=-A^)&HKHXc#(IXdI13337X','e<nI`l%mm3$T>PVsbRN0<PRAOfi6Qlc3e"*FK-q<h!&RqRLZLrO^X_af%[gnI\:IQd6]l03n=2Q26<DpY(>A>[cnDZ=YU^l9"-HWit-3We_%R)l;RWiPh3!d`7`8bJEfFW077X"Q_r?FPS_dsTT-@cGP:XOFZa&LLD8@\A[Z4t\<%`UcY?dLO2#q8llD`)Z!fQ^A*6Prb(fMko&J%%;DPfaEVIL?7;Z!!j>?2k;5G*=h?:@'%dn8JQf#oj(g*mBihLCdnN?e_L="U3b-Qgmu4PS90\]+MTIL4P;4.&`\#[g9'-4(=GMe'%8%,[sIJ#^kIY77O9T2N[1^t;IBaH:.gtPlc*sBgY3+Ki:;&5;<@EHrr7U+6?.akE=X41pDU1s>dK5[SCl88CDARXHKQTI,]^gJ/t%ZdUCW/c,TK+cuLV-KCta7.tdNcInoA'/NMSbb6a'26mgPlc=Rem@ET+GJLX$cac"MVd7`7]M(<g6m6nUedQ9F3*>lXgKR(aE^^.*%F";s%/2ahgK(t(UBX0<ND(]MMKEiC4IOjAFbdUds)M@-4&sn6q0=QZMZZbDB.:t0Ebu1Y^&lQplAgq>o->UoP*5U/s?[?hN:PdN*%nX0q=kW>n'CGNI\ZA'+]]RGU-(2Ct9c>>9)[h('J*R#:nATp;`Sn-E6OCZor9/:9?=cuq"=)4@q_Y!E(K?9_SFBmI/\V0i,b9brX%bkmJCQZ1hm\R8m1jhdM]1@Mo9R-"_`'tMQWil_P#1cJS.R'k;I1&#qJ:lQr4e.0!ZX1Pqn+Zlfi--u/9JsMj\V;W^k93LMUlDYhE%@qo&V-u19CX5>[u9T[tM73^T=R'&-EWRaeo"(.;%RbaJcF/7WOnV!(.(RYVIs$4+S&Wk^/>qb?8(%V7D.3q.fa2uH_5W''6hR5'7%&"ZZUR,X>Iou'V#4=dS*79NAjS42[4_YAjJ\HqD]e"C66\BXAlKOA1<Zson:Y.iG\;`qH;5*@9^O^baA>ET"1H([O+\BY?#lBr3g%Bk_F\nJ*^Z#7B!2[m"1qORs"S@&6eBf/a[]CH+Rg!&:YMCr$aY>W9oZ>:g<hH%s@am^%ue2O:ZD>^ZUGH2J*E/La*OC8Ta_GKd<`%8Bh4R/bOT&?V-puOgD-e(4pC4M0F.qb/&,.>*OXa2'tLE9G:m%OA6tblnpXF"Bl@0K`\Iqe;T'TFu]Q+.&Z5%,IE]UJBD"I9cg73%iq!-XP7!)I,Rm'E4UP-;"Y]a85Z9QM/:]P;DRLtH7HX[c\^([OD#2?k0^1C0P>jN=R`gkHYNRPr6C+Z5"Dt#T#A-HZC"4:bg5?5A%?iu-d/GIjt**1!-iB;cmKsAK15n[qf@V94H%]C.;eKN$iY+opm[Eo[EUDG2D#jH0-4j/,?2+p<QOp/W^lB"^iX%'K_Z^r%="%ANG%fr4W2m0FjmFbM*mEG,e3k*tsbTt&P?5VMBXDNR+E>do-`5?Q9X]q8'S]QGDoVG@&PC@-M8D5@dIIW;O?\c7fD2<Du1oRBI3a&C;i%8p!jkK3:*5pDarc=C1>:\g@l&3elTt_Jmp%(tQG*LUO"f\rU:YgB7;tHe0\RYBR=CI&>X[:Hd)u<S>;,b)95#l:#?L7-,8/mTATc%NS:C]HOL;>IejN3p-ch?&ohL$^toOgg`oppPYdQdMD*@!_a:8]FoGLTa3-?b2fJmE-=pnX(funVDNBLF*pPhA?%_9p@-7"n0E",+%`Ch;KQ$D,"fd?Qj%prIQ4Qa#9R?2\@aT(JaOX]4'D*um=4LNWi==oru,5)1#:ZgoHAXfpO!LW*`jW&%bnDi4d/lUCSI-.`jTeL!O%oP=A=Obj1[lUIgBA)0I](4O7+Q$Bte&?STGkaF*YepT'ti3(I2N.mt-DP/RSNYE'I`"*$O"(H[7XSI'De)K8E6[!W`(nipgf./h3%\^iKV'J:4R]of@UaoO6^%+DjUTdEl#hO[0W&QdL]a?+tPe*_d.i3m^_dNB-g`@l.`qJ)8B72Z7KUs/UgrmV#RV1p0gos@4<2ItaW%@G6(/aZ.f*]r08AJKtA_)qDN(*!C#qBBXgn1n!B)lIh6Pfo_Dm0g7M0fEl2:KU$Ac34\8fP15J"K\5-Xrh'?i7+?!E,f2O:cM1+i%h6E'$HUPe7)BcIj6:I=W.5Y[tqEU8l71+]`^8'%<bDJ\)cbY\X.:>%o%U"Fk8>1-6IYA,m=4gR+>ejs\De2SXa3Sf\ehXoTN%S'`%.(LM0U(ic9.AIp1j&:^i-PBKjK?/q&)UfmV_FkU=V,qQaWQ)n\n!j+g1W;%;ka\@:qB[B'd1qOR%95\KY0mP&JWNG,9;b-F`6')S%)?![dXuUPW1/VJHc99hbl)/19Z&sesh..j$H#]p!pXer5Eh`mb#"(=GAsR<W59Fu/6[Ju)2e`@@'uZOjL;MZN:>,,IX=UF0i"t(O%EAe=Pc]b&aLqbr'9jru%7\6_);ti50iBj1gSV3ZT!rtKER.)D&`3)3L!'B&16:MJq+C'BZI_:Vs_``r??,1cOk1-oCe@6erb&fOC%k&M(I*<jY",)'rr@>@F;Ep=?_(8$7.>/E*?<mQm7Z%ssY4ioH9f`dO$e!g]TKMihQr7\:aaFGldR%:rq&]U`_Q-?0$-2:LBii?h4%6m6eLY_p(V\"/>Te63P"]]"i+.dCAJoSOl+ba2?S7`^J.=l(C$3<Uh2Qm>R\;ok7m84?'#\"@8N+2-\>+#gaB+G5b<OB/09?BUi@%FqUs?0IB3I8fGH'\`n5@p7t)EZsQ3h?RIs!O(EfS%C;C7WleZ4a0mfR,2/)_kaR_;9gMn4Y\5P`rPuFEfj\pF5"QO:W-:f=Z&ic"%SZ@p0NC0EsE`FYBI"[kH'cS5a(D</>&/(Dd4pd2JI1fqD[VD"66g1nAU6kf/E1)E1%%5U1*l=e=KhnER8TIm#F4KfiL9:YQI5G7>%Y-!%\DD"">3XM3h;$2%\c6p-X.,bKZ+r3/9nOLgZAb+nR"DC?;hC.>[_FLV#Ah\8q!AFog,mY),@1O"!VBM1]V$&=\GI5OkF6QT)%@!>4FG%^"YPd:(#SUX\FGcMZcVN=-$O]ATu1s@jFoWH5jeZk&MYE%8[P0b+RTSnV$V1?M8J8H1kah60i(nl.kQMGW/D<b5Z[k*Wd%8b:-sCeja6V,VDUQ!n2m@O6"3o#M-*0_p)IND)qRL(skaBSM=u;DW&h-+I=FcAnuS[O`M'($"OcVT6jkBdnlM17dH"MaQY>@N1??%pc@g8VfI;W]:rN,D<dg4Tu/lfD_OiZ\8DX&1Bmsd:;fQZKo.>kSaLAjV&F6&J>bBjG@HqbVqe'm[k;Q4^ng#.M(-Iu)gH2,0-9k'%1b92;UNH#Pp&M<<#>Fq+.T5+\^T%@!N\KM)&CkU%iZCm]8T[p57.$cKFL.RaW.oX;b)76l]`TplO)SG#?GjCZm!FaU916"jM4"!!%<2?O:$%_\UID\[3r>#u_pFTp-[bYd1&XtY=Jb_TNm)p;bF6l:KcsVI:pq0F+?4Q*_k]=P(1SH/Kc$4Sd`>oVOB*2#K=t,)(&O>bG%3hP]T0Ipa,P_.mSL4sQ(YM'"5eYeXrE/R,_/I2#1(_a4q@T2%d=69Y(=;W`'FP5L5?j)qTL9+dCfYA8i]/KEf_\9s8@t90`AF(E)%9=kC@[HF4K5sl+iSd9QN+tpV9M"Nc9b*hU[a-nfUK>SQRVN!t"N?9=?77A?Vl1,TZfs%28e`O\D]bOFuP\!fp7U0%PN#2;_kGB4$%@Oa3B3ak?LeOBY05'4q".MbjGE8s9-J&X@JY\N)&VmpJ<*m(q'"R35GM]:s3AT5<.&YqGU-UHs:^gud!F!l`7J30++C)#PBg;KrC%`i3?!M,qKANWWM&NK=5eA$A8_otEFSAmJiDp@/FT,%Lt[,buUB08>Fi(8Ahd=E=j[*tba#1!?s]@(^9_\i$lm+M^l,0pr;`Sj5S9%n<ige_YS%\bQR$AD.B8M7lRBfmY3ti&@SKNL7_a`6q#rH%2]Tq+'c7lT9`Y0k6^;aa"\%`*ABL]-NkD$;njR2]&d.*X=6p\r@DMC%ne"7$,P!=JVct@h=G]?_N?'K(raR<M(ja9N^5Nob4?Xkip#qd>>T,<LJpQen11rFG.\o>/Cn.RWL]sOPi\h&85K";,q,s\"`)LZ0%"SN=b9fRN`!sB\o9tW;*)P&fpE8S9P*5c%]]9"&N/Fh/=Bb+gfqI4MH7GlN;KaFK!Qbk$-?*6mX8\5Z`,6$9@j)j'gS5B`t1m!l8%e/k'*Bg=NL;SXjXdX[>R";rn!T<+\eGRjnm[GpI4!JtjAqB4fA(-6*GH&KWIn1,lj^mB;V8'Ghb.0JVaZc0f^2^FdTL7'c725.F#%K"UlU^lC<il_%,FAp`2/\6sY[0N-bE<X^MT;a2d?LM$6D$-h1eB>au.A+:6&IF#gNb`K&W1JDYH:fG>@=:TZLai5]E.CZfXL2hC[%A&"2\$@KA%N[o)A\4-2<F2c6%I-4XNK"+mp,:`idiB,BTc$HA%5KLtjefU1f4U\o;mPaU+B72_^IHQX#mlY&?9ro]:@(e^IMe4i=%bco55$);Ga(I-;ulTA65.a_-r6f:#O)NtqBk;d):<,JBX\7WeC(6UqWEt*nbl8m7;M9DHqRC-2eS*,N&<VXg[$W1QB-jE'dD+(0k%6J<u5Mr3<Y13p3.Bm,s.B&VRGOW3jd]?d!$3F*#h/?>V-=$tD&pR)]0-7pN-o3?9M/3`Z1:UP=Lk:M%\3im%/5b\UDNF!0U3bB?@%P&FSY+W#A\aVVFjQU1l,IRXrAGF7R[@C3VCB@%n6oCs77F2sO0?4@n:hO$CKSK^&;M/%B>98(2p[6)T(lpVbmPVEXXo3=Y_4T3?Q%,D7k`qBT/(:d%3,nDE6U<FK"b0HB5.+?!^%\S4j#<Cji8^GO@/?tXVLB*;JX;L4)R<3V@kE0t8G$cU?3pt?_M&MXqO@Wa4H4`\I]%k2%!rjq4kDA4UMGR&CsrZg]\rn(-,t7bkX+V[Q9QPLUQ8rc4ILqa)bjE0oaBF(0?[kDI=sZYOA&NQCDD#WCWQh@`I]e?6B$^U0OP%=mg[.4Br04KlY-O7$a2_;qU9AaE@brOWCcP^3"C3RedFaTBRrM3Qn5<,-`<KQ#9SW5JoO?!mu9d0o9'%GY2@hk!r4VTW-6Tdi;ID%=NZ<P=gfAqA=GGA6H=[!Ls;u(,I38%TIR;ET=T2Z+Z_qR>0EYKLlCEUR0$CD-61mS]g<7a[N)Mm`fTCZ5:!:RX59M&"=ORY<p8)Z%3CfDG+f3]@hgiL-MjUN3:m5p[Ea"F$p)'9>%%3d6Cg<2%8A[j'U/,_C*?:jte2A["(W6c^$!G90LP]SN8KpK1$Z)De:Z`A+GcKHV%1`HQT4X#(lb[\LXA-YdWL-D:@'pK>.R.59aS*bk\.JWJ)1GJhRJka+4D)s^h?)+HaT/iM9cqN$q,&4r@#\YlL5h_,$eeM8"A^YeN%Hri]E?"5TYk%WIgD5XF*W0>"-iJ&mW$qrC$s+$c_&JMm3MKGI`pE@]sQfT])nHh49-qfK3FGC/WH#?"(IL#PBQNdLLPZu=+54Z.#%Po^OG*3*JQDaB,JIN9Jp%g#S<n\L=&/]3OF<fuoXp"hA^_i'.@jd_*'7]+)-gb"ob5s-^aUj_IKB=7.2o-"[L5c<:QB*mB-6[Cc@%iT5SATr)+:J\?uf)BAtHM[e/;Q0mRn=!V#kL)iifPl\s/$\!o_/OIUCU;u,IF*Fqa!34Oq$-.-UbT@cXSJe,uC4h*2XAb]9[=BZ0%"kA[H\9>>u$j=FK+dX,E&;"J9S+O8'hIY2[Q!<Ip*jGW]#@%QMRJ8/jq;'h6R'D1rPRo]R7*b>LiE;]7AZlJrlq>BXSA>I\faeSR%Je?Hp"I\e'$KouT3RTuhH3056$5>]uf2C/j5$D'p74TNDQh8lLo1hl5oVC5/C`X#$IbM'ln\of4>lC+Z*lD(i-N6LqZ.-1J^ZQ*M%#sm<&SB$rOipek8ZpGd82"&BC2"asAZS4*YKTjKo7$+]Bp>:$qei]DO&F>)j><LauiUkW,K>JK\G,$=[()_h1e.!Qq)Co#S(t*6I%K&aO@b0G*u]jtQ>i*\a5O?jB(j*'K4Y'=D6B[VPS@Nm$U/OJ3OWYn+nemiqpMOg?nF"#R+YB4INKO=121P5/I&dnn34P$?T(`%;Y%KJcK1".<:HZl;D;Ob#d<F=A]ij"+4Jp_?_?%<;:]_LOR14T<l"fof=gF]9A0Gku*r9egNdVa/\ZE%@dJS=q9&>)>Bc+0cqaP6dB^%Mj\NmTJl-c9FS"%nXp>)'G&Mf7g41'n<s+M4MY#3,rbpE(&?WirUQe-cOrob]Oe<W;i"?`o.4<FgGR:;ZTNVJR(B(+AmU+-9$hU-%gS<g@54!"]<N!Bs:F+S1bjoQaI:.>gGjZlseD3uA$snQM/h(%LdQ,h:]<4FZ$MI-oBa5h]ct="/ET)3?`@^fsF?LUT%D`(TDiQ6"%ll*)N%P[dVF$!(I4\,4U-XeXQ[tE*s4KkcQm,>lB-7]k6;#F``$SegR1YZpQY?J2QaTVenb^PZ[NR*0sBX_cA.J!rnXAP:UM(oIN%:`YdJ#h6=(&DS[l(f#5\>;SB,'/U/c$bp8cKNM<o>!Rh+LXiAg-"pD%CF5*M0V+h@'!.<d^=ereZ/sZj6FTB;m^%WI_6`G.+Iddl%_&^*h6_Nf9`5*'I4#DuAW]IMU7\a_9S78CZs)dkF:;4LIba)Nhp?Mj16Qsu/"BT<h#Xb6qMeBFGEGRi`!j*1lRHLh!g$VhO>i;(q%_CTF3mF<@PQb.hQ`od9+bG]f;8IUe+!g!2C`W]q)?j=rnih>%k?HM3h<,2ZU1j-UXT5HMhF5*'kP5iHU@*djjQt-rX'NrenmFt^D%ftfUW=A]PNar_$X/>mm'%@6Ms,')YU>!bpNY34KeK,J.TZ@LVrT%-dp)Qje$W?k4Y:pg\H,m67/4#7[uhjV*sj%C26eF"OLHS_!f%m*0:T)0#YLb7PE-`/8pTm%`)T;&b=s#e85;@;M>1Xtg3P0W9n54K"]]Gp#ck]oB1HgU^MVC@PBREQPY$&#@WO)0l7&9NEU')I<Ks%<Ni9=2d4@;qmp\c&5sa,iJ`KU=^lPR6Ir1*;T%^s3J<U#]j!;0+gC(,)0`rG@mW9pP/]8LE2bn?Ds`=P7b?XDaU<?M7'leg`UUR0%mXulk5Sk&qT+D61"<_pnMfc'<'A6\kbK>W^Ue7*lI9.Ds6aciFTbR(sWWoXJihFYqQ9&-op^"-_i%c:,pk`7o1l9\3H!L^_n3l>Q%GQq=^cAYH)ik6Sh7Sn;aA?YQhMK1,ACr0mb7A`R>>&rJ/:K6_94jjB,Qrk[_)Jr.&TVW"TGHd,O\O!##G!!)S8.F;aRW2>K'$>Bj%g'cWKrMV`(-`)u!TJA;h$A+er$Qg;bU3+[dFWiDiaIFF([9CB,k_s8^bRdq?Z_e']3cQ`&7eLC(3Od])dQ=M2oV<&:&g9?$;T[=.%:-?([\r':AK[:SO',8jV6`*R[XtG=ZB8&3TdfMh0`f:sh6<01-brk9sD2:t7$cqs3i>FQo;f,Q@i\p#>$%9&e(FHa'.L+1ul5=hH%80!.Q/OCC?63(PI'&!mBM4Rh,nS/bQ@&5U4Eq/-U^5KF2F:&XW>tVaeWSEYuq#6L3D,?SgN"lR0R1Z^\#0^]r6:*1d6g'E9JL7cg%"5Plo/PJ%cY'GmlGoe]`l/[akn]EtC9_u5*_9\.Cl=LAC=mt7@XA4K;:pO^*XA4ep<'QjIX^d`2>U"!u.cr1-$K^YC)[Da[HV!%U%eq\QXqEXeKUV*Ff^uo5hiFq5:QH5'*M1;JIOpA!E]QoV"rO49tUX24h01_8@-++K6:f(W$ART,kM]>Mf<;"oj_DL@GP*=GG2LQc#%BaW+niDC<F#h!?+CDt+2B7l.B\&@Jh]E`fo.;e<B1e:X%(4GX*CDO7/Y+6Tt0$.-t3X9ZobheN.KOsikhX%Nj"NfHoI#e8S<>Sg8%QJ"X/3W>F>,q[)M1T;FKE3fb1cRc8m,lV._^OXDG,)9-h*MK##dk'1%Q%>#_eQ9DaS=gN'/KC4m%#!8S30F]^Bp`ech#.B6@0&7q%Lne*G+B9pH3GJ=2p(HmsZegn?o:nY[c]1gRIE?q+a'GOU,i9ULDd(T*DmIY#:iN-0-?h"X2I>1.'V;8!>tJe;jcQt;R;MXkGFWAt%^7.'KS[@PdmIgEt=#p37K_.cmS7AD,,'CJ/XX(ho>^<7&^T2MeI$Tt8W_&iQS)lc%BMuVACmk6*`N(4>fWq*KMjU%I<5K]5\'ZD;%&+@HaAi-n>;jpA,[e=YOcAi;AL<JEZ@*d::`pD5(a]$h!!eMl!,EGp1G1iI\((/KBDpTkTWG'b&r%1S8dlL'eKeQeD2Y"!`U9:Lj%ZZ[COH$4j_d1%6r395!LnE-L["ock0acRD`ApA@(BDe;'&QO5gLhi?d@5b[4E7j%#&K7%B<ASl`Bh;Kj#X\q.>./-hSsHCHY/h[!%'R_j=-;49N:tR-i]rKZdLjT]XU$XlEK5_>;jWSZ(0$/$[Zcea/=MrYtl7*tR/mss&"nZ)C!TS6J,$Y5-2f3K`kTHU5AaZ\,Asin_%Br/kX8[)qF<L-\An*AE--=(W5EZeee8ds[_RKGI>*HK`:8hS6CWaUm:KmBSAkDL=d;toWNe0a!U4<FQMdYS9'GYsJ2j1(=be<Eg4%/4[7P->,H\k2^)D5*;lV2!T'2pCcp(+p7?riRsMBlCAKWq,qTtUh)X<9`dD[KM"nb0<81GUM3SRMd76%=d'HK&3f578WTeDUh,PI%@Ra^I0gg=P*E@$j;Mo)34>E^3S8tR>gY;pn3m$/jW]4^6_cD@OBJ@Q1(gYQ8dJG116Up.@>a%"k$Dt"@-?2l(W[@1DcMF%Y!OBr6%RSSaR#rlu+JpaD/A^sN_X/#)d_nn@U?:q0G^a2^67,OtjD3Efd6IbZi8N&f\jq`<b4(gnP*RYg@UOAKihQD5b(QDX'MWd`>)CJC[%[,e/$SO?jsM::R,;Hp9W]4&CjN>K8;$'8eHkc!3&[7N\uB[P9=='^P1@SIa[Oj][M3@pgkPJ(SOCF36eqQN`C-`:XS&gbLOADB&I%>rOc,-:IF'ZG09g\V;KgX77.l@9#Za#ta,6?nn#<Af7b?CP.UUT&pbN>p`<g=gKFhDl^Hu.M=nnOR_q$<KE,q(s1*0eKb]I7b3T[%W?<Rr=Z\ra"b"IlAm\DNL(-eYC/Si%eMqn?C:'Q\@BF/4,nei7+ccmZqc7h+<HHCGTA5[8\/.u@iO*LHo/ka'W7_G[n3U=/40kjp%=@.rsSSp848_\;Mnr?EAOsYHc+NQ'(T/CJ)K>sp[W.kR:T/gq"P=Zs][-<cWc,*aEiD5h#/!$uXDaI'<Nl9oeirS%*q\g[#e"p_A%jj"#!s(V6Nod._+gLq\Rq[ZiaAr0_*SuD+6Z9f9T,tajX;'!#3ET6#Y#O1fIKKt[7Mr2c_oPS*f`%'9J6otQ6C9b5Q2dV)]>F%+o%SAV*.Z"-+3:PK-N;'f3;L?JVDKmh_8:GWXdArT&QCXk=tMnI6e!GjrEA7W2-kd/+f?1@PkOb7-^[]N\)emdOiA+7-,CE"=h=!87^%kb;Xhmt@TVWZ:.T0?Y=Z(>&m2WFTEiU2fttQA3N$KTB3VNo8NtWkL5>Asp;g8-]["3srtV_na/%2@]f<^07?E%ikN`bK8mE<>AX7%ocIAXq(RQI*o>XoF$R1:nEuB(-1S0=6QF%cP%UW5>tigp\&.VTL4BhA#/^l<Qu&$<G3nO2$:X<R%]D^6rO&_AoT`,ma&p3b([O@K%[+!=Y.(\(7aIJ>QXW2uE1rSZO!-j2\(HGobnl7CC:b_FUd=P/7E%Wr&[a[,Y3;G`e):il9nK<TEmr<SH"X8h0%!sMT=&??!8T4*K%nfg`Ef/A!LXYr<iUYS0'ZH-+iK1mTs.jmi7-4H9UWP`UT)Mt?Ce'?!SCo$O)[P*D9a=3Us7WeM(+4s8[PB@I95kn1/jdTiU$t]N;%*sHqe][2CU"4*gm3mHrml(&Dd;S7R!PD#m)O&uTECF]5o'>kJ#lY?.L[n.r^&d:e5B5AG3W2B;]Gd+,<8dHLJYdC`[BsVW:F_aH?%T[fW@;-EBl:=BU%A<U4d]T&]4ZDtB98fSOO'4(["bn\bV:)'\61e5E@?<RWJ/$doN"r,lS3KJ+`"[k243"$pSS,.m<bGGZ0<K9IA%JUiJ00e0f^/U<@>d>NWEIht9?ENW^&ER$.BPOWisc[hEdeb&L&qWc4Mkh+al8#K,4VRD:Z^)[L*VTsPK^kP-0->fbW"+/X&eP0H?%MAN8Zb8"><<),[tft/HAJ.^HH3Ie>pOOBbEm%o.-PTkHU]FAb;>Lh_ils7TYpG*#1np7P(`7DM2\s:@l2=%Esl-9O>6P(MA(f4br%FVY^3In/AHh$BN,VDQt]#Y$*V,&&>i(=@fJ+eY8^2,D=g-;G`$jCrlpc.QK,aTogC<ScD!K_AJFPsLiAHb`\9>]Sr=L6EKKY"D%5%A80:p3aH/^1jrX"r5dkW/tW3$*SL()>JaDgJ<e%_A$moDj0M;q:bWT256ACP?Ai^>43$uf@,b=,EWM4$PmmA8X9F3Tq,BcmA.RHP%V`'H=k250JFAYabWX2kJ9&XW&Y=H:>6Yhn\9phYt@kWjY%?4oZ@R7bP;gS*cXdHH:e\NskHon=4*-m=[q*<"Fa#Mut.3Fs2hAamY%Ccbgm(OgMIR,U`f=i[,?.C*hW/@ej20G?c_9l5?S#]F8k`OK=s=;MdCeJF^FpT1]Tl51;N7GMii*F[F43qA0)/IXGID>2g9ZGR+,%V?$&*(gH#&q[fjrV7K6\7eY)/og<N9cK[5`VX8qaZ_$bVrWQ564YVouYKVqD0_(V6,;W&g?Q35iRl^"AE5J^9@9I`Z78=`j,qK9J%iSl1-ZCuTD8_cD3#eR(8DXu%qah=p'5FWu^,")lC@Oq>aQCYQ:k&W[>JR^_:6S\:[OfrJAbfoFT-?]*LpQ+KI)bf##g]?!u36$<!%f0?D+[-(f7@B9;LcRa"HN.\J>hX+6Rhkr<=Pe>MC-]p+"`O!Gahddm_5@TrOL[ul)+s,C6$(\pKX-mTj<uV<\Gkp#-U,S;bIN[#e%qV4g00(6/MU^2R?O54pt=UXU4$1KmKed_4;(YC7)%S;qVT0-H"#NtB/('Bhi<Q^o0\qf$`=;^lLH`+Qm%73&=#2a0q%;1`ILZf<?%bKO:-K5YkN$.=:'FELks(*PS%ltD/YE_p6:C`<j!)(S^O:9/$2I'9]s`E?Rj/p^"JFb`t1G#Nj\lP<-1l<1NPp+,=V=(6/YiPTfh%UCF7cRLlf0]+TVOV8>,!-L"q3lmtsX+NPq`K]binQDVGp6!b/SdPSlMY)Z6=.`]`'*uB0B%>kmrM03AB.+^?sas5fc@NO;Y#oF9Q%/Z,G2Wd%[5RMIK`C(c/rQaB2698Hl;lr#Yjj;DbhFP18LA=,H9-&shjor'7e>N6BFF&rWAF]"Tdmb2X.&uHWn3otUMih\O9=0=NX%SU<MY/`:ak(@oIiS<nu/+["HG@R6agV?]-JH)NcJj_<<0<5=-Z1fomDlrja/csBXjB8[dWLC(%]L$<B/3$0B9c*u2+qk@`1:-mO&%)kF#Ks&s0$i"iM06\bc3@?q9uEK1t^JU)gj<@eujI%B*%OnRfV(KAfmFrdOB9hD.$`K>8812)7Cq^0boL<)XpI7E@tVucG(2N8YT%9H4aD>8S&tO9^*jLfU3DS[djdJgJMZ8E<?'R5WeuP$t84!"D"Qm2!rb/H]4JD_\I,5\<9E$giSdAOMbA-`Q](Z\u7m1r7KbXkgeT%$^A]Vf-(plYO8Hm4&i-eh4_f%)7gKJ0Q^sT7l%bSo6lEqA:#ZhcLj(`7XE\u*Fcp@89G]Z;g]WC*-0+tPZ&K:!p`V0OgdY52M"nk%m:!Xhf@cc5l!]&S0JuFM01Q8]Ec/O)S4,e_/@O=)\GIC6(,%[+[k\VKAf'%[*';/=XDW&D/k_N<[efakM=)^/H26o;fb-i!._>'<%dAJohef5QIHKNLp;#g?uejs'lb$eD24mYI0V5t)Cn^+;$oGCh"6CR&if@)V1p,4Y%<+W:WWtHQL>-u@*)s3(W^R+D9:OVB!(XHHu%=8ol4L!RF,dM'rTl'3&k^3&,s-e$19%pup2JJZ&s`NpAPGkh9%VqupfitOnn;Gcc&h>C?K1U3@o+uBV\djGM,Ra]l\]s7/#YO[\N%Dl9re1[Q\f9)ii0pIgi+1N<pfpW@ROSh+0Q/j8m!s6Tcsps1%Us*XD;pdG.3chu]KT)6@%TDtTt?MNJl5P)e=^%`gbTDR%!YPdU^%5Q>5cq8/2Bp.IXL<NlD?kJ$d?cbK0$?i'VkqSF?OW@rY::OhmRJ**#7qO(F"q.IJ)>CQ!U^\-d)m_AVo5PAs/n-sm4(]O3%rl&gR%1V`QVJ*rZ<q7lmiDu#=+ngFFK?i?1<q,b>u49!4.r=Aqf:]6PcqpXHu0E97?rMr0Wh>ccds4)Vt(V](as3gZ@qR:tCYQ*_!nJgBU%\,O_RnSeHi?hq=Kq43$8hgF$?r2oGe^>Jdfs7kLN[=@c%htt`Kqepl^^\_78r-//6&,a`1rP=!`pODs^s5B%<hY7!$n,9#Rq#,^5%e,SC!rQKcdrh'(?J,TiUnHXO-5Q9$5r21Y4eN`u:?i.__^Za]H+#!J8dDq//?M*c^Nu*5Wki5)R0D]q@a,<,fo^SZ:(O`s[j$b%C%qKUE.M`tJ>nY2'\ID"e(73=2Zq#=;8s(MGqo&U*`HCg/C00SuaSG)^7HIi+F$0+D2"UAIB#oH+DKg;SN9#iZ6H[_d)o1P^hoT;d"%?2EKUmGt_1:S.DR#eOA!!TB:TWrO]j05s>Ue:s@YA!h`rD'hli\T"1LM>oW'^Zm$#`P31dp$dS!Z+I%k>+%`W@^,ED&HBFWr-&QM%Q;TG>R@e@XN*P6D.lV!p#Z:Miarp/7+^!Di=g7IO]5tmO!sruh0.@SCMjuV]MQbpVBP#9u0j_E3Q<smEb$)r^Q*$e>reQ^kgbUAp%nL3A=p19%]f%Pm`1J1#j=4U7bYA?'*f7-C5UXu"?%p6i<0k+:#+"ock@\"(8XJIIWfkQD2\!2R2G=ddI@kg6\R/KOd0YdY\:P.3o%SS$uqQpV[2k`<M!&t,>O$+*C04.a+99Td8;2I2'0bH]%V%1CLW]Wmu(V,+%4g*f(eF!P$K4R]L:LZe1do"WcccYM9?0>d>[^\XR0%qno'$[6OSoDC>J4J,5jV1]Q5Pr9llI#N,P[^].)Zo(W19+90$(r1h%(I6[YAs54.^rSRL'ht]@ihYuF3h;A..^\ucr"oaS^mJ$N3%^\-F_i8=IYJ+#>2oC)V>s3qMN^\JiKrEoSan+^\5rpAV7YQ&&jj1@&G?2sKAG/M%`pYEpZVZ+()lC[uI^[eLViE*bTci<Pps4LcU%0E7MKr%J'8?i7pX2<]C?DuKL8rt@WkFl3,'?i<\`qeG"SI)Aapr1F#](VfsI56&#TH)9s_?MTH(^&6nDp)V1H5PCN:++<+KIcTk%%5OtdLs6t)XA+HT@qW+tIpiPDn>kI?V?Pi[Pkgr8<0)B_<YD[j8o]r5Y(]Cr/f1!G,qK:2hMget(l_7`&rOV4E7DCJOFj[Dm2tZEs%hLD[EE^M9N,d@XrZs>D>h`$q.VXm>I_efl;I!L0;f<J_Q7:3O^(Yt7MCWF&_^s3$_o`<S6nEhsS^I>fNJl>K0^R'neRmdW7nZNdB%&.dR,Pq/AJKsR?Nnn'?$$pQT-83#KcN8?MO-VC`i:cj=D0I"R7P,QSt=^oqkO5"LIauj6FUN]Zo-)2`QDN]'A%ZiK]Ih=F)[T0u1%9*`lYE^TFs.D,5a!TSqmpq5@%20$WC]Rf"]jGIWN-Ab3r;H#R%#@_tB2LY'CB!DLGFJLPrU/T.:ZpbTi>/3^3/9RkUC@]_LW$nI7%"UQn&XH?>@!'Gt*8GoKDf5=G!JVJijh,\8[)X$0QOZY^od_L-/7hYSs7NEIA=Lm__d2N_i2+_';JpSWrB,6j*3p4]Pr9fSH0;dIB%<;Z^K<'/%$[HrR&*dor"_K@Q[ArGMK[kX7_3V_impC$P6npsI*a_0Z@,RL$i8Tc=gQLMHDrN'!$jG`F?8M2HZ9cit3/Q^YZB.Ths%8&>Zm9],4/MC=dMT.fgcXGBPY+j!@pfiHS9F(b$VhOAqIL8+D,.WJme<p`M0MIbm7(V]A`+9@oC/#F.JQbijY$=7ME[mcLF.C1<"%VU.*#>p!]O8.8&<KsI716Bb$516#D$2u40(hQ"j-W`mhn<d?o#F)eCPOdR:18OtnfNt$V5H%NR%UPb<1G#OBfq,,+cGJs8f2Z6CW%SMs+E.,RVj)BP36]K(FQJInk#mlF>4UF"24lo\`<2Wok5AIhDe5;[Z&n4FNSKk)/l"ZAJb3'5;ATl-1jqtTD8eLU?>5fGO^1\/HC%a[tJ.^Vi\UJB>M=R];*u\qF$WcQ*UHcU9rQbTs55Fh'UCjTLh#S35b#U4r=%Gu/rmL^,$JP6!Z_jIN"96Z2HNWJ<%eVk=Tt90L'O%JZ7^4[36fQo2-ckXr\.>p#:m@QA5YP?AYB=<:rO@]P:41'M<QW*X#&ZOK\H6$24(%_(-2i$tp"LZMO&.SsTbWl[boe[6dKK<Fh-j%KuPlg_^9jHQlhk-A7p<#,hndh"D-t)OuEFuEjfUkG7KGB$#Wl'GJ\\Ia09@d,9nP=lpbO*F3SK\4;V;2,,)?V-+P0m=C4$]Gco5^%f:shV]o=9T.fCZ%H;?iVM=Db"9$KQBRd<0G7@pk5H\]FZWf=WV.6_"j>(Ju*jCN9*atVl4?M7)H*LRZ&XD.N'#KtI/8be.8DGSt<%OmPX%U<aXqc7G9de-alA>*1pV9oVGMa;Z;rm-ACUWnIjkCg].D4RU7nSRkYn3]C,nk8/Etmn@)Pe-r@g>-1>"C.`?.-hLO29tCh:%nq&Q,9h'4#A4%*Td@OAdBu\nm$XT!qYjiJ3HWPImO-s,%JB2q5<XQ3544Uob"uJHnjNm3Sk)1$/[o^P#jC%lr!#>j,UIM];jpGH`%AXf^h<8Zk@oI^/(aM"+maO170'+-2#6:Jc?&nOM2\&F#,iDbG"Fcmp$/WbL^!FRe$^:1"n+c8=8QjEPum,GX-7@oQIn17S$l-=oe%.HJj0)Wk6@ZAH`t#QQTnkiRf\jhO]'I@nr:Y/le[5_0n!4#+\QE6umj%&CQ0IQ5!A-8JjATXs^FKVMU$jfS.5UbDbGNGRK-l"hqS%?gDa./7P<D>p>5k*?0/C0`$s7bAEB#qc(2gd\eHUp]6RqO[lS#NY$=c2L2_oF8lJg&8'W:P9$8SRcXGMGc(E!oV-B(OYZYe1k%tX%3NS0"P&aK<^L_\X\^(D)&%3EoAQn1EJOD/0dR1Mj:U7Vmi]JBC+/'$(E@am@,`,hqV@+JF]=8S:$1cA`-NUFB*0@!Z8U8k\WVSjK%lSkBk>ek:3nRp_FjiZ;&,L^UA<H.FRMoq1YQnbr_SEWnqDQCne<H=A6!;\\%5+@pRfQk81&lj<#^-.5H\"A-0[U><G]SI.FU0,LJ%bS)RU*D)^+I%htqpig%kMg;=C8]d&HRZjn`TbQ7ETb`(Aa',4@e@m/$g^tQ0U`L6n8(,tJR47BEL8ECqPgkpuI@7q*9<12G7,J`,%8)%;J%Wj(Hm+-NMm.jk)^rm"=]G>H@[^CoR#)X1Ah)/"L&F18hiW-]VRYXUHH]aYA$u6^QH3GZGWKJcjZ-?#\lW$9/E0)-[,:+?B%UCLBqVK8de:[7SYp9Hjk/FpV8-;u;P>58J>![J_sMj5L'G^<gC'Pd2VC8e&Po8DBB5$Pr_)/*2ApBA-ZN4_)CH%;?R:M:9o'JbBB%Nl`6e+?Zd#]n9FhVU*)1=D5RMBKc6t4$,3hXL=1K1+_9UWsZP?'PI5(M]+C1&:PRO&bZXZlFeE14Um'ap35OU+maY&6s_rrA<JO4%HtQQjo&l35e"j>-gETMdN:2EL)Q0<O$KW;eA^L;ZjG`sud>OEISHmC%a<>JXS"sL\%BJh#YDfl$YI0MC2IQC0\RF:JH'V@^s5a,d%4[N*qZ.HOq-q/kTYsd:4^cI<?(t9;=6Gbm`0U/Y,ApI7)B9LnE6kS0dXJ>U!:89l1NF(oi&<ag$FF_XSZDpldY@)-tdTX=6;j*pq%=U7:p+k%dql(g"D(7+0.^dJ=<VHI8ToChf*+ScM'9J>t]&!LDTN)-<R2n:[`V8b41L+m%!JdGq;0f#rD/r>#^TnKAo>Ba=2TZ_c6%;4SJaQ#*PC(rE-g)+1G>L.9p%]T3m^_EaAa^8Ns*\-%ga2AVJ?YfVQ(>`J70d4;+D$o4<p!b"4eD-8.f/]sGM"C7%T0ZIm3p"D/u%5T@)O@]'P8iKRiVk"-V,2!""Z>-N_SLr,807%\k]\e7=$)NF%>7?5@r4-*JY(7`E`O(%aa=b\r]Z>VPu?X\mPQp)ig%r6Pd;NdSn%'FVbnX\4>&&CU)$?j!-5ig;?fk7QJ@rGA`de(O1HCsoRETq-q'bpK,m()J#:XREgJMTC!(abNd\q]BQ^QS#\EEnIY.UM?*c2cDn_%^'A1+,oeX5s&n634H=9q0B15%T!,2'93q-1j$tjB!I*U9TJS[:)<3GsTB+3J:%CV,,;P:CCk3%Xmu4GNMB<]SC9l7&G(;:=;4_qY%`$je/)%l;/I`GQ^i4^'_H!f3=`tISm&>BAZ;+a;#5K@<Ja]\`>R0:>;q+d_2Q==G^P*H+-n^sFl"C\Y1Y^gcABG"Z*S6[$e1ER_a%7knA*9]iL0Z2>*!o`.nX4N(LG':eGR@u0ll52**D%@YO)+?F-i*`d"XGB=O_W.CX*BET04Xu2#1hH2fob8\>rhiNhZV_mV,SG)e+%l[+huDmDM>m$c<Q(Xnsfh0>RJ/=KZ1N(:LY@sKIm8.pbHmIMga\7cZj-@@c$C_`,D2mT:uic\2;e24V&?l.)![to2>@7r5h1*Xlc%]-Z3a(%U=\dCdV[MM"2(/F#?F4(?WiYI:+@=(K[H<]CN$8%uR0f7`Xe[3NL_L_rdtf7_]!`ZhL82I^R;?rYt!_:T"Ik[5Dh45n6f%*=jN<dXuB4GM\)&$D)YLB+'G**`+Tn<)3Z#7fIpp<m#*hM;Dg>0kZrYr#&\Oa[3h"X>CB%Nul+VElPKPRN>'M:E(jE!cBlfq$$)H%d9.S^lKugO!YUInKYFL-%QTd5ZNis1KrS8L6[L]_:Gc%7WQ'a-LB`$?5,o'mG:;!RE"=fXps.T/hO[WQ^t*4%T,+oOe/^b_Z>MRZ%_kOJjOJ5Wg<`?ms^$+4tBUBC:LQ'NtXX5?>.+KH"<`>9'=1>U.7JaLWCebo*_anCaX`4i*aEJus<f/s\C8u:]aR/4]3E9aW731J1%.H#gEPXuKQ!F.u;0/g:9b1]c5VsHC>o!rH6F:HUW#3.`f\Z(=grY<Yl"ipOG5N]_n1/(6hhDc]W]HC[60[g&'b,fhVClX2;Wme,I%Rd7N'`Y928O<L_H/kkQ_!m@(bM28s,AltXt4&?T9.-.uEqd[&TTZMdGNJVZui`;rU@1>/2ZbV0u;Ag7EeWa'G@scn\7\r`;'a!J^%i-l;S__>lPpH,+'11XfNf3--na/uR:ZHm)&LZ24UKr':PA>-#V-Ho`&qY+dFfo^Eq=.fUDEL3o5'W\='9J?*4iXUs(NHTIa;-^/&%;kDKqAaKXK/bNP+m4.]ICOisBIC.fX9_2L?a\^-^&Ek1A#H^.KW!ZM3@#ZPaFgf&jrWPu#Gug,MWqlG-9l!^j1KWp6:i9#KlX0,g%qatOu^aZI$5CR68`g#;r7n.g32<_t&9CJ%^63M+)CG;k'cGC::Wj'A%^%fle`?C39'M*2Cph&UNKJp@;it^;7jkN0O1A:7/eARiE%?$kXt<r]]AQ"PqRAAWUQ3T?N,_h-9NB=K2;`?^tP&7S-D_AKSlob7M:1dQ/4",iXBpA_b<07E[K8]pmI`;LeGQ]@FVV!$5f[GiP\%E+C-ue.KQX:`Q\->^BT1[i9X>#0%AmOjHq[6/7PuPf4AW,t&2](dL?J9iPYC@h\hC4h3\C=`o2<#de#rDkh:?F3ggm<E<.4<]tR\%P;X];+X2`u*CGMK/R]I2gRFs5HNcU\XY&lf#iXIB>mL+*8Nc?@GU')&@D>,:!I`<R2pb1Jq?A,soO.j8!ddR2SO[0\(j!Jl17L!^%._JJU.#N7*mRX6a>GdXHH1L#RVN%KF#)6X`$0u=TGk7m;:Z^f0g/%RhTs6NK+s15\@q+u)I+jj&?P`R$>B\IoA_6Z5fXHRq$mVC,%NG26"A_F"\@[K1n`aC4+kU_]^XC_.Rl)qX.rH6m\@SCUR5W@rs9,EpaL&nRC"'@[\ke9Lp4,6bPj:G_!+BE/\<Iq#A<Wj+k&&NFS%eJAGnRcbO[dp',F@E>:aW9Jugg(IUPe6;_55kfDZe]*BnFZpfgN0V6:CglEtlULl.4uCBLl?7`fX!=2G3"j4N0U7U)AC>7@]lFa*%;e>HTBZi_OQa)gD2_d6H:]0Qs4=%Hu,3(?@hF8c%:*4TmVZjn!*/>/a&R/R!G41Z[1*4a/SQH&8J7FHM.re/LJbTgMG9Rp[K'j7c%qWLPBT2?.DmDoS;rpJq_NgSGF2Sb+C00*h-r@q(s*QHJ0NN&a>dG2""g(l+U'qR9.De@?6f!L`OT/r'f0_8W5^uNL,!b.qLJYNg6%THOu:rL/p.e*.Ed\P88tj)V`n35EIe3B\LK+YDTX6L!81XNJ5pl.pr8-Z&(f\aMr$Un]:[gi"$$H#Xnmq02=[.M+t!fE.qe/MGE/%\).O6KFZ['Su\cAmZYaFJJ<d+n0Q:M8a8`9kUOeE*$,PU$QWoDfJdoY3<Q2^$&B&B0GB>OA:eT*P.]u3/";.%l:P@5^V"`*DXF%6%:eH<n,H:L#lU81M8dp4WmMbH#Tft>;#Y#?%1@@D0^m10,NhP1cUpu+nFBO$@e*`Z-lNd8-6FB1[;"*Z-I92OL&jj!VBrGVq=fcf1%U5lM4Tc375)HNX=CPSp"%+_ZZA$EDqD"A],XSK6JaW$Vt@-tR2NLXT"=T$\m$-=!bD:@(ogt1W<i\653b=gc>L4?$gM%+$:?)do[%fc+NZKSF;U0]_90BrVCB@gXrdp-VXp$9hC[eZJ?X-^2!04#?Lo?Yo9^9PD)0qr;/r<=\u-/p+JB2eQPML4g-D9]]_8,rZYGIH!'i%q!8aAZVSJ!Qs(_sER7k30kP8a6g19uo+!>:#Mu"+r_+`mQ6tL_#4hrM6mIBt78kP.Noj*!aXB3i#F=3ZL^a;H-SfMXU8cFTDpb(B%>/:YY\onp_\n?u:c13e"iRtHd:IM&;I38s5-p>iO"W*5SO)lX9a6]2NZ&4ngJpH[nr<Rfg7T"D+LE?$J"SiM_')@oMOd[Y`dW*K,%nY^E$V%#@>L(V(O($u]2WZ*1Q+%?CYiaT4;f\J5nZ`uT2Y2Ack=MUB9Z$c<aZRhE4SS\q(5%d)/[K0rP],8-r$n%J:VQg9@"Qeu_%p8fId<Wr^Ub;3edgOOV5lmJ"T75@WB_h-,Jh!0R7fr6S'Co;_9&R"SQ7miGZ*cC*eKBFtQ'G207a)HOQ>Cm/,6r$,*;!*X69pjB<%7`A&=#,;fIFY:rI_cZ*gVr.=tp]YS!/#O$WODu3@Tg@8U,2?9^'#knFQ&L0^cNrZ0IkSlF^H`,^@6M*Q.XmOr7\hS/[#FelN^s[J%#htnmYicM#oFj.?U*.BLU:"WhE[\3m#NTHk`%#h""N9A4Qq?t\8H+_>[ANc)?J-kNcs3()"8X'\AG7#IVB\1:6*WB95)-I_G;_c0%&f;81B"RA;)K/.`F21a1erm/>?(&2Nj'=ZWT8DB,)kF)o0F?*g*G]5TkLhK!7D2mKaeG(1*3\8!/">9BEIieY`ek-T>@@<8B4V2"%%MqYAm',^$KW#9#bjX%AL-'P73c;-dE/,rh+4R%E-<pkd^Z7)ra6\$8:94_&)P5+0_Q9R92oM@HAHNkeHDTCJmaO8VGNpB,E%?.:%aL<k<5F2U7ZJ-5ae4!(0e,\B8J]7-8i_Ec#4smfHG9Y^X_MLDmi/%>,>okV"HV2k8Cru/*.;b2)VhX*.,K+m\FsJ3?;eK4B;\q1!%NFf6HI5'tS\Dq0a[6&Lh)S7Sf8%<?39FXPt]W+,kFp^1V9ZH\mm9gPa35fXdS[sVZKG#sH(SN'40t.dmF)QZh:7Yl3JSD[:d+1On%j(9g]maTpiZJ0E.p;3@]>G:R9j&oq/Bs".+iV,BZ-$Ik@L>AhM`:)2E%!UtVgK/`3GO!E/KKF<g)9oXXoec^/@h,(<haL#\eWu#H%OO\F&)kO*:4BM3&IHlRsR3F]0/FH_*=1dG%RWI*G\_7\&&i/@MPP6X%0[J:>'/l?3QMY_Q)mL[@MHVZL.r'JA>>Z?%D+/<k[M<p1%Cs+$2PpdU/i._&#@>oA&V4q%*nut=P@4QZo_redRG\Ei_aoPNhM9R13SXl8^4)uOb,jG0J:'qf=MX5/F:i(gC_`PC6jN(rB#U6-]%eQTfp;>tp3h;Rj0D0e^+H<t1Qb(S44cqr/-<S9Ys.<Zf<A7#sS6t?.N4cR/B"$\C00JI47efM98efF@[-_dF"LiV:tPk\?!QSA@,%M^K\jd1&rFHL9JtAC3$98X-BSbH=`j;SgD.d*rTr;bE?bY?MA%1g'ZVnA/V]\,pQt%mNf_8QC,D>.6?XX8%i2"Fen)0PKBGAL]k2%$NS%-5ZidElm\NVduT(R"hd0g;971^@^N>+L(gdE<6\5Q$aS)k?7"XSL7c-j"u9;4OV8>Dh2XKf#-U1KHR>hm.L;/Clq>jeb>-aZ%iNgWLUa^?;AN7Odii3J3_A@u=5WjgN9Ik=2:8GsdW12,E+lKpP98HZ-G)Fj6hh<QZ!@t*d;^jXT`Qa?h5>'(4f/tqtd7hEs-^a7:%6V(+kHc`+)aN?HNR_<idWs=T@]@E([hn!#DnJ[7sR:'*tFh87GDRG.u,q>q%P0o<RN`+_T1:ldu7Rl]a8H.^l_\ONnf>S3t1cAO6%^=uWhHrsNps#f"oh]=u9L9g8Vh#L+6b/"6#?X,%],qQmn=%!fai"0cmCrJogjH0!AF;qQh[U<ID=([07@_>rHdDR'8V%QJWiE*>W%bsO.n=Q9W%Y4I%:CpL^io9jq*bng@!YX9n*_nW*MaW7r8UO:<*Fn^Q7Mq3g,<`>CFkSr]!T=pd#(0<^[*t<>jXuS1/L;b_I&OaZu%eP/7o["+69E&RZ`?/3qdm.`a^Td=-B`l#n30htGpe;,63FUTeL>JfYOAH#,dOI91G?LHd$$P.nNfP"fa'%,+J[*Y$cEq?.r@6j<O%)q2HF[5#qZ<Rm2nhf`MB&JM-g99<CmJ]1UaQ54^=#o8t9`itj\mE/S'o7#WPGainb;;:U.N7jI.e_PuK_bImMpl#rg2pgH?,WoUN%IZqYb?,X/aA`Hf<d.TB;B(nG<3jhbM8Jml0$GHo5+,l/X^V+@HDloN*#:j:VCKAFhgWW>Z0P&3H(iQC/"^sg)p>((LM=@+kAD-a0%Tik*B)jRJOR#DC8CPt%06cAmbMmIa[!Hec[=Y,rYjHNG3#X$&_KJ8$!cF=,^<@0(lS<>OZ'.ltt#ndYZ>a2($a*W&gP7354Z;YR!%j5Q"uT_&^gR(1aFI.&a4@$(jbdZjVHdq#h!rQo$emfQ<O[-t-8P:7H1SR1!:_\ne4`h.kTm'OuIbSQegNS."Xq2ERaSb,;q_jCZ;%@CbXD9e88qN1SkFE5q!AOG2P+^_mq70ABK53--:FWEduY'hN?a``+4GC-:ONHuD?hLSpC1a1drQa:Q`>jc)peQ>@'kPFV>=k;ja<%Prn,@>`Rd%b?N")QhS>B\@ea%->bU%-Z.)q-RnNJF9CQ0Y]NQWC+dr]3p?%rW[V(C]G=CD(^uTaNeFnb?lD2$+U]ue?\5O:,l,st%%9@9r(=4>A"ToQ-.<KX&0@UgS>TtK8Q'FOAFaD=Zj4;m9#'dA.!P+m7[hCT$GsKSb6u4A>1?Kit\?93aZp'm"_i211K<0ZkU]d-5%%j"SbpD.7`2s/]d_.f[B*gl&tINCN`5*Uj+M[rM#@P+#3n8gn.egHr?"2hI%3ojIAn;nGNB--Vu#Fmqfa6eK:+UoAWnriX"T44:m%%6qT2f!^s0&';*D4)*8`6J?HUTPaJ@)_7b%ps'/'.3_l7NZirGQE]KFht%TN]n.7a&c9jZD8l!CHF#BE^TB:Be&.O?nn)7t#nUS?%"JAs>>S29S#l&0q^i1QdR=M9)l$cDnm7[b3&F<*b3E/)h(M9;[LV"D3#):Hjc$aeR&,0Hk-0]HBTJjP2'!ODQcaAK+9@)=Or\nA^%YYhio%?H=eWs**@<h?^0P&F`UJer+YKkqMDDD0X9\)l`P]n^NqUQ/=*;gl!(PI&j-hG*3$`AaIPMSdu93Z:B&Qij4K#rd93HIZ.[%PB#.M+$L?\\`k8;-FRF8Oa:SC8FGEC=We@nHr9KR49MJ<_j]7ope'C:UG3s$O($q$GF)&0^SAE+n4gCFl[YCF#/8#nQljZIj#XJ"%0[t0UM3V$fk<'!sN^OC8r&\\BF+g`!V=fD/"/-5-=_Xt8_f(@qBEDXQ*hH(m-"ANpo^)=(N3-/>'*BJdfc$GT_S"C`CYVQg]b%gj%-S"9_1H+Lc""1@>!"p+r7V<WRCrfqPFc//B4@\o->qf"KX*:HIZ)$];F=$\C4i9)_0O!`DWKm"#-c-35mn'_Z5d"Sg]Q^/na7t0u%.WK/qZ29&[bkF&,"5532d,]eo_q\urKon_=Fi<o6=i5KkHP;&;\T@c6?.uU6i^HcHctHu#cA97*HNRgr!n'n"!#Wt<Uc_+>1n0Y#%*PXPA3%JI4`eNa`=g-;5,[lLi%uAf@i#!N&eAE-O#CBCUeI]%.QsiSn6*b`_4RIR4WVb>\gk$]87mCCM;EhI`.E6A%5;\Xg(<#,?%jA=\ZN5jGc%OieM@kRYmBFcf\aF0.E`#p",/t9#@gL\j'V_Q5JHG^Z;W-cEU#:(=:T4HE?=-1dpC65b!?M.<.]i&>]H<rb"^Q-W\%]5Vfh/Rl"<7*be/IK:KncWEu:&"6Rk0ruBMP.eD[0uV'O0U7U)eD.os;3!EW=GJdJLZ\@'ffFL%%Nk:Y+$<R#eT/k_s,lf'C]S:9%1q*u9RGaQLDsp5$Nph!aUe-Ga9p.e5Kd>lTG?=*_K^81hHgd%!&o$tZ;sfLDlOCu!WVVWJ8'21;h[R/nfBX8>8pmGrkS6O'n7cdD%=OdLS;Y<?44.rLO20qK&6A4T_)E?+<TRk!<gtm.D'Fc%bhp=XBa2jXQ<n[c&`L%kO%?-Zf+<_^?7-VgU*$LK.=NX[h[U:Z_7S&6_%%j,lKp418P9cm9a&e:'CJi!Ud=FKD%(4t2h)lp+/H=5HL.OC5W/tU,+"K=JTX<PB(Qn^TXEuR2'P#+5&oRJJrlOb\XfQ9[-m=%=E%3s<d7XWtPW$TKE8qrE_@]ScNdJI'*i)Wi5i`3',RoSAU.^SrYa6L1)DMij`2J:>Sc)!Z,]Lp7.VGo1"#%Tl(Y#)h`Ik_?10.,uB2%:hHHf2,9dGN[Q#p`#eh.`nW\.@Ju,:r7k:j)WYYJMW!69ehCa1s39`<U7B0;-rgl\0mNprV:lJ",d30c&PKB$.lqR;79FK#BmaY.%FeiJqJrWrU"afi/d$D,C\Q("?Xm5:YS#]'O"/SX!YqZJW,njH[l.PM/)=,R/bX?SjX6BAlm^:b;>GENQd;Ds\=_@#&X<;iJQ4eV*%*kd;!!(C+6cX="D5V.KmR!LZ+W<Od^ofX(q@)h!&eDT#]`8K^7ZjmJ<+7iVN#M>Nj,<'JQh2'jTHT$kPRR](N2$Lq<*3^G0<QlD]%oW[JPN13>)3YT$Kk-KaPYbKHYbFD<cUSIGq,,o@R1dt;A(:*5?CN1%@.#GVR+t:S1=52]?D:f=I@LOXDSs[RO[";<Mi,-LU&:V@\%m]SJ`#`(nX!L#P7Q8"A:pHgDHU$NrV@@a'_>N@D"\+.#K[0&5L)V;8b48NQ4Xk2.q<U3l/>-sl1n*$MQLlFE&.[fY(=u=NScS_kZ%BO5<qHb=K/bSofW`Y!C<EOoYr.^^Mf$\@D^B5"S*4(s$Of$[#u2Ut96FuLVLc4L_N'O0!f1i$VB]Rc>J24r:'MN.KJ)@OT[_':h>%iYF\?XT<nbg?,O+*YZ@?Rc^(-2!t"a"N8;"0U9j'@Z@)MadS,ChL5F-1U2:[VmE3Wl(U['>;4C:g'9cP\W=2\"r?)jQP1X]4<f=b%]dN$GcHnDF<2W9amB0_A*CGDe%5UT!Sh//V9'nBHZ6/e.9o+XBp(LsYoOd]naRf[i\%fHWNKD^MO.8pg2ijK:Vjj;?l=^6.@h+ku%``b.^D.2#s)/k>]CaQS:N[7):Bi/f3T:^g_hU_9?H[!JqrES*/\#e9khr2DT?psEa0^?0g1aMEU%C?"JKf?5!Xo@1ao/6!3Q63Hu%hI0W9Lre_aq^,%;g[li"/UB#?;8Ka+BgV<>jpfO-)A7Fs@HMRsUdG%&*dg0L8j';@R7PL0&op#4EVg=0H&Y<FP.;1(b`PSQ=1%Sr%J8+PiHS2Y\DI@c#J0K]Li4LE]''C"a]2QghnWj=k.l_=ljKoT+Fk+WjnL:lTPVHhEHWbM:nt)FXB?YkQ*CJ0"OTI\jY$DLAF*?qc%hS-_WoX;NDhRn!sK>lWse)o*-d6n+I%[]l.U0Egf_\l(.EP'GJN@#dJ\R#C5S9s&sKR'_L7]:.]KF)E]#YoT2MB]tU$F=>E/L/OM%)8V0&<6QRtdrRpABPg;;*M5+3Fp+_-Ap#V7K2X0bAA/,>qVc(TXq-ts?1ct,5G0mbQEK3+D:qN?Sa9cb8CX`?eL/;Xd75aghHES;%lb`,\B5[:3NEPXLEET9E/,HMK3/8er3h']VC(FE:59s$5#&P+/4<%b@J<SZEV/[Gs[6[k(Z)9+-#V<3&C#onQ\oNTiXW1eG(CkGs%_'*\4%WT+"Lt`@KEEbHA2HC;"83Gi9(-+dAq>Q+bXrLp:<t;Kp.u+rrE/;<"6Yp8o&DO_2+`8)+EP$1GgQb.mC#on?2J3N)V^mPT%e&ij-IH;#k6k0g]`09R=LY2?d6gX]86hEPZ"-ustZ)9+-f[ItddTk';@S^&8Z)<jSoX+Z/&P1soU\4\?N^O@3@ZV$QQVHcrLY2Hg%6Yq24&6iL%`"T\#Lomj#@V[KLf\2TXCi/8F>?a*U+H]"o(-+d4'751H*?8PT"3q5ZRlSF<<t6sF3FE5MkgBQg(hJX^'V>\NLd#$u%cbkH(oQab'7(4/F3Q*hY*+Bjg%[!u`6Yp8o&DO^8Li'45@N-hQfZ'1DD#ML"dTC)kd<,g:@d@)*Z*fiaCi/8FTb!8QFKGS!(_Q;r%;$4WX7L^??i<tG))E;!:0-$^g'k7JcbRqC)Lo,aC+\(_<re-Au6Z`bWMnV2i'f?OB@^Iu0ojQej8OI)"Z&K\Bica8l[gRu$>rfi:%'u;'=Qps2M@u!Pe$\oS$o`u=\jq-A:#NW`F\dngsk^E^U@e<.J&D^uM6Zg(TI-uIF&>M`PRI2S\kcKJ)m/*&8m/+pKp9\jrEQeGf%3(0)S35d6**p.G(&:M"&+\%OFK>5*=Lte1^S=dFY%6-cU<H*cN1ZL:>Psb1@)DdOW%Pc*V?jhbRP&DLQ=ZJmB7:Uf?Ps^Kk@Q`(f%jUhAbA#/g`6]?>+lrI:M7+_3a>W>-<9PA/!&>P2D]h9l2kd+9UFWWW^37#C7h#`?kA&i$^d0mFJk\KhS2+.L%LZl!/5V=%NHT#Z=%XW1f/=>47Q<GM#>1PZfq(3Chu/;jVaaru)sm7-0fgp8RPU.7oY\T!?WRHE@>i=McCRn&hRLZl'u;jQXRg+oSR4s1oXEekbch<#:-%aWcKW+t:QYjH48e0-$^G_)Oh%VstY@K,a,bIbpG(Ns,T*i=Kjd]VW&WLbV6L6aSXjLo**p^38TLK>ndak\k(bqLq:qI/pn@4iQ:*%7h^slLZjoC^8_tZ0kaf"dJUj)qJ:^M$lWc+iB6iUBri:``:CJqFFH*L*+H.<cAJKa6SuCoOUHqX*\"P)E/;=L(l)cg_`1'U/&i_:%O(95>n4:j"mjj1WXm[;E>rY7DS^*=pPs^L?%bSWA](Crj:KJ%RB4CT@DrD7[7rl=_RX<#^)][ih/A.H)-V2N+H;F7]PF4e.a->j'%aZ))><Xs,8Tj\=a(hY(iG*t-tFnV(fo[sJ))"hM4W9D)AqO:^9Lm^Vh]"<7K]PrZjRXeX&7$ik?PZA8Kaqu+mcc!91Z%3,gHB\:)%m(so8gTlMRhT@"QV:pO1S2nOO="kim.i<Ea@iBCH&EA5I_Ab$Gik4k?n$?thmN&aTLI;V,q@t](rhb+>fN&K%p2,,EcrLW2H:^IV%*+JQMG#GSaLs`EEo=C>Wo[ujgo,j#V_E>$laH]-b8EDabfZ'1DD"YpocBt1*e<NCk&;g#DPsZg5jq(a&3Q+t%*$SfILNrf,i=K5(%Eerm#((QIgR6q)i3CI8;6hE=R+aWJ!>JG-5hUCW8><'P\k(#$'U.Z":@[(lEb_1tQXrJXIa<AQKY'ribi=OaG3Q*gV%^D!DLPU"=%k7HBM3Q*hY*+F<<1je0mET.Zm6p$)X%P]0-+61Ke[W1C?gK6JS2HC<mN@TctVkD$>[]sk/Zjp.IdE^6N9+-MGkG]tefZ)&WimcL=%`,H3%*9-TieK.sT6t":`7`9E-_BHeE>WG3]6.&/mG5j"VbU^*Qo+.hej*YI65G#sQkT<<m,R1._Bj9j#ktB@J2d^mWP@J,pF[6nQ%3B+dlM,@^;SKUaq83j#A.9r'Fd*q%A;(Yd_,Z)[.:C-"YaILa!:N?1L:=[)/j$]=MQJe"_>$H6E`,F4+.?%*G1.J2b&KuudO"jNY%PKVW?(O@3_F":*P3KjssSDi]n]Xo+Mk";);^R2Qi=`5iR0ZN!M1IerC#cFRFKTgm*6]:LI_Wcj>(N`O]j2-M/OLlln$5IPJ'JC'6%<Aj7?k;Yi#AABS'SObbu2U6`bFS"oif4@2bfkZL>LWh=4/*('6$naZMP)m!Xfh#Z7j@>`*Q?%!#nU$dONA+*o8$-PuN$cXUO.g8Q%$/mX1.V]hIMETF8PkBp73Ge*I[@;A!\h4(G@jalM,sSB/\k0.@:7!I4g7SOJP1@r[6S@()7=AW#NiY5]jhjklU9#Yeq1G3=`>#gR%H&o:oo)+\iiV+b@&HA><g$JI%r"HcA+VXU6d`Bd(/.NZ!V++%V(dV#M,5VAW3&_;K1JZ^k/TDpiX3ndc.J]UGcH.[P7SK/]VIIqh%TN72-*oZIKdsUPQ_h/S7Zh:-[KB5WbWP#_oZZ(+uAh[S^d@+8!_KIbC$#?tBN\pT(:%R.?a%f#90mC_H-loYDl"XEF&5$J.'rVDs%RZEu)40'\SaUqs<biS[G))Z/cLN_qFh2T.lLpUXPUk-Giea2\bD3NHte.;B9IbQ-i+Q[7s1pqO'#iki.oTW[Q*KlA9>*;m3q7XBZ%IA!1nX[rjkc5B7Jn_qCnqLKhDgYl:&$R[pgG0,J-GnAY`;U72[.J6`)U7MX':#k<sS19B9W)Ci$Y78?.`t-@0F>7-%D3C1hViROs%QW.MkE!f-^D0H_Y,#k&/BB@.pk;kYc=@)2ZJR#3'UmO'^j$f`,m(@%r!H>&InM^$2kW`W`jWm#oG=8H(?)2ai6c,-8@":7j#C'Vo%>0.Gdi$<YM#.?iRbUbc,fG$qW8sn7Bne7O\A'=.(fXNkcO->2g$(bK!]`NP8inRa:f1AD\3-bRb;nVlK\H1s.Y%Ler$T[b*f$jgB%@f9&3XiCiL>D6m\r1#B0XjOXmJfl^UEqWB>*SIodATS/^9@5$*ZnbOG:<G_G:#`DP[ink>N)ApXGI;%QaHQ`/c?r6?R_\(EJ[Si-%P/J503F\++#Fj@4EHRd/Q8!=XKMZ\uNbd]r[+)DBas<E\KtQ<gDMN,7Y_PI$iD7)(X8bRIkn+.pI9037RADKo$6E,]5mM&$M.>YT%^3@DV6jd'pO)_X3Ws2Q=jDJamB/-/jM"7G2i-["QW^:Toh5.lq,=&1$C=CSPdNeoDmZQ#8<OkPrL=NGjb7-`84V<*tT;E3%FbF&u%:m/!.HNh+:V;rF93oZm:WG@2XWLL8qQSh"GWlgrUG;V#HafC^4kRtb4rt<$3P2q[Z-h6ScKKjjHSs"/83JXJO?BQ#1P+MZ7V`5\Q%,A_`4:?fjnmugG(P_Bj`,Rk,P'7$)O"!1XXJui*B&8(`Zg!3DUS=>Jo.SY7]WKB1unBfg);n#)MLKU=sJ3j0R,*Z![Vlh9OiAK%D%1cqs;h%179]gdZ#OUe3f-38ut,kRu+bMi\Kpgs?\":O0.8O?B_d*2[/Dj/V4Oslp!LCA_rPB"1P(orNeV9A-T>/6:>P$Q8aJI[Yl%k^&CqU>2`N"1Bk:3>"AL-B1StK'Y?CTTC`0=jnOFLjf_@/#[M!EETO2d^fp08C:I8_^'4\VpL[dCLjh]ZL=HpfliFRd3A7?ItT^/%iqAO'+sI`HVp;9IH-XE+qbVJ/guOCjOD."47^B`B$;(A7dXQ"[W2f.HW023PF-tM9>)%84RQDBlP?eeFJ/E)\SZpmW<4^A"es_M*%CK"g"nt%[1&\!G![Y&B?e5:X<Ou4K[ck<j)0+\dEg"p:fD5:b2\B`ZsnXd[c*0teOXHc9\ierOuHZ[?YEUadN"m!?>8Wk0qP4t<<%,72IZ-Th7@?BZNCBi?3iQo<-d^8'm8@8qoAdoga(:($>uQ4=%I]C'd&=Bf5f=_gHipMIMYFc^.F-R,!U%Z_/YpF=3MSCrA?:LZG)%s$fG8P!$X/s7<o[*ok%g1ZEIjXd&;rMUN0#O1<+G@M'@iT\Y?l'Ffp\9T#5lMHhDLUj>=sop:C\bHU9[^'&@uEjTl@s+C;tHN&Ij%9QiHY.J_cX'%1N4M9]2dUkOn/SgWTKGj3m!)nts9ZgV(<On3Kgh]HHhII=f4$S0hu@/R08"n/`Xh"-,ZSQ"!:hJ@)^ijI6?nW<li%]\(C/&JHg%AUB<Kl!^4<P3t*Hn'Y>M?/$PZ8Zs<"U<?+*/,di*VK?Ti#9<7[0jtddh[@F;6J'?$C>[@`E?)`&Fa_R5OnDCdBj:=)%a*tqH89q:>AP<T1l;$'/"U&HUCfB`#$6R]E8X!S]Rts@hPoQjS9b+r,BC#UVUjC+68LOq)D)P&"DJEf]QA(co+DAPF<@jUQOg+XL%G2C-@errfiO[C`>o(K2/9a+1X_o_Ig<)>HN+iG;IN,`BR1aSq\V/:sQ1m@:uF7:mI'\bJTf[4]IC96&G3el;*Ws%)%YnMYLf[,V6%aNfF!%>/oIMC#&Ef/L$^,\oM8G5'X?N(L9\T'@;NTs[%\_<TWN5pYq_0".M/KIGWMLC=)\eY'odWY37hT@7PMTi4sd"n-S>22<?s%P)&!h<V7K-VA;%H[_#;'BY,P,%WC@bbh=,D\E!$&JFZGF2,$1F/]'FUGA%-?1)YDpCiW1;__"J>+mb7caYqjV1>`ao05:)emo<!$%HB+R1!eo+^&]Ahp,"N$(!\'tAEEeNCg9E26^?Indm*.oX]+^;XT-kg%#l6P)5'#)O!1*HX?8.d3AG&]$R=MViF7._;d&F-(APaVL%F$F/4R=lJ+Dgj_Oac`(a]2d/R8^H7u5Ep,=n(k7b^Z?]D^/Q@$)a(^DR'OA/]c2?JZsZ!(pFKJ#o%)lb[2HK.R16'<AY39f3Hu*/%%\o.S3pfIGRH0`gAm@1C&rX(SnK.ME379$'e;X+5<]tNkh;'u&Yss5#<XTqI>=5b+7@jD?[]Tid<R!*=Q>2o$^#AT"@p;uZpJnA`%bK;ET/M+QhFJBi:7n6>p$sH0:"$qB?KcLU)Wd:Q+_q*gL5r*%VKD[KPTKSS5eA,;2=<$5n%Qt*):/Na:<^O8+%A'<lJcdbG(`$Xn%cKc5]hVIl"43DKn1D9#pY1k@slWp'/(f/S^R?'DnIbQ/YN^(U';[*XI`u2kNiV5hC!DfId)][^PUJ&6/g3h=oT-Pr;Uc1_4r=Uh2%O-hK(RP6ak!QOXbTCPrEs.Go2(;69d</hBeR"qK.3,m<m/n&4q0Tf8<EoZjmD`@baR+SIfH=b_E\nc]p2V7:EcY-A>gKjc;,8p_Y%1qm6>j7jVmOCF$Qfh*jKEG2-ghW:ltrVRVi\+R9><cpplU[$8h+$7np91Z3EG;gu7k#-$[Z@PTUJJhY7,<SsnMIK.8Tfton,k#n]%+Vq8]pE7EeF'`jfA"0ZZ_k5k;'`3SDV<`3k,3F>=KgEY))LFNqT6?LSEW2AoI,/_,9\W/@LrJ7cG=`:H:B("HagKHhr`h5(dQ$hf%L*P=T>%a.<`gk7Td"7;6eZ*t[5&PBRi%:4o2Ci[K\o4eEJBFI`3(q5)s(+"Zk,,u37Vn:LFM@$'ZcSpfho_moYbu[3W&A`T`G]YJ%[7EusSV3M5H/$._=V%O:NT$k6a0=.Al:g*j3QlE/]f;5eZ*n.AJK@Y#gCQ+c4ef3@)T(&c**Rqn$^$$q;I"6l6YU6Hgeq_"=C+FF%:!Z17?C3LXIhS+!/-E3U2Ooo.fK_.<=W_R#><)(/Q.O34HjP<nDblqh9S^2iWsUBrQdK9#G"B`qNY=k\BL<7t"r$g?i`gUo_W!:d%Qak`'ff\r.r*&=tA'8';/sV/DU"AI:&p>TS3C[Q$klJCZ<V6Pgl$DfKGW"isEPV&uN\jpB%l=^Bn9Dk5K0odp?n;&j9==*>Pp0E%%e6rVK`$Ylt(%j"0fk?3R4cE8+Hs45=VePNJP-IH]?:l&Z9PnDqM5.g-[dVejWapZF<H4aA/SRPCWLmUYCTkS^2oIPjqPi"&6L2O!%;s?U'#c"$!kYnJNWJ&_$[$3nr6M*';JqbkBf`=IId**iG]>P-!@4`3fU@W$:Ua/44('`G-o4f(Z=V\gG#imn`b<n@]oFR-6XCVoe%`MPekeX<1$Y)c.VXuG/Cd<2[/_6R`t)3N16`^tDil`T3pP4.2ekPdD`Aa"QtQ!LY/=/Hoh)\G61a+E"S`-1"fi5oe#).AjpFnjW^%`H;l'<l0AN`\tq"+1=aBCt^6#&W[H9pEcO38:#%<I1=STNef@bLoF:20D.WZZ5)QY9oi6F0t/dhqe>@/0W'eVO%0sh.HdjM/-Scg%B,*RFM7XB%`/=r`KkEFp\'j>f]]6oN1@R")B53$I.iXTC!1BP`Fu9!VBoW2dU&$UQd<*Xf06%2KFr53ph.^&td<j[0Y/KCkrUPUq%>4r@WG`X<8*RdjZ9@8<NMBdjM0`@r4/Voe+,-1,JAlYugc0(Vso>2lh]=dlDYM;AB"Sq(>T>1<HX7(?-JN'18ro@p7J%@dkl.8%C%a!X%Mcms=dht(X?q=LLZII`lkVJ`<$]2(Y_s$WL9Y`n6:jeR<sn[-]fdbF6jhg:so<Sil<I6MctM09e5oD(W6^H[#&"n(.n4aZ5B%-Tl7@+&?3hpTO@aO8o/6qX:n@dr.GMhf&JUca`jRmsY1thti`_H1q5Uq/*nFU[Phpkjqljp#Xf>p#XNq[TD>\p<WTn\)2]'^OGtI%GJ*W2^Z2YMf6;\hn+j*sI/\?'nb`@2LVD]Y5OSupqnle54hp"fs4cH(8,hoErhJBJHbT:P56"E+hs^SDhu<k0jp1nDQi+W@qK"mr%7:5b@J+t\p]0GkQIcuiAq7lshYP@jAr3-*T5P:<AnPB2Xs7g6AlA*.HX+0ojIEd9<o7-'rro2i2Oh^g<J+Uq!m`3'$l[S9)rkfiX%b('>]s2I;!cX6>Ss5e%1n\>(JJ,WgTp:pNDJ+oH3qq(eITD88$q2'UrXZuWB^[3EKa`m[42gj4QJ)e<>R=G3!5P$PCpO@S^p]'SM%Idgu7qX8n$>9Co\36&un5*#/QN/qIr*96&r+34.9`lBetNq%+JO(3PWj5Usua7qX6a"]c<nSsMK@sf9VitrlYpc-:61&bN"j"Km$%??kF1^\U-gc_%lBahmbDIoifQ;s?mWhmD;LXq1))b$=/^U$=AtD%*W(c`PteH2j)cpuKsQ^])?"qR3jtIH`\FS%"XSO`'\PbY9n%%1k!_nM0Qr8(?Y).DbC%RDP+ZuQ#D09Aa^uFe@_uo5)-cLO__J5bdUO1Q0!2"%c6\<CKn%-b&ZI%oIj;!QRg6ZE_EcaZ%&h?<WB2H%=-i5&]<[A(@.P0@\]e-,'#$dA=-e'Dh\kl6o<mZ@.uXSPHL/q_5%Sr([ADuSP$I.-<n<%FC"_>O\!FGpkt;r^6b'P*:YDj]CMEVt%8Gb)h5Ep/i;6MS+S)N50Zp&sK-%1UDQLu]=[u?X8DnDeUIUUY$E:`5<p%nY8T1]']^Z`Z+Mg\BBr]RE\a0kQ_BJ#'YDf;B&ZI1r)%dso)#,PPj,9?+`T>Q41F]:qf@oSt7?Y4QeX5N=2@J@*)U'trr)Hps+ROoPA7YNXN!b2X5Ms&]6tTqD5U+8WNd4(IA.@Qri71OB&g%TD9;\q:"6rYCGgV^AXu/ksp6o++<2trkTIbJ(&oIHY:QN7c+13^O5DdKqGXF5PjoRr!,IcfDbc1IDt+@dD,6rIe5:c+oBmjVa(43%5Q#)"ott-WL@StBItmW/E<##aoYkI9Itmi5d/Tq,pdK]+#JT\'J,^VgPMc*>rqQ6d^-D>)^\?M)SGRt\\+#0ekJLZrh4K&^+$T_:%5'ZKAIeS&8cFL.Rn9;NkmP3"X`Ws6F\"C9mF78YgdEh`lO1t(JDn15j,L=Z[agjicp<B6"hJ]83bN$)Ra7VEpa)O8&lZ$0jj*D]s%j1$/Nof0+pEBT?JEEnRbH5tPs\/r]`33L;A4c\iJ>`[qA^HSf-IfFi?CH%\WOKtAfeb0P.9'A^cP))CT09.m/D%,mihe;KP/KDmU%dZTirHf2?dU"KhfP1]me9l_lBLNdZFrpKF\5rC:%IdDstOacJ#H!n3j&tf6rhkfBi>d;/.M=+HHC\8$M$2pEt(GMS+DjmP@dAJOT%lTi"NVY:KIF!Du`7-6s5UW+0],ho&tg]8mNBn>ic+G8/2GsFCMerm;iYTsr5R/OH-:;Ye]Q@cI*#DuA6[k>-'XPuQrZ%Q^uT&"ra%8kkLtL(7#m-:ol(LQkGPIDMA\Wro$tQHf$jH=)-C!Jon@6Q\YK=R3jGXsR86,bAC^h6'RV+#liT,lUi'P9b-*0snk*?S-JjoO1A6%WdTu/*h#7:;YsIbMDC:#n'JF8VR[NA^:SAbk81L7IZa)Ig]no;gZ)c?s),)IZ(KA8/9cH(>hm.n9=W$;lg<lKj^Sh):3h3_CS.E#%0?[odXu2#8oaik$&"QRVX6Z$2lZPc2bhaK^IARg_S7Bf'&sfb1=rYs1C+*ZY93;d/_U9`[b.<Ru/q`1^2CK189.adD[RNm6S[rr7%U%EkHamX^4P2U.*1T'oe']YW4;PbZ)6KKu"RlnSgq'9la7Jh+NY+s\u<@cu8G)d9A$1aZr;Lb-='#R^kATXrKEl^%B.Q]=2G-U=!%U.!L/8YUMq-+@WsZAgu8?*'c""mDmW<`*=f7%fsQX409r&KP-LC3B5[P%UqACD\@l."SfQfd?&L@QHIB2s/9j<r0R18^@&AB2(+K%278*p&RmL7kb(lZXMsO!n$$e8hOVW*W:VC^G";4*\ehmBHNX3r\3"G/;Daqg7'n6:KUI!t8mX)+'mbu?pJ;ikZtn-)/%1+Ar_`%k%aPErjN8<BQ.2RrV+mE+=S#XRf/l*G;P[h\pP,cf!7>P1#+kb<\9_=nf36sr!)=FFcF3#H!Wh!0s3E5IfNa%m_(0BLI]6\rAoc:0E%iJC.+erc&EI7I#>jAcp5Wb(HZCO/U"'jB&&6K.Ys,a7&t*3j&;pRZ<%0QMEgJPF[fU+"1:ORW3653RN!Bl_+Cgc&43\:ksE.61g?%i&;c^3,V*;"RWnRCQoFu?Eu?H/oa8I$YH=5(e';IY*ie%LbVn?O><"HLYZe583YLk+?n#'6s1a[,mW)T3;<:!mPC`TLOZ&'i4XXE%?(TZ!(Y?@'OEh"@YP#`#oH8F]EW=d6I7r-jmq]rAjY3FgfhM.=ipUSSW2!)%VflTQ]oc-*<W[,AFV7UUA3f^?=WtU2od@6lK<3X]%/,`VJ>\dD5]U0;m'hr`VF*@[`<4-K?<>744@RTkO:hZ8UW@UCNH7.hJ;OL^]VB?9u\0,+b)A@s+WaZ^D+?E?03'O2'KaX27`pc=*%hs;fJiSXoT0AaX!+pE,!Ks?NFEb2Ad$)\ogUG_*fl@*9.W^/7A)XT9U.U=-Q4CrQ>Q;"mXKP1j3K#N7SD/?B);7%W<%LZ8\-F&03%AD7.71599'CgqBtA_Wq:RT-&Y]!1&k[r.eN>9>oqOP!,'KL>-EC0'1.]-OAnmZVX`/nRA[B&.Y^6SX_b)!g*@H$;1o<6DXVV\qCG%$cG[nB<A']7Hub<ZIN&O\h,#&.*`n*&@]Js$Hom";d.Xm8#;SIF#*ok#dlO:%@D%Qd1F9c,Q8U:3r3XU'*UI6Uo`HScdtVk7/_eG%V:^430]MsKOs*tcc*\=Ukh!`-.\Di<$eXJB9Ie`sPF.%;6[)6B5#A\D!_JX<hK?$V2/>&#h;,GcUK$]=#h>K\Hf>T2ae:pH%1Uh?%Z(Dt>S.d>h`"@b?;!9[F8N"nM#=LK^R]SWM*!qc\i'f/6_]d=h](aUp-u6tClN&/aPhq_KhuR4mVJdn/2<&+%;O3Dn>tR1p;Z9@J%();7R9q@7G/)UOkFM$gG8Z>A$mK3[L\9FVtOA(pK/egWU8jOkYBJEg4%TW$=LWb4KH>;Oa!!sB)*>0%QXjeItq5nB>`I!94%GpEN%m`pPfXV_;^8k4D"kuk[mg-@qtCO4pnZd8`iq#%6u[9@+@n"/k$!":eq<]`kl;Q8(4%i(ki3DN\!QiN0%pD,*4`Wks;:&3<X\9kpC%M)BJ*2;KS&H4]fRCXB$spPasKG*KB]=4[W&1A8\J;c)\C@NbXiND.UDng787S*JE4M6<Xfa9cZ\':CO'`B[G&aFA!VI?Vp1)ULHq%h,"iTl^/9WC$iI$9%QYrHGrniRh/oEPd<PB<KQr9oMZL%C13J9Oi[p0f?j2`Hd+EPhe]0LWdE"@g2mi?\8@'6;X61!J=,m29U2eq%_(V/2f`A7=5R>>+nP%B=Y:[?*21-P<_hTf#63cI:6FO3XS9IWVF]&_m@c3qm)TNY:]4.+^Q4G<,/;8/'(3&>5TS+qR<^efh@P!6O%j78-M<A]aQ`9\+7iJ6CT>Hl^W\K.t2.j#A5Jr$D+2:S5THqrdM;"m$Sl'\HlTHOe!a+npGNfVMDF*Qt6aOB#t=s(Xd01%TOK%fHX%Q(9UcC^Op/D2<!0@NuAMb,'@<VQq_`CncSuQp@'pWg,_pXt#rin:*=j<fB%cS<?^h4+#%Wc]oGA;]o0=<Kti$Se]IOk^W,j[S^Xq%dNi6lOI'B&<J^g0i&rdal-Wpp8JIp?-X+FJTH]/XIkqg"eGB!1LXle%edia>]946#i`qZXO4dOf"(EJbR*$_^Up@>!$PEZQj7@6"%Y3B3QA]`,EjOi#h$!=Q:a,?_"($^_Q6RUYWU8u\$+2Ri8,KR\QE^7id#>D832,ml$qK'JK*+%2b]uf4CXeXp)E^?Ef$1X%d.eEW4%AdO$WZsKnd)RS)5UuHr`KLl28*Zc/qE[gF/7!)OI;81#$8Y(M9:LXu;e9XMIQ'^a*Ck]knnR,gcN981fQ&";2*k38lmAr-b$CLcA%@5cR8b>J9FE9Gu_p:Cl3m^*ifr?Kq>7HEF%=f<".U7X-.T?rZp+X<`J2UC0X.9)HCodT*.(nKn0(SmC31gQ:HEZ3j!RjmR5[%8oH%/nO@r0BjoDL,PD!fSBX,E_4!68_LtaRBgh)&@h$_,`f,=oNPfEdl&7eSRZ]\g_TFlf_7B_mJL3AY^PA,[u`cnfMN_GD!cnS7@l3!%n^J3+*C^N,%G=X%N4=RRAFI>>nOSZQ2WLMu,#J#"VYpE;oZS9349e\BkW0)al"]Tq$&FR#?n.Kp`"k_t;jK@5GdFNc:;c5Q>Xc]V%ie#qg`&T`^TLUC(dA5R5UAGjq@j/]O!"ij'6;PO.%a7^fWro\Ac?Hd5WIk\:\ab2ai%ej7jakU*V[n@%cs<i1('>/1Kce38GRIcf%#=0-8FEhtUZNko?f"8uE#[FrrakG/1#DkL-JCoY[VK/r-9Qo7d(D(OU?tRm7Q^F$Lfo<t\V>HBWob!P`AB3PtZ$"sTK849s$fB'7%#D`EV4qWEj%il5QirRWM`EKRg`I9I.%6aJ+M(LEZ*e3h$F,1T;2q\:RYW&7khYM3;A:7:^ouL^S'9L9]!&iheWEb1M7S)SqJs/^c%&rtq>0$/D4G\i`<SZtR=pG_(BO'JiM8W6n6=43sY]>PII7&Y(f-%"'[Klj(se6a7VbQ4s.7&44/cBpT3!l)A-,c,Gb-@j^M^1J3&%k(JIEr4`,7Q5t`kK$k=rN#:R$>sZem1Ce)2p';rh6I$XGA8bi4/=Hmf>;+jEot_hflY1@dl"D8m0aCAT@puI\Y2FgU8@YbM?t41A%ePuSeY=A@P^Y'.sZ4sp@YTb+6IVcpO,pRU(#G7@%'&kU,!'BAE<U0>D?j2XY&f;$>A#a?qSiW<=cB*ikN6!85ACFCT`.Ooi?0EN\%E&<&0;lhF-rXNkh@RS\_md!,ii[tApKVU?h28c5^Tcjku_TsrtV^d]=9=T>YQo#:61ma](W\QK'ZnaDD"0@b0ihnJMWi1^!Xs;9n%4_MGF'j.4Mf&fU&olMMZJ-D)fXi0+R>_p.d<oU<\Q2'*O&:`GgptJj/DnA=5D(G/.`_-.0M$N^h,4UF#hqsO>Q2#.n9)Q):-2qLM%@SU<+r3`dBIr3s`rjE4)[p=g)m6^`uPg%&f:$#(HS]HN[40aM7lha<P!=?[dTS_^_=5pFP/+M6c$h7jm0`EOR`*Z:VifAgL'7Vis%1\!uV6MqEP&V%4jN;*JfM8,uH^n;WtpfejV$8<8glRVMWqN^hkI4"sWmh>58!\<fmqF^[n[M"(CXMc2h1\')N6Mpii`#kX;r7PjT%r)qK<r.PUt?UraBr3a6MIpoi!>DPL7c%s+W=sO#_!fZo\8M]99aP@;@E$bM=:>@2qB]ZG9+0GL,p`jT!rn:J2^D"-hIr2:*?Q0CC%f>a*N4*uB!rb*Q5nRkGtiii#*nOF6P'7Y\Z`#hr%&q@&<+T<]U-Dt.+^SlM(21$\L>ka\fonE1I-"<+1O#S6uim3l#`1P3_`#g-Q%n`SWX(0u!u.;Br\^L1<*phO@cr^]1aiX^>n&V&P-r,!80Dn?X3d0tX%Rk]b7dRsG*feqbBfOcB-b^qoJRTAE$\:TMg`1K+K&:a+l%5l@$g1?-V#T+S=)Q1t`YcfM^@`1OLKifB1dp`jT%ri#!9nJ=\8Y_Djnfn&pV'!>XEBB%8#$H-<DIl7#P$h:]3M8/gj\Y1i&rqoh`%r-?VIMb$q/09.etPRI"?bKI,Xpksau^gnbji[!dnD-r.7W$97]lrW2mh_ZZo?\uOjUddtQQ2#E;&'0J"F1Hsi(?-u>fJp@I&q<)H%H!0^#pmX-/Y\:;+pm[tkQp5]09dI:gh=qSps$Zdq71RCmpiGb=%CMJrMgb`Vjkf';LUIbDd8`IuU8p',hcAa_>;+Sn%9i(+;XqP6%-N<"\"1Abj-9<]d.,SLMj?ie?7,c'0qPh,$B=&&&J$-_^7n0tE5BsA&r-@?;Y^RntAh6INF5d_JF=tG$[PJ\<mETH3W"X1pr`WZb%5>7bL/O%KUa?U]7pk-S>dBtLpkITfoT>-eG^<a`)liUoMmjU/L2OFJLLd.5!o$oi9J$*T_r:r/pO09>YcaD"h^,X.^`"iaN2ac'>%0+ajl-2u[d"s,S&`#ig_KNs<tpn4U_L%mG/i5?_MKG/k),Yn9J%s$[UI?:elqb$d3j."(S(ZGtN1@Wt2-2un["1Abj/j!RrdtRSg%C"PP<>DPLf6%S)i2i,69#4ZmF93:+k`]O6hM*H3O+TA*>2819:`1K-TJ6[mp%pZoClmqTB!uE1lp6GFEn,pU9$s^@K5o8P,hs<WN%B&YHH0&=G+L%t8E"QVoI\Ql54Zk.^a^``W()Yt)Q#4aBPM8)$l4m[`$ibuifI9R4'E[LeF%M/a5I3Jm_*]bD[im/hcCT4GS?]5nL%n2W;pkOD&L4@^[r@cRRtc/42WH0`@2dn9O`j>,Ksbf!j.EPN@LcQ\\fSGY_Oq(.J9p71o9Oipk$RJRrna-HGkaQ,8L7sji]phTOh%r(W8jo]njA)$&ZJJ<fmSCaT-b?&66/\.F.lY/FZt/+H-N9)K8Z'7VC8&:ZqhnHUTXJ,UdN5B"5[lPJR,HWjZr$h5%R*3bk+F4l->%M\7Z.1tYpq6Mr8DM8(aZfan'7`#j]L1\!uV9`3;cc9hHf0[PY@671\fJOo]mB2"R<iX^f8On]%@`8?5a3f4=88#'@G^G]-PO-#e)%,@i,"oMF!c4T]6TNu$PDr8E`RC1ndik]h1qrWo!L5FeE.n`QgM:Adg^%ILr'quLitDaL)t(ZJ5Mb*D`XCW"0UN373Ub':M&J4G(2%Uf&gEBns3n4V^S9dDr6?odS_<TaVd.ruu#Li.,`J+.c<7*p'".]+8#mZcIK?o8<<iTD;Mukd^?5&XJgV0A3>DMD[P#VB0(D)Ff#:%s,CBsq91EuQA^-PHt&O:-qH",B;1=eVMEFqB#PL_n-auqF/B`Wo=6%&)HG8AQHP'c,5hshhAYK,#g:A2m$7U-MPa6SN<_pncP/ET%U8>P<@ZGnN%[F_tMHU+&qW\_Eo-6?[5G;,fSCjDjd8K.GXO"Y%2(n`>ado\X\'Mf1S:p#%l_.VE#N_L^Y'!:tNq;_&)P\*C>7qOn%!$Z>1<rJBY,Kg6?)(YY&pTdlBa<C"`kqI-klrcu<d7#;hWXhNXDhgkMIYL&D@N"Ns4/C'=[EdH)p7c8[JD@Ef[@d.lp%PhiW_$ab%pStnc2Z5cR?.7jZe8oN+\Hm#gRSF8srLtPfpPd5_`2:0T/@/X:PY=`G5GAM`7I@D)>*o7^!tB_rnOQEAn;'ac2:6PQX%9J<5]lGU%LRP6>8?_MJG<5Om+r;:L]l@_/RuT\(Lr_h/:];7h"b?V7kF1Y&jW3X2Go1VRQ_;rC7)UjR(k@b/7Hpcg"T#_Z8QNBli?gD@O:`K/%[d/_n,4;4#%oj&95d,%-cge&jW,`LrW^7@Nd\Mrf=b9AsdraiB]I%oYYi%o:e/76_A[%0o/9A."PIla$Z!dN>GG[aI]kb=`)?]Ye%m*a6C1,Mmpb<@cWS4Vbn1mM&Pfn%p)nL;R!63o*sJIEeO_TGI=--ZueZc5U\,+920d'Pq`U-1KV5uT?'8\P`K/PkbrOE)c8l?,L3%KtM&c/4+*BZ_2DBhud+Y.,C'#V"obFAir+4jJejmS[;d1.#Qfb0Js(MT%\t^qk05t?Hp#[70%No0fn6m\oApWQ\;qu5th^rbHSJs%)37P?-%0^'oXc'"i!P-rE$QDYb+^)CgT9]rfr<u0!r4#KXC0J<XMV3>9K_+WZ"`JHr0k\jD)u+2W^p\\eK#r=X#fp.YRaUM&e+3H%>J`_thc$9oh:,1?51eNY6_.pr!9Q.5#^FMRFMQ@m1gQ5>9TnmAYJ`%l/A<-5nJ`%:3a`+eBgWH]Ab,8,9IOQ!\1u6lV)Zas^)tnW%njC?QXIK))UNnka<@=p!^[l:Pl66YPT`J9!1,qTUT9GE2ZSO]R>Z.T-f]>91]YWkYH>uJr*!4bm*6:_RKO2iJp(X.Ym3jp=roZPR%7ia#S(2XUc4RDE05ca"8<X,?dG7@KUObel7Lu$(.<TT7.XS@Eca[detP936^dnr><LC<O(@85u05o=R[9r]>%ME=u".CiC+OXK`g%HkqUBZAM:f'l0i7N?*+u&4nY[l,e9md>-d1`kYJ('O<:&5nrH`OBt:MDdb-/#t"thLtqm-0?RW8"p<>!TWBmdCse9#8Zgil'-9jI%;/iAUSgo&m'YuFG4&ji8.[RHO7q157Dhq^5LR$uZc+K0R>#HZ4!96<SC[XO.C(/o\>W_SW_\G^H3d`s?miApgB>$?2X437RRcFf+%<8KD>iUF+!qc>>ml"Ymq9AM9tZhZrM*'/$\il)m!/.q/%coV[[$.11_YR6,f_F$Z$4+>F9>PJdFTuB>cYD7gf.<"(M4EVhO>nU5#%2fC-\A=o(BO6m4CF2Gl4A`X'TO^D(7Gs\MA=\!KVSEd)s^=E3d_CIl^GN*HR<FP_IkT]^3e/_J'D:qljHb?m\cr"XtbG9gcM&^b0%<&8I,(/9@8Ri>Ac&_'AdGka&Wc'Z.VlDit]aWP9io/%Z'''ZS,5@ULjh4)/gWc@bl[*\JIP>&nClPLGI7&`lk'k>ZE>Ak?U[DFD[%VbTW8SQSV=df4"%/+;_e'GXj/e=RMK2#tu7+Gd;8Q0^!%^Z@22pBZmYhI(X]`Z!R<LKFfLp;Mfk(tE9O["b]7S7?T+A>X2VZgM*>%.Ak)sPDpkG,^O9%J"=*])jAAUer;,M9N9<KU-aNuD%H))0OrjR"t:@)fai3CKZK2E&EA/Yn*LaDYihdrb1R15Bd1E`<ddQD_Frm;%L;Y/pU*bC&fpPo'-HH?P>4m#si8?kH,T@G$IMsN&64mF0?H0r`TfF"2#8K>cN5I5NO;uK78BO39QG?H(>B40V?*L5CCt_e>]?r,j%N[iu:o<.MB`kf\G-__tn\t(s7"2?FOR<SZO):]d'fG`VpTr[^sB?X,;=PX9$pbA>l6fVqX2>('k>`uZ\,DWhsc;(00a*/_1q&+Yh%leKAHS@tb):Vg_-3,c(hZ#d?`U\L2HU.q=+R!D'adR:@2F2i2HmlrQc^#[!`bQ7qHo^MGgSILcbdBa">WgqBM)6V8?X?.t`'@?n>%-p&j[Ia6a/%dhKeZ5k^Mj!k+LC243%f)rjjqK2jcr+HR'+P\2e9sFe4I1I],pc4a'Z69!A<GNbTKuS%s87Ihd3ZK?4"1&u=Z6O0g%XAe%Fb(Ja?<I#'3]%Kh-<?G4&0Ea7Y)+U]=(0?-7GJhLj#BjC9.<q4'q*To#8`Js:c>S`SY#\b&h0><KK%m%p%il7ES?amf2lp7'%Pg7d0F(.AHn[0@.g2I\)o4or4YO+M0g8>tWh>/-')dU8/Npkr6<l.8S53R;</+7UDMUY1*pR2p.as&4F&s18_lki]JRrKoLo-C$t%1!eWcV)!/L49E/h1`eVT=d=LXpJj"]^Kkim/bn_u+$/Fm,[tMGWYH4EHWL)tg7eD?>]G,I%(q"I!1kK@C:*9L^A1:fC;QF;f[5Ok%r\6LCT-m[eQ9AfIm&VN!PPnh_'VB%'rlOf&L@d&C=qT5=E[9$AgG]N!WSR.2M6_jjGOPE`oQKMXc[W$bHq9TCaOFj4NnO;QS$$9n%@P1aga4BL!MfMgV8TDnM$.NZdlCPA96ZcI0-R/A./`\K&.Md8:S;1]X\#8d^W<%p]#?k$'..>h\UUm[iC("EJ#f2r":mY;t:;7OU%Nu428K^cjM&7'Aidh*K!J7.>(&e9eq"3CG$,7,,+?4s(X6/c5-<,8.#KW3P<TeKZm>nb]-\>NhGCsdAFjP057#S*%=_h#J0K\44m%0A,oj):je$nXdY-7R_h4/f,:X,fM4XN<1WPgW$,\`3c*>>Y[j=N0%W-5eoVgOJ0EN,@86,])?rEPjYRFG;kh>0-ZY\_-u=*@lDfI%SK40"g7m"TpR&k(3V?iWQ*pkq_7NpV_t>`!oiEtj=^#jE:%FP+.Xjk9rL'_pKJ;XL%WnK6W@k:4]t5EiED'BTkfoIF:UQjr,LicA%n1Busc<W3]HqC`tSZ\1+o9i!*?Zs/;_Y6ZG9;5,26_qC?NAu>JER:8K*=%6se:?T@KISPFot=r?:Bd*-Ytn&:_Lldb[Z4$]aUSTc%l8e0a"k]9rDSH%mf/HUE`@D9YG5FEOTL;X79ujCYi6r^?;pU03T#VWSkA]+IZm,V%/u,;E22Fm"j*Mh<81l<Gh[(1il&5)6Bn%B`%V"+gC^m&gBFB<H.PTq'$NBcAuO2!`<$53`Qal&raVpnL^BClqua=7g/6Mr"-7(^RH7+!B%ZlBa>"\2T.9U5`c%u9Uk8AUU%_R[q<%$Xfl[2V^%K&)Kk$kHnteMlK^C&s?X;GTd0S4(Nu,Ii"6AV@`uoSo@(_?iM11f07%-%Lr5*5klCb^AV\f-T04U.E*p</bq)BPL)Tb%Wnso%@8kl;b-Ek`aV%D;G/A;4_nE.b,B_ZuOl36emS%]GXPAo4.d8OgG5b<':S,o3b(T7c^[b*>6KCR;=&ip[#08[VqU5Gk9l3dG%6L]o4MThOUU$.DkF1"[,6`R$Q#9%(S-B\>$>:]:"Na$lUgTeYfFJhEs[:tAPUj7Lce&lP>]2Yr$+KqA$_&pOb,%A+>?_p6?r2&;6%gC*C*OCmDn>toKh6_XAW<P8D^=FX8N9-(86p]EGtr4op>O:Hke(S_5F%jtC?=Tc8N68m*/a-oM8SOtEDaEI$4gXf`?('KlZ/42-M%bg]V@lmcP*63fQ,:O?feL8a:rkk9U[:RlV.FFee4S#!"$ZuK4iIL><j3&9N[WX>!Ar,o5SA%<)**,&_43.mL_"X'fF6(m2U)\?=<%h-m]:1F?V7[Z\&TJemUnm^dQlALPYi9ZW17VVZtWKi;^tZIEoo0'1F`OYRZq8<]:;ADCKr`dC@_B\j&\Yrnf#%CB$bNdV.7qTEOg%+`FZ;R\[#e'JnY)(X1aLL&&?EUc3:0PGFBH1+$^-bCWVG8q5"XB2R$X9<\s2h)[%?5gXW-R3beL`Sr)6h3b8qK*5_ukn_<N]h)ia%=`8Ttjg)n8=-rH?X?ZL@*M<,pPWnL1kIpEX'@,7h*Ue=Qq=@C3omO#,rKX:Y4TG-AiVC)mIGaYB49&WY^>h/bn_3:N`nu9r'<>2Z%L21F$p<ri0<!?TQDf#0%pMNpQqY/>p,?*n]]_>Kus8VH6gHP/Xf3WloNku8*69;b;q:9^K^%ECPRs]!5]YF+[cMpBr]XIeTFEj(e%>MJ+ZKtIR055pUdG]!CR3rJ6to]pFCdOTN[]^jdWcX-W*\,SA?RaHV'Ve07bjjf]i^?qK[r5?4Z%mIYh[5X])UMlKkiOdh4GgGto%pLh\<*`(\lnCb"Yrl3E2^@oBEhtM]ns1ImACCfta"aY+`i28^;bW"UfHu=;goWe/'o()\J>\u^_07V\kTD`pT2?`n+n$LO0TCV?d%cX6_IO+6`;$bu,_bKiE?ok1J`5C`XRb9)!&U$#4D^%s4<o(cpjs75gDf:RQNPiVG6+*dg$T1d9$$6F]UKjXdoht?&[!SstVXo~>%AI9_PrivateDataEnd