%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 05-15.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Volker Herminghaus
%%CreationDate: 11/30/19
%%BoundingBox: 0 0 418 145
%%HiResBoundingBox: 0 0 417.2773 144.1079
%%CropBox: 0 0 417.2773 144.1079
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x409 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2019-11-30T09:57:42+01:00</xap:CreateDate>
         <xap:ModifyDate>2019-11-30T09:57:42+01:00</xap:ModifyDate>
         <xap:MetadataDate>2019-11-30T09:57:42+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>88</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAWAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXj/8Agf8A&#xA;NZrbWNL03zfDeW0j3ETi9ljvvTrFMILaeK5s7o/HE9qZaydC54EtyYqluneSvzZ06zL2fmGw1Ky+&#xA;sPJ9ZIju5hflfq/qVTTJ5C8Nx+75s5EUShSvFKYqy/RdN/NORdRnfzJaX0U9rew6cUa3kjtb9ZZI&#xA;4fUMVjCZ1iCoH+JOLhwUao4BUn8r+UfzSsY9b0rWPMFnNPqdndS2iWtysN4txIqxJczTixSeQpRU&#xA;WVacKAcWHFUVS+x0r88rDWbXQ4L+z0+0Efry3ypE0F3cH1HMQmniluZJCqLzZ0MjKrsz1oWKqmoa&#xA;f+emjaS99qvnXR7KeX04ZLu8lhhtI29WQr6YexVeZQqn+VU7DiOSqeax5d/M3WZrd9J8z2V55Yns&#xA;FWRZ4rWb6zMYxxn2s5Y2R2Jf4Tx2WgpUEKlEflD88ba3S2u/NsDLK1oI5Gu1RzPCtt6ig/o7myyG&#xA;CaiBxUN8fP4+RV6l5eh1mHQ7CHW5kudYjgjXULiKnCScKA7rRIRRm3+wvywKmGKuxVh3mvS/zCl1&#xA;k3Plu8ghspLe3ilSW4aKRGhuHklMUb2t7BylicJzZainyIVYn5R1T81de8vT3dzrFpaahqUM1vpM&#xA;RktEAu7a6cTmNIoLsnjCnDmZH4MDWJvtEq6x0/8ANXRLA2nmzzhpkNtc2l1Y2DyXIilNybWNLVxO&#xA;9tFM7o8csjHny3r8VNlUNPZfnT5fGkaRFrHrJqLy2qXM80F39XZLRPQ53l1bwzSSS3Pqu5MMnwhQ&#xA;i7FWVR8Xkv8AOh7VrO88w2U9k89/JLbXPp3nqRXDK9qjvLYrVYiX+ELttQlaIgV6D5Ut/MVt5eso&#xA;PMlzHea5GhF9cwU9N35GhWkVuPs0/wB1jFU2xVJ/OUdzL5Q1yK0vk0y6k0+6S31KWU28dvI0LBJn&#xA;mX4o1jajFx0pXFXmHkbWPOVxrGmxr540e+0V3jkTShdie+a2WGWaVOVxbC6kKrJEQzsGZF5kryph&#xA;VLtL1LzLpwij0j8y7HUvQa0mu7K9vbecXElw8rTJb3Nxbs7o9Io4VSQCvMFlahxShNC87fmHqdhY&#xA;3lz+YWi6dLetdetazS6evpLHEkcaqyQXCep9YuFfi8lSnH4d2UKpppXmbz7Y+aLey8w+f9JRNMEY&#xA;1y0uES1jkdJUa5Ec8tlAjcYriNV4SDenLepxVU0PWPMlv+mGHnHSZbLy7puoG5ttMeMJbyfVYHWb&#xA;0YrF1cQTxys3FWKlwKHeMqEq03zv531S1t7yP8ydCtdPnjRYnnmt7S5Zg/GSb07zTYy6g8kUCNQx&#xA;AbkvxIylNvL/AJg81aZqov8AzN+YOh3VkyyyXtta30BJSG3EqmGA2pNI0fk6RkM9VfnSkZUJff6r&#xA;+adxG+k3Xn3RrPUZI009reO6tkkmuLiSP0biBoLZriMOswQ8lQ1HwharLil6lZfmb5Hvdcj0K11L&#xA;1dVmllghthBcAu0AJkZGMYRkHE/vAeOxodsCGUYq7FXYq7FXm2mfkH5JsNQlvPVurr1po55be5+q&#xA;vGximSZVNLdX4loxz+L951k5MFIVW335A+T7yeWaW8vlaW/n1N+BtARLcTxXDhG+rl0o8CgOrCTj&#xA;VS5XbFW9M/ILybp0lnJFc3rvYXMF5bs31RSs1tK8yUMdunFayEcFooH2QpLEqobzB+RfkuQX2rXV&#xA;3qFVkvdRlSM2pq1yoaRfit2Z1/d/ZcsG6PzXbFVW/wD+cevIt5cx3Jlu4ZUjljYxfVauZ2uC7uWt&#xA;2Yt/pjDrQcV2+HFUbafkl5UtNIudLguLlYru7hvpn9OxIM8Du6n0Da/VuP7zjx9KgUKBSmKpbL/z&#xA;jn5GlhtopLq/Isw4t5A1ssgMkUURYyrbiQsBAvElqr0Wi0AVc/8Azjn5FdIA1xe84IzCsi/U42Kl&#xA;eIJ9O2Uc1FaOBy5Mz15nljavQvL2ipomkwaZHcSXMNsOELSR20PFAKKipaRW0SqvaiYqmOKuxVhH&#xA;nj8pdA846mdR1C9vrac2J00C0aBVELTCZmHqwynmxHGtaU6AHfFUtvvyD8mXaaan1i8hTSrWOzto&#xA;0Fo8ZSOd7gGSOW3kjarynmvHg+3JSVBCrr38m/KUuk/4UFxfw2d5Nc6i8sTWwcM0EdpKgdoWKrIJ&#xA;OZ4jdq1NNsVQTf8AOOPktrlrltQ1EzNdyXxP+g0EsnGoRRa8Y0+AfAgAYbNyFBjavUbWGSC2ihkn&#xA;e6kjUK9xKEEkhA+0wiWNKn/JUD2xVVxV2KobU9NstU06506+j9azu42huIuTLyRxQgMhVlPuDUds&#xA;VYzpv5S+QNN1FdRs9NdLxU9P1HuruQFTAbYhkklZGrExUlgfHrviqjbfk1+XNrcw3MGlyJc25ZoZ&#xA;vrl6XUyV9Q8jMTWUHjJ/OvwtUbYqrH8pfIX1mG5SwmhuLcqYJYb29iaPisKDgY5l4jjaxbD+X54q&#xA;3rv5T+Q9evry+1bT5bm5v09O7f65eIHjrGfTKxzKoSsEZ4gUqK0xVBad+U35YXlg92uiCWDV7Yc0&#xA;upriYrFLGQojEksghZEkZUMVClWCEVOKop/yi8gyOHmsbidg3qMZr+/l5yVkYSSepO3qODcSUZqk&#xA;cjTFVsf5O/l1HaRWiaW620EUkEEX1u8pHHMiRyLH+++HmsS1I3r8XUk4qjD+Wvk0642u/UpBqrSR&#xA;zNci6ugS8RjZWKiXif7lK7fENjUE1VUP+VTeQRqR1OPTpIdR5yypdw3d5FLG04IkELxzKYlPI/Cl&#xA;AKmgFTiq+HUp4tHtNQ1LXGtVuBGvJ0twpkaP1DT910ABJ8ACTsMVXpq9s+kNq6+YnOnKVVp/Th2Z&#xA;yAq8fR5cmLrQUqajFUuj88eXZJhCvmz94xmUAxxDe3FZhUwUqg64qqw+btGmnNvH5ncziWG3MRhj&#xA;V/VuByiTiYAasu+KovTdYt9UYJp/mCS4doWuFVYogfTRgpJ5QCm7DY7716YqiOep/wDVyn/4C3/6&#xA;pYqmeiXE8+nrJO5kkEkyFyACRHK6AkKAOi9hiqMlijmieKVQ8cilHU9CrChGKoHQJZJNHtRKxeeF&#xA;Tb3DHvLbsYZT9LocVWeY7u5tdLMttIYpWntYhIArELNcxxvQMGX7LntiqU6jrFvprImoeYWtpZEV&#xA;1iZICxDkhaBYTu3FqDvxPgcVdqWtWemWcF7e+ZDFa3MZmgmCQOrxAKTIOELfB8a/F03HiMVQUHnL&#xA;Qp2kSHzSzvGwV0EMdeTKWAA9Cp+EFjToN+mKtRedNBlgM8XmlpIhEbgssKH90JTDzoIK09QFfoPg&#xA;cVTS2u5LyKaSz1uW4W3kMMpWOEAOOoqYRWntiqlfXOrW9lcTpqMxeKN3UFLelVUkVpFirKMVS2Jv&#xA;rHmGZxQx2FuIQ4/37csJJEPuqRRN/ssVTLFUk1u7vk1SytLe4a3jmguZZCixsS0TwKv94r7fvWxV&#xA;R56n/wBXKf8A4C3/AOqWKu56n/1cp/8AgLf/AKpYq7nqf/Vyn/4C3/6pYq7nqf8A1cp/+At/+qWK&#xA;u56n/wBXKf8A4C3/AOqWKtwXOopqVij3sk0U0rJJG6wgECGRxukat9pB3xVkGKpfoFRpccRr/o7z&#xA;W4qKbQSvEKDwom3tiqYYq7FXYq7FWKWNnpN/5esLXUrf6xGiRSotSoBMPpn7JUkMjMrDoykg1BOK&#xA;tpoGiJYx6bGblNJjIZbBXFOatzWT16fWg6vRgwlqCB2xVC/4H8ifWTc/oxzMzTuzG4uDVrr++Ygy&#xA;0q/X6BToMVVv8JeTTcfWXsZZLgzQ3LTSXFw7tLbqFhd2aUluAG3LFVXTPLvlXS7lbuwsWjvI4HtY&#xA;53lllYRSMGYEyu9d0UVO9AF6ADFUXiqM8vf8cwf8Z7n/AKiJMVTLFUt0qkV9qdr9kLOs8Ufgk8ak&#xA;sP8AWmWQ/OuKqPmz/jjj/mLsf+oyHFUBq2heWdZRRqtkbh1jERYSSR1VeXH+7dN15txPUcmp9o1V&#xA;avtE0TUVaPUhPeQ+nJDFEWWBY4ZhxkhU2wgZo2AX4XLfZU9RXFUNa+TvJVpM01tYTRStIJfUW6uQ&#xA;wdVKclPq/CShKtT7S7GoxVankjyMkfpx6dIi+h9VHC5uFKwmT1WVSJaryfdiN23rWpxVMLLTND02&#xA;O7GmWn1Z76b6xdNyZuclAtfiZqbDYDbFVHVv+OVe/wDGCX/iBxVlOKpZ5drJpovm3fUXa8Ld+Epr&#xA;CG90hCJ9GKpniqQa5/ykGm/8wl5/yctcVbxV2KuxV2KuxVTH/HU0z/mIf/qGmxVkWKpdonwRXdua&#xA;c4Ly45UoP76Q3C7D/JmH68VTHFXYq7FXYq8yOprFaSyXury6Npek2FlLLPAkDV+sBwzSGeK4+FfT&#xA;FOIHevtTIkyoF2WKOOGITlETMiefFtVfzTHvQ7eZfKyOySee7uORQWKPHYq3EAkMAbIVDcTxI60N&#xA;OhwcMu8/Z+pfzGL/AFKHzyf8WjVuITqEtifMerpcRXKWdXtbT02ndFkVFcWdG+CRW2P2d+mNS7/u&#xA;/Uvj4v8AUofPJ/xaN0fzfoV5badHNqdmup3sEcgtFmjDs7KvJUjLFtmalMtgbALh6nGIZJRHISI+&#xA;1hdr518yeYLyW5sNUg0jTOTDToFtTdSSpuI5LiVyqKJOPILH0BFWy+OGRF9HDlqIiXD1ZF5Z8/2t&#xA;1pVzL5ilttJvtPuXs73nKI4GkUBleIykHjIjqy/PqeuVkU2g2LZVoHmXy4umgNqtmp9a4NDcRDY3&#xA;EhH7WBKeWd/Y3sRls7iK5iVuJkhdZFDAA0qpIrQ4qhoFb/EF63EhTaWgDdiRJc1H0VxVD+bP+OOP&#xA;+Yux/wCoyHFVHFXYq7FUt8ya5BoWhXurzoZI7OMv6SmhduiJXtyYgV7YqwC38zef5LSbUk1C0nvo&#xA;1Mq6BHaOIHVKq8SXDMJS4YUDUoWoAu+XHBIc2iOpgTQZUnnHQtT8qjUPrcNsb6yMyW80qLIPUjJp&#xA;QkdDtlLeyfV/M2lnSrwabqtgdRMMn1MSXMaoZeJ4BmDVA5d8VX+XtY0v9G6fYyahYvfrBFE8FrMj&#xA;L6ioAyxjlyIBG2Kp3iqQa5/ykGm/8wl5/wAnLXFW8VdirsVdirsVUx/x1NM/5iH/AOoabFWRYql+&#xA;nfDqOqxsfiaeOZRv9hreNB1/yomxVMMVdirsVdirzJNL5CKe50ZNbsrq0s+ERMNYpbdJFqVnKqeS&#xA;z7EHxymQkJWHZYp454hCUuExJ5gm7ruvuVJdN0uVeMvkaNx6Yhq31An0xyotfUrT96//AAR8cFy7&#xA;l8HD/qkf9LL/AIlEw6lHeKLq38sCcO4dLhZbF1LpwUNzWRt19BBUfyjwx9XcvhYf9UH+ll+pM9J0&#xA;uO0sNPimSN7uzto7f1woJHFFVgrEcuJK5bAUAHD1OQZMkpDlKRPzLzqPyXrXlq6WxsLCy1rTXklG&#xA;iRXc4tzC0lZWEsfpv6xQA8WVq8Rl4zSAoOHLTwlKyq/k9qNnrFjrVrq8QPmEX0r63ZXADhZKiNeI&#xA;bkeCpEFAYk7Hc1BNTdT1Xy5choJLbjvE8snLx9S6nWlPb08VVtJ/3v1r/mMT/qDt8VVYpgdauoaG&#xA;qW1u/Lseck4p/wAJiqXeb7kLZw23HeWe1k5eHp31stKe/qYq7FXYq7FUs8yaDaa/oV7o90SsN7EY&#xA;y43KN1RwD3VgGxV5nrenfmFoGg6jPb6TaXl/bwlv05HOfUSKJQgNvbrGjI6xLUgMRt0PTLZZpEU0&#xA;x08Ab6/jkyzyXeaLdfltCdIatpFZNEUJUsrxxcWDFfhJ2rUbHqNjlTc9LtLkXETSBePGSWOnX+6k&#xA;aOv08a4qg/MP+8EX/MZY/wDUZDiqZYqxnVLkS+ZbaMLT6vBdxk+Nfqclf+HpiqIxV2KuxV2KuxVQ&#xA;lk9K+sJaV4SyNTxpazHFWRQyerDHLSnNQ1PCoriqBhFPMV4Sac7O14jbfhLccqd9uYriqY4qo2Vy&#xA;LqzguQvETxpIF605qGpX6cVVsVdirFdI/wCOTZf8w8X/ABAYqjMVSby1Y2Ngmo2lhEkNlFeP6KRi&#xA;i1eON5d/2j6zPX327YqnOKpNrVhazaxoF1IhM9rdyiB+TDj6lpMG2BANePfFUk1L8vZG8/2nnDSL&#xA;wWM5jMGsQFSy3KAUjOxFGFADXbYdxirM/LH99df6p/6jLvFUbpP+9+tf8xif9Qdviqjpl9Z3nmDV&#xA;zbXEcxtEt7O4RHVmSVPVlIZQfh2mA38D4YqgvOXW0/1of+6hZ4qr4q7FXYq7FXYqwHSfIEvli+8x&#xA;XWnXipoGowySxaUEp6UpQlyrA04/y7dKL0QYq9P0j/eST/mJuv8AqJkxVS8w/wC8EX/MZY/9RkOK&#xA;plirErz/AJSv/Y3X/JuwxVH4q7FXYq7FXYqhLz+/tP8AXm/6hJsVZHY/7xW//GNP+IjFUJNt5hs6&#xA;bc7S55HbfjLb8a99uRp88VTHFUFon/HFsP8AmGh/5NjFUbirsVeIalo/nVdUjm8t6+LO41LToltb&#xA;GeWe4jWVICDM0DxXUMEYIU81ChnAXq1Cq650f86XMtmPM2mPdzCaZbSQQ0EBniCLx+pFigiDozEd&#xA;W77cVUBa+Qvzns4bBLbXNODWFosETPxfhIsktXi9WylKM0Mioz1Jah5A1HAqzjys3m6z1C707zLe&#xA;W16bh5LrS545I0l9AcFaD0FihJERapff7QBOBU31T/e7SP8AmLf/AKhJ8VTHFUFY6nHplrfXkil+&#xA;PCNEBpyklv7mKMFjsoLuKseg3yMpULYylQtRsvMD2ckt+95Yaja6hN680OnyepNCsaR27vHRn+sL&#xA;GY158VU9aAmimJmYiyNmMpkCyFaHzl5Fs57q4hLwT3jiW7lWyulaV1RY1Zz6PxEIgXfwyPjw7wjx&#xA;4d4Ute1bT9Ut7O5sZhNF6kKtsysrfX7JqMjhWU8WDUI6EHoctjIEWGyMgRYTLCl2KuxV2KuxVCat&#xA;/wAcq9/4wS/8QOKp5pH+8kn/ADE3X/UTJiql5h/3gi/5jLH/AKjIcVTLFWJXn/KV/wCxuv8Ak3YY&#xA;qj8VdirsVdirsVQl5/f2n+vN/wBQk2Ksjsf94rf/AIxp/wARGKpZqWo6da+ZtHt5riKO9vYrqG1g&#xA;eRVkkAEcr+mhNXp6QrTpiqc4qgtE/wCOLYf8w0P/ACbGKo3FXYq+c/MXlv8AKe91yW/1rWL631i2&#xA;tbee+toYPVijjis0YOwa0n5xelFVlZmjrUEVYglKVanffltrHmLUNfuLm+tbmzYssqJMsEkthCFE&#xA;ZUadJPFF6CqZuagI/L0w3xMVVdNP/Lr65d6h5m1efUZJryXU4IYtPuXieCSb10heS5gm+BzYOqcH&#xA;QOgbdh0VZbov5I+TQNP1W2u9QYiNZYRcpaVIlnF5++jktuvM/YYUXsA3xYEM+1T/AHu0j/mLf/qE&#xA;nxVMcVS2LSW1XT9QsklEMjenJFIRyUPDqFxMgZaglSyANQ1pkZxsUwyR4hTHrnQdPh1W2jntdN8v&#xA;3g425ubW7eeUR+mEKWtoUWNeSKBydPh60bvHwMmQURs4+SZPpkQPjv8AcmVx5R8t/WFgfWNSdpZT&#xA;AjJFFJH6jfCI/VW1ZKoR3avXlkP5PiRf6WuWnxXW/wCPgjNZ0ey0ixsLKzUiNXiZ3anORzqFlydy&#xA;AByb2FB0AAAGWxiIig5sICIoJrkmTsVdirsVdiqE1b/jlXv/ABgl/wCIHFU80j/eST/mJuv+omTF&#xA;WC+ctU1XXtVg0nTNJiubXS9Qhl/SN4G9EXtsRIqLQruD8O53JpttmNPLK6iHXZdVkM+HHHYGrPK2&#xA;W+WvMLast5BPAba/06dre6iIIBp9iRK78ZF3Ffx65bjnxX3hydPn47BFSiaKWXn/AClf+xuv+Tdh&#xA;ljkI/FXYq7FXYq7FUJef39p/rzf9Qk2KsgtpY4tNilkPGOOFWdj2AWpOKCa3YFF5s816pf8A6Stt&#xA;BgTT7SCa6sGukc3c0XpmpgIIp6lFU0U05DrmKM0zuBs6yOrzSNiPpq9+Z9346s40PWLbWNJttTtg&#xA;yxXK8gjfaVgSrKfdWBGZEJcQt2GHKMkRIdW9E/44th/zDQ/8mxkmxG4q7FWC23l3y/qGnWUt/plp&#xA;dy/V4h6k8Ecrf3XDq6k/Zcr8iRirdz5H8lXQYXPl/TZw8jTN6lpA9ZH+055IfibucVVD5Q8pFCh0&#xA;SwKFxKVNrDQyAuQ9OP2v30m/+U3icVTOCCC3gjt7eNYYIVEcUUYCoiKKKqqNgANgBiqjfada3yxC&#xA;49T9xJ6sTRSyQsH4MleUTIfsuRTFVD9A2P8Av27/AOk27/6q4qs8v6NbI15JG108saFo0+uXVGYX&#xA;V1QEerQ1p3whB5JRrOmapc6gqWDXjXWreol7dNamG3TgQIgecfNEWpdgDR+hJrXM6EwBvVDzddkh&#xA;Ina7lz22/H3st8v6Ldad6cV2EuPQjWO0nj+FIowoUxrExPEkg/HUlu52zGyTEuTl4sZjz3Q3nLra&#xA;f60P/dQs8pb1fFXYq7FXYq7FUJq3/HKvf+MEv/EDiqeaR/vJJ/zE3X/UTJirFdZ8seYbe5v5dGSG&#xA;6S9aSWD1pmhe1mnUCVhRSJFLIjqKjiwBzGnjkCa6uuy6fICTCjfnyJ5+/v8AenPlDQtT0u0ml1a8&#xA;+u6pdvzncV9NFBJWKIECiKWY9B16ZZigYjc2XI0uGUATM3I/ikBef8pX/sbr/k3YZa5KPxV2KuxV&#xA;2KuxVCXn9/af683/AFCTYqyCCGObTI4ZBWOSFUceIZKHEhBFimB3PlTzxb2yabpb24ClYxrDysH9&#xA;BI2iQNBwIEgjfiWUmvFelMxDimNh83Vy02YDhjX9a+nLl3/sZxommHTNLgsmne5kiBMtxJu8kjsX&#xA;kc1r9p2JzJhGhTscWPgiBdu0T/ji2H/MND/ybGSbEbirsVSkeUvLagKunQgDYALsBiqW+Y9F03Tt&#xA;IlutN0KPUb0PDHDZr8JYyzJGTU7AIHLEkgUG5A3xViV95o0nTZLSHU/JU8E93KtunEc4/WMrQ8Of&#xA;EBizRs0fGvJaHauKrbLzPZ3U1zEPy+1CL6q8kbySRMqO6A8TGSvxKzildqdaYqy/y3pmhazottqU&#xA;2gHTJZ+fKxukKzR8HZPiG32uPIexxVM/8KeXP+rfD92Kqj+XNDdY1ayipEvCMUpRalqbe7E4qwPz&#xA;VrtvoOuNZR+Tp9TslTl9ZtEldiTC8g2CFd3UJXlQdakgqFU28vTaXq+qzWcvlmawgSJpYrudHVHK&#xA;ymMpUhQH6GlflWmKsl/w1oPpyRfUYjHKAJFK1BCsHXr4MoP0Yqs/wp5c/wCrfD92KpD5msLbTJbF&#xA;dN8srqiTM7XpjIUwwxgFmFdmY1+Fep6AeCrG5vN+gQ3cljJ5MuhqEUbzNZhKyPHE4R3hUCsgFTvT&#xA;+X+bZVtfM1s8dsy/l7f1ukWRKxkBKpyYSHj8JDfCPHFWfReWPLkkSSfo2NOahuDrRhUVowrsRiq7&#xA;/Cnlz/q3wn2K4qqzeXtEmleWWzjaSQlnam5J3JxV5s/m6O3vLuC58i3ckUNwIIJbZJX5j96S9GjX&#xA;4V9Ja0Nfi6bYqy3yrb6VrlhNdXPl99LeO4lgWC5VldkjaiSgMF+F1ocVTpvLOgNGsbWMRRCzKCvQ&#xA;uFDGvvwX7sVW/wCFPLn/AFb4fuxVhur6J5ptdV1GTT/LunXukrIiWEZJWcx/V0aSQ/Eo2mZ1C9Wp&#xA;+z1ZVKHufOk0sraf5At3t1uvqyNcOYG4cnDy8ZSjFI6A140kH2aVGKpz5W0/zFe30aa/5Ps9MsyG&#xA;WSSOZZXVgOSt8LtVT9mlK98VZh/hTy5/1b4fuxVfB5b0K3mWaGxiSVK8XC7jkpU0+asRiqTeatAF&#xA;roNxL5f0mC51ROAt4GHwkFwH6slKJX+hxViFfzEV5IR5Gs5zDJaqt0J1iWdXYfWqRtK5iCJyKsWb&#xA;p9k1xV6JD5a0NoUaSwjVyoLrSlCRuOp/XiqZwQQwQxwQoI4YlCRouwVVFAB8hiq/FXYq/wD/2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:4A8EF66AE114EA11A9E1B538B1E7E154</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:4B8EF66AE114EA11A9E1B538B1E7E154</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:498EF66AE114EA11A9E1B538B1E7E154</stRef:instanceID>
            <stRef:documentID>uuid:488EF66AE114EA11A9E1B538B1E7E154</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01.2x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Arial.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Humanist521BT-BoldCondensed</stFnt:fontName>
                  <stFnt:fontFamily>Humanst521 Cn BT</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 1.01 emb4-OT</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Bitstream - Humanst521 Cn BT  Bold.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Standard-Farbfeldgruppe</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -144.108 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 144.108 li
417.277 144.108 li
417.277 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0.25 30.1904 mo
80.3872 30.1904 li
80.3872 131.858 li
0.25 131.858 li
0.25 30.1904 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0.090196 cmyk
ef
80.3872 131.858 mo
80.3872 131.608 li
0.5 131.608 li
0.5 30.4399 li
80.1372 30.4399 li
80.1372 131.858 li
80.3872 131.858 li
80.3872 131.608 li
80.3872 131.858 li
80.6372 131.858 li
80.6372 29.9399 li
0 29.9399 li
0 132.108 li
80.6372 132.108 li
80.6372 131.858 li
80.3872 131.858 li
0.619608 0.537255 0.498039 0.227451 cmyk
f
5.25 33.5259 mo
63.8398 33.5259 li
63.8398 46.8579 li
5.25 46.8579 li
5.25 33.5259 li
cp
0 0 0 0 cmyk
ef
9.31201 40.6938 mo
9.06201 40.3652 8.92188 39.897 8.92188 39.3188 cv
8.92188 38.7251 9.06201 38.2559 9.31201 37.9121 cv
9.54688 37.584 9.89111 37.4282 10.3438 37.4282 cv
10.7661 37.4282 11.1089 37.584 11.375 37.9282 cv
11.625 38.2559 11.75 38.7251 11.75 39.3188 cv
11.75 39.897 11.625 40.3652 11.375 40.6938 cv
11.1089 41.0371 10.7661 41.1938 10.3438 41.1938 cv
9.89111 41.1938 9.56201 41.0371 9.31201 40.6938 cv
9.31201 40.6938 li
cp
11.8589 37.5532 mo
11.4531 37.1001 10.9531 36.8647 10.3438 36.8647 cv
9.71875 36.8647 9.20313 37.1001 8.81201 37.5532 cv
8.42188 38.0059 8.21875 38.584 8.21875 39.3188 cv
8.21875 40.022 8.42188 40.6001 8.81201 41.0688 cv
9.21875 41.522 9.71875 41.7559 10.3438 41.7559 cv
10.9531 41.7559 11.4531 41.522 11.8589 41.0688 cv
12.25 40.6001 12.4531 40.022 12.4531 39.3188 cv
12.4531 38.6001 12.25 38.022 11.8589 37.5532 cv
11.8589 37.5532 li
cp
0.733333 0.705882 0.654902 0.776471 cmyk
f
14.4878 41.084 mo
14.4878 39.8809 li
15.1602 39.8809 li
15.8008 39.8809 16.2852 39.772 16.6128 39.522 cv
16.9409 39.272 17.0981 38.9282 17.0981 38.4438 cv
17.0981 37.9751 16.9258 37.6001 16.5981 37.3652 cv
16.27 37.1152 15.8008 37.0059 15.1602 37.0059 cv
13.3481 37.0059 li
13.27 37.0059 13.207 37.022 13.1602 37.0688 cv
13.1128 37.1152 13.082 37.1938 13.082 37.272 cv
13.082 37.3809 13.1128 37.459 13.1602 37.4902 cv
13.2231 37.5371 13.3628 37.5532 13.5981 37.5532 cv
13.8628 37.5532 li
13.8628 41.084 li
13.3628 41.084 li
13.27 41.084 13.1909 41.1001 13.1602 41.147 cv
13.1128 41.1938 13.082 41.2559 13.082 41.3501 cv
13.082 41.4438 13.1128 41.5059 13.1602 41.5532 cv
13.207 41.6001 13.27 41.6309 13.3481 41.6309 cv
15.27 41.6309 li
15.4258 41.6309 15.52 41.6001 15.582 41.5688 cv
15.6289 41.522 15.6602 41.459 15.6602 41.3501 cv
15.6602 41.2559 15.6289 41.1782 15.5659 41.147 cv
15.52 41.1001 15.4258 41.084 15.3008 41.084 cv
14.4878 41.084 li
cp
15.207 37.5532 mo
15.6128 37.5532 15.9258 37.6309 16.1289 37.7871 cv
16.332 37.9282 16.4409 38.1621 16.4409 38.459 cv
16.4409 38.772 16.332 39.0059 16.1289 39.147 cv
15.9258 39.3032 15.6128 39.3809 15.207 39.3809 cv
14.4878 39.3809 li
14.4878 37.5532 li
15.207 37.5532 li
cp
f
17.4609 43.0532 mo
22.4141 43.0532 li
22.4141 43.522 li
17.4609 43.522 li
17.4609 43.0532 li
cp
f
25.418 36.9438 mo
25.23 36.897 25.0591 36.8809 24.8872 36.8809 cv
24.2461 36.8809 23.7148 37.1152 23.2769 37.5688 cv
22.855 38.0371 22.6372 38.6152 22.6372 39.3188 cv
22.6372 40.022 22.855 40.6001 23.2769 41.0688 cv
23.6992 41.522 24.23 41.7397 24.8711 41.7397 cv
25.1211 41.7397 25.355 41.709 25.5591 41.647 cv
25.793 41.5688 26.0122 41.459 26.23 41.3188 cv
26.4019 41.209 26.5122 41.1309 26.5742 41.0532 cv
26.6211 40.9897 26.6519 40.9121 26.6519 40.834 cv
26.6519 40.7559 26.6372 40.6938 26.5742 40.6309 cv
26.5269 40.584 26.4492 40.5532 26.3711 40.5532 cv
26.3091 40.5532 26.23 40.6001 26.105 40.6938 cv
25.98 40.772 25.8872 40.834 25.8242 40.8652 cv
25.668 40.959 25.5122 41.022 25.355 41.0688 cv
25.1992 41.1001 25.0591 41.1309 24.9019 41.1309 cv
24.4341 41.1309 24.0591 40.959 23.7769 40.6147 cv
23.4961 40.2871 23.355 39.834 23.355 39.2559 cv
23.355 38.709 23.4961 38.2402 23.7769 37.9121 cv
24.0591 37.5688 24.418 37.4121 24.8872 37.4121 cv
25.1372 37.4121 25.355 37.4751 25.543 37.584 cv
25.73 37.7251 25.855 37.8809 25.9019 38.0688 cv
25.9019 38.1152 25.918 38.1621 25.9341 38.2402 cv
25.9961 38.4902 26.105 38.6001 26.2769 38.6001 cv
26.3872 38.6001 26.4648 38.584 26.4961 38.5371 cv
26.543 38.5059 26.5591 38.4121 26.5591 38.2871 cv
26.5591 38.334 26.5591 38.2251 26.5591 38.0059 cv
26.543 37.7871 26.543 37.5532 26.543 37.2871 cv
26.543 37.147 26.5269 37.0532 26.4961 37.0059 cv
26.4492 36.959 26.3872 36.9282 26.2769 36.9282 cv
26.1992 36.9282 26.1372 36.9438 26.0898 36.9751 cv
26.043 37.0059 25.9961 37.0532 25.9648 37.1309 cv
25.7769 37.0532 25.5898 36.9902 25.418 36.9438 cv
25.418 36.9438 li
cp
f
28.6089 39.459 mo
30.4839 39.459 li
30.4839 41.084 li
30.2808 41.084 li
30.0938 41.084 29.9688 41.1001 29.9058 41.1309 cv
29.8281 41.1782 29.7969 41.2402 29.7969 41.3501 cv
29.7969 41.459 29.8281 41.522 29.8911 41.5688 cv
29.938 41.6001 30.0781 41.6309 30.2808 41.6309 cv
31.0938 41.6309 li
31.2969 41.6309 31.4219 41.6001 31.4839 41.5688 cv
31.5308 41.522 31.562 41.459 31.562 41.3501 cv
31.562 41.2402 31.5308 41.1782 31.4688 41.147 cv
31.4058 41.1001 31.312 41.084 31.1558 41.084 cv
31.0781 41.084 li
31.0781 37.5532 li
31.188 37.5532 li
31.312 37.5532 31.4219 37.5371 31.4839 37.4902 cv
31.5308 37.459 31.562 37.3809 31.562 37.272 cv
31.562 37.1782 31.5308 37.1152 31.4839 37.0688 cv
31.438 37.022 31.3589 37.0059 31.2661 37.0059 cv
30.312 37.0059 li
30.0781 37.0059 29.938 37.022 29.8911 37.0688 cv
29.8281 37.1001 29.7969 37.1782 29.7969 37.272 cv
29.7969 37.3809 29.8281 37.4438 29.8911 37.4902 cv
29.9531 37.5371 30.062 37.5532 30.2188 37.5532 cv
30.4839 37.5532 li
30.4839 38.9121 li
28.6089 38.9121 li
28.6089 37.5532 li
28.7808 37.5532 li
28.9688 37.5532 29.1089 37.5371 29.188 37.4902 cv
29.25 37.459 29.2808 37.3809 29.2808 37.272 cv
29.2808 37.1782 29.2661 37.1001 29.2031 37.0688 cv
29.1558 37.022 29.0161 37.0059 28.7969 37.0059 cv
27.8281 37.0059 li
27.7188 37.0059 27.6411 37.022 27.5938 37.0688 cv
27.5469 37.1152 27.5313 37.1782 27.5313 37.272 cv
27.5313 37.3809 27.562 37.459 27.6089 37.4902 cv
27.6719 37.5371 27.7808 37.5532 27.938 37.5532 cv
28 37.5532 li
28 41.084 li
27.9219 41.084 li
27.7661 41.084 27.6558 41.1001 27.6089 41.1309 cv
27.5469 41.1782 27.5313 41.2402 27.5313 41.3501 cv
27.5313 41.4438 27.5469 41.5059 27.5938 41.5532 cv
27.6411 41.6001 27.7188 41.6309 27.812 41.6309 cv
28.8438 41.6309 li
29.0313 41.6309 29.1558 41.6001 29.2031 41.5688 cv
29.2661 41.522 29.2808 41.459 29.2808 41.3501 cv
29.2808 41.2559 29.25 41.1782 29.188 41.147 cv
29.125 41.1001 29.0161 41.084 28.875 41.084 cv
28.6089 41.084 li
28.6089 39.459 li
cp
f
35.8911 41.6309 mo
35.9839 41.6309 36.0469 41.6001 36.0938 41.5532 cv
36.1411 41.5059 36.1563 41.4438 36.1563 41.3501 cv
36.1563 40.3652 li
36.1563 40.209 36.1411 40.1152 36.0938 40.0532 cv
36.062 40.0059 36 39.9751 35.8911 39.9751 cv
35.7813 39.9751 35.7188 40.0059 35.6719 40.0688 cv
35.6411 40.1152 35.6089 40.2397 35.6089 40.4438 cv
35.6089 41.084 li
33.5313 41.084 li
33.5313 39.3501 li
34.5469 39.3501 li
34.5469 39.4897 li
34.5469 39.6621 34.562 39.7871 34.6089 39.8501 cv
34.6411 39.9121 34.7031 39.9438 34.7969 39.9438 cv
34.8911 39.9438 34.9688 39.9121 35 39.8647 cv
35.0313 39.8032 35.0469 39.6782 35.0469 39.4897 cv
35.0469 38.7559 li
35.0469 38.5688 35.0313 38.4438 35 38.3809 cv
34.9688 38.334 34.8911 38.2871 34.812 38.2871 cv
34.7188 38.2871 34.6563 38.3188 34.6089 38.3809 cv
34.562 38.4282 34.5469 38.522 34.5469 38.6782 cv
34.5469 38.8809 li
33.5313 38.8809 li
33.5313 37.5532 li
35.6089 37.5532 li
35.6089 38.1152 li
35.6089 38.3188 35.6411 38.4438 35.6719 38.5059 cv
35.7188 38.5532 35.7813 38.584 35.8911 38.584 cv
36 38.584 36.062 38.5688 36.1089 38.5059 cv
36.1411 38.459 36.1563 38.3647 36.1563 38.2251 cv
36.1563 37.3188 li
36.1563 37.209 36.1411 37.1309 36.0938 37.084 cv
36.0469 37.022 35.9839 37.0059 35.8911 37.0059 cv
32.4839 37.0059 li
32.3911 37.0059 32.312 37.022 32.2661 37.0688 cv
32.2188 37.1152 32.188 37.1782 32.188 37.272 cv
32.188 37.3809 32.2188 37.459 32.2808 37.4902 cv
32.3438 37.5371 32.4688 37.5532 32.6719 37.5532 cv
32.9058 37.5532 li
32.9058 41.084 li
32.6719 41.084 li
32.4688 41.084 32.3438 41.1001 32.2808 41.1309 cv
32.2188 41.1782 32.188 41.2402 32.188 41.3501 cv
32.188 41.4438 32.2188 41.5059 32.2661 41.5532 cv
32.312 41.6001 32.3911 41.6309 32.4839 41.6309 cv
35.8911 41.6309 li
cp
f
39.8159 36.9438 mo
39.6289 36.897 39.457 36.8809 39.2852 36.8809 cv
38.645 36.8809 38.1128 37.1152 37.6758 37.5688 cv
37.2539 38.0371 37.0352 38.6152 37.0352 39.3188 cv
37.0352 40.022 37.2539 40.6001 37.6758 41.0688 cv
38.0981 41.522 38.6289 41.7397 39.27 41.7397 cv
39.52 41.7397 39.7539 41.709 39.957 41.647 cv
40.1909 41.5688 40.4102 41.459 40.6289 41.3188 cv
40.8008 41.209 40.9102 41.1309 40.9731 41.0532 cv
41.02 40.9897 41.0508 40.9121 41.0508 40.834 cv
41.0508 40.7559 41.0352 40.6938 40.9731 40.6309 cv
40.9258 40.584 40.8481 40.5532 40.77 40.5532 cv
40.707 40.5532 40.6289 40.6001 40.5039 40.6938 cv
40.3789 40.772 40.2852 40.834 40.2231 40.8652 cv
40.0659 40.959 39.9102 41.022 39.7539 41.0688 cv
39.5981 41.1001 39.457 41.1309 39.3008 41.1309 cv
38.832 41.1309 38.457 40.959 38.1758 40.6147 cv
37.895 40.2871 37.7539 39.834 37.7539 39.2559 cv
37.7539 38.709 37.895 38.2402 38.1758 37.9121 cv
38.457 37.5688 38.8159 37.4121 39.2852 37.4121 cv
39.5352 37.4121 39.7539 37.4751 39.9409 37.584 cv
40.1289 37.7251 40.2539 37.8809 40.3008 38.0688 cv
40.3008 38.1152 40.3159 38.1621 40.332 38.2402 cv
40.395 38.4902 40.5039 38.6001 40.6758 38.6001 cv
40.7852 38.6001 40.8628 38.584 40.895 38.5371 cv
40.9409 38.5059 40.957 38.4121 40.957 38.2871 cv
40.957 38.334 40.957 38.2251 40.957 38.0059 cv
40.9409 37.7871 40.9409 37.5532 40.9409 37.2871 cv
40.9409 37.147 40.9258 37.0532 40.895 37.0059 cv
40.8481 36.959 40.7852 36.9282 40.6758 36.9282 cv
40.5981 36.9282 40.5352 36.9438 40.4878 36.9751 cv
40.4409 37.0059 40.395 37.0532 40.3628 37.1309 cv
40.1758 37.0532 39.9878 36.9902 39.8159 36.9438 cv
39.8159 36.9438 li
cp
f
43.1328 39.8501 mo
43.5698 39.4438 li
43.7578 39.4751 43.9302 39.5532 44.0859 39.709 cv
44.2578 39.8647 44.4141 40.1001 44.5859 40.397 cv
44.7422 40.6938 li
45.0078 41.1782 45.1479 41.4438 45.1641 41.4751 cv
45.2109 41.5371 45.2578 41.584 45.2891 41.6001 cv
45.3198 41.6152 45.3828 41.6309 45.4609 41.6309 cv
45.8359 41.6309 li
45.9302 41.6309 45.9922 41.6001 46.0391 41.5532 cv
46.0859 41.5059 46.1172 41.4438 46.1172 41.3501 cv
46.1172 41.2402 46.0859 41.1782 46.0229 41.1309 cv
45.9771 41.1001 45.8672 41.084 45.7109 41.084 cv
45.6328 41.084 li
45.1802 40.2397 44.8521 39.709 44.6479 39.459 cv
44.4448 39.209 44.2271 39.0688 43.9922 39.022 cv
45.5078 37.5532 li
45.5698 37.5532 li
45.7109 37.5532 45.8198 37.5371 45.8979 37.4902 cv
45.9448 37.459 45.9771 37.3809 45.9771 37.272 cv
45.9771 37.1938 45.9609 37.1152 45.9141 37.0688 cv
45.8521 37.022 45.7891 37.0059 45.7109 37.0059 cv
44.5552 37.0059 li
44.4609 37.0059 44.3828 37.022 44.3359 37.0688 cv
44.3052 37.1001 44.2729 37.1782 44.2729 37.272 cv
44.2729 37.3809 44.3052 37.4438 44.3672 37.4902 cv
44.4141 37.5371 44.5078 37.5532 44.6328 37.5532 cv
44.7729 37.5532 li
43.1328 39.147 li
43.1328 37.5532 li
43.3198 37.5532 li
43.5078 37.5532 43.6479 37.5371 43.7109 37.4902 cv
43.7891 37.459 43.8198 37.3809 43.8198 37.272 cv
43.8198 37.1782 43.7891 37.1001 43.7422 37.0688 cv
43.6802 37.022 43.5859 37.0059 43.4302 37.0059 cv
42.0859 37.0059 li
42.0078 37.0059 41.9302 37.022 41.8979 37.0688 cv
41.8359 37.1152 41.8198 37.1938 41.8198 37.272 cv
41.8198 37.3809 41.8359 37.459 41.8979 37.4902 cv
41.9609 37.5371 42.0859 37.5532 42.2891 37.5532 cv
42.5229 37.5532 li
42.5229 41.084 li
42.1479 41.084 li
42.0391 41.084 41.9448 41.1001 41.8979 41.147 cv
41.8359 41.1782 41.8198 41.2559 41.8198 41.3501 cv
41.8198 41.4438 41.8359 41.5059 41.8979 41.5532 cv
41.9302 41.6001 42.0078 41.6309 42.0859 41.6309 cv
43.4302 41.6309 li
43.5859 41.6309 43.6802 41.6001 43.7422 41.5688 cv
43.7891 41.522 43.8198 41.459 43.8198 41.3501 cv
43.8198 41.2559 43.7891 41.1782 43.7271 41.147 cv
43.6641 41.1001 43.5552 41.084 43.3979 41.084 cv
43.1328 41.084 li
43.1328 39.8501 li
cp
f
48.1841 41.709 mo
48.3711 41.7397 48.5591 41.772 48.7461 41.772 cv
49.293 41.772 49.73 41.6309 50.0591 41.3647 cv
50.3872 41.1001 50.543 40.7559 50.543 40.3188 cv
50.543 39.9438 50.4341 39.6621 50.1992 39.4438 cv
49.9648 39.209 49.6211 39.084 49.168 39.022 cv
48.543 38.9438 li
48.2461 38.897 48.0269 38.8188 47.8711 38.709 cv
47.73 38.584 47.6519 38.4438 47.6519 38.2402 cv
47.6519 37.9897 47.7461 37.7871 47.9492 37.6147 cv
48.1372 37.4751 48.4019 37.397 48.7148 37.397 cv
48.918 37.397 49.105 37.4282 49.2622 37.4902 cv
49.4341 37.5688 49.543 37.6782 49.6372 37.8032 cv
49.6841 37.8501 49.7148 37.9282 49.7461 38.0532 cv
49.8242 38.2402 49.9341 38.334 50.0742 38.334 cv
50.168 38.334 50.23 38.3188 50.2769 38.2559 cv
50.3398 38.209 50.3711 38.1309 50.3711 38.0532 cv
50.3711 38.0059 li
50.3091 37.1938 li
50.293 37.0688 50.2622 36.9902 50.23 36.9438 cv
50.1841 36.9121 50.105 36.897 49.98 36.897 cv
49.9019 36.897 49.8398 36.9121 49.8091 36.9282 cv
49.7622 36.9751 49.7461 37.022 49.7461 37.1001 cv
49.543 37.022 49.355 36.959 49.1992 36.9121 cv
49.043 36.8809 48.8872 36.8647 48.7461 36.8647 cv
48.2461 36.8647 47.8398 37.0059 47.5122 37.272 cv
47.1841 37.5371 47.0269 37.8652 47.0269 38.272 cv
47.0269 38.647 47.1372 38.9438 47.3872 39.147 cv
47.6372 39.3652 48.043 39.5059 48.5742 39.5688 cv
49.1519 39.6621 li
49.4019 39.6938 49.5898 39.772 49.7148 39.897 cv
49.8398 40.022 49.9019 40.1782 49.9019 40.397 cv
49.9019 40.647 49.8091 40.834 49.5898 41.0059 cv
49.3872 41.1621 49.105 41.2402 48.7769 41.2402 cv
48.4961 41.2402 48.2622 41.1938 48.0742 41.084 cv
47.8711 40.9897 47.73 40.8501 47.6372 40.6782 cv
47.605 40.6147 47.5742 40.522 47.543 40.4121 cv
47.48 40.1938 47.3711 40.084 47.2148 40.084 cv
47.105 40.084 47.0269 40.1001 46.9648 40.1621 cv
46.918 40.209 46.9019 40.2871 46.9019 40.4282 cv
46.9019 40.4902 li
46.9492 41.397 li
46.9492 41.5371 46.98 41.647 47.043 41.709 cv
47.0898 41.772 47.168 41.8032 47.2769 41.8032 cv
47.3872 41.8032 47.4648 41.7871 47.5122 41.7397 cv
47.5591 41.6938 47.5742 41.6001 47.5898 41.4902 cv
47.8091 41.584 47.9961 41.6621 48.1841 41.709 cv
48.1841 41.709 li
cp
f
53.8438 41.084 mo
53.8438 37.5532 li
54.7188 37.5532 li
54.9219 37.5532 55.0469 37.5371 55.1089 37.4902 cv
55.1719 37.459 55.2031 37.3809 55.2031 37.272 cv
55.2031 37.1782 55.1719 37.1152 55.125 37.0688 cv
55.0781 37.022 55 37.0059 54.9058 37.0059 cv
52.188 37.0059 li
52.0781 37.0059 52 37.022 51.9531 37.0688 cv
51.9058 37.1152 51.8911 37.1782 51.8911 37.272 cv
51.8911 37.3809 51.9058 37.459 51.9688 37.4902 cv
52.0308 37.5371 52.1558 37.5532 52.3589 37.5532 cv
53.2339 37.5532 li
53.2339 41.084 li
52.3589 41.084 li
52.1558 41.084 52.0161 41.1001 51.9688 41.1309 cv
51.9058 41.1782 51.8911 41.2402 51.8911 41.3501 cv
51.8911 41.4438 51.9058 41.5059 51.9531 41.5532 cv
52 41.6001 52.0781 41.6309 52.1719 41.6309 cv
54.7188 41.6309 li
54.9219 41.6309 55.0469 41.6001 55.1089 41.5688 cv
55.1719 41.522 55.2031 41.459 55.2031 41.3501 cv
55.2031 41.2402 55.1719 41.1782 55.1089 41.1309 cv
55.0469 41.1001 54.9219 41.084 54.7188 41.084 cv
53.8438 41.084 li
cp
f
59.062 41.147 mo
58.9058 41.1782 58.75 41.1938 58.5938 41.1938 cv
58.0938 41.1938 57.688 41.022 57.375 40.6782 cv
57.062 40.334 56.9058 39.8501 56.9058 39.272 cv
56.9058 38.6938 57.0469 38.2402 57.3281 37.897 cv
57.6089 37.5688 57.9839 37.397 58.4531 37.397 cv
58.688 37.397 58.8911 37.459 59.062 37.5688 cv
59.25 37.6782 59.3911 37.834 59.4839 38.0532 cv
59.5 38.0688 59.5161 38.1152 59.5308 38.1621 cv
59.5938 38.334 59.688 38.4121 59.8281 38.4121 cv
59.938 38.4121 60.0161 38.3809 60.062 38.334 cv
60.0938 38.272 60.125 38.1938 60.125 38.0688 cv
60.125 37.5371 li
60.125 37.272 60.0938 37.1001 60.062 37.0371 cv
60.0161 36.959 59.938 36.9121 59.812 36.9121 cv
59.75 36.9121 59.688 36.9282 59.6411 36.9751 cv
59.5938 36.9902 59.5469 37.0371 59.5308 37.1152 cv
59.3438 37.0371 59.1558 36.9751 58.9839 36.9282 cv
58.7969 36.8809 58.625 36.8647 58.438 36.8647 cv
57.7969 36.8647 57.25 37.1001 56.8281 37.5688 cv
56.4058 38.0371 56.2031 38.6152 56.2031 39.3501 cv
56.2031 40.0532 56.4219 40.647 56.8438 41.084 cv
57.2808 41.522 57.8438 41.7559 58.5308 41.7559 cv
58.8281 41.7559 59.125 41.7251 59.4058 41.6621 cv
59.688 41.584 59.9058 41.522 60.0469 41.4282 cv
60.0938 41.4121 60.125 41.3809 60.1411 41.3501 cv
60.1558 41.334 60.1719 41.272 60.1719 41.209 cv
60.1719 40.0371 li
60.2188 40.0371 li
60.3281 40.0371 60.4058 40.022 60.4531 39.9751 cv
60.4839 39.9438 60.5161 39.8647 60.5161 39.772 cv
60.5161 39.6938 60.5 39.6152 60.4688 39.584 cv
60.438 39.5371 60.3911 39.522 60.312 39.522 cv
58.625 39.522 li
58.5308 39.522 58.4688 39.5371 58.4219 39.5688 cv
58.3911 39.6001 58.375 39.6782 58.375 39.772 cv
58.375 39.8647 58.3911 39.9282 58.438 39.9751 cv
58.4688 40.0059 58.5308 40.0371 58.6089 40.0371 cv
59.5781 40.0371 li
59.5781 40.9438 li
59.3911 41.0371 59.2188 41.1001 59.062 41.147 cv
59.062 41.147 li
cp
f
124.066 72.3579 mo
124.066 131.608 li
84.0981 131.608 li
84.0981 72.3579 li
83.5981 72.3579 li
83.5981 132.108 li
124.566 132.108 li
124.566 72.3579 li
124.066 72.3579 li
0.619608 0.537255 0.498039 0.227451 cmyk
f
127.777 30.1899 mo
207.91 30.1899 li
207.91 131.858 li
127.777 131.858 li
127.777 30.1899 li
cp
0 0 0 0.090196 cmyk
ef
207.91 131.858 mo
207.91 131.608 li
128.027 131.608 li
128.027 30.4399 li
207.66 30.4399 li
207.66 131.858 li
207.91 131.858 li
207.91 131.608 li
207.91 131.858 li
208.16 131.858 li
208.16 29.9399 li
127.527 29.9399 li
127.527 132.108 li
208.16 132.108 li
208.16 131.858 li
207.91 131.858 li
0.619608 0.537255 0.498039 0.227451 cmyk
f
251.594 72.3579 mo
251.594 131.608 li
211.621 131.608 li
211.621 72.3579 li
211.121 72.3579 li
211.121 132.108 li
252.094 132.108 li
252.094 72.3579 li
251.594 72.3579 li
f
104.434 123.916 mo
106.184 124.713 107.621 123.256 109.086 122.99 cv
109.445 123.397 109.031 124.221 109.234 124.69 cv
110.297 125.459 112.363 125.178 113.148 126.233 cv
112.684 126.604 112.055 126.002 111.23 125.772 cv
109.809 125.373 108.258 125.615 108.789 123.529 cv
107.52 124.127 105.391 125.24 103.918 124.225 cv
103.418 124.479 103 124.815 102.438 124.998 cv
101.852 126.24 101.363 127.58 100.887 128.936 cv
99.8589 128.569 99.8281 127.158 98.5981 127.006 cv
98.395 127.311 98.3242 127.752 98.2271 128.166 cv
98.5161 128.244 98.8242 127.315 99.2622 127.545 cv
99.3008 128.139 98.6328 128.635 98.0781 128.862 cv
97.4688 128.471 97.9409 127.596 98.0781 126.928 cv
97.145 127.674 95.2539 128.502 93.4219 128.397 cv
92.7188 128.358 91.8198 128.182 91.2808 127.776 cv
89.9409 126.776 90.3008 124.147 91.207 122.912 cv
92.0508 121.772 93.2539 121.365 94.605 120.983 cv
95.02 120.307 95.2378 119.428 95.5659 118.666 cv
95.9839 118.635 96.0938 118.557 96.23 118.127 cv
98.418 117.272 100.945 116.772 102.73 115.498 cv
100.465 115.92 97.9771 116.678 95.6411 117.354 cv
94.8979 117.569 94.1519 117.955 93.4219 117.819 cv
93.5078 117.358 94.1172 117.303 94.4609 117.201 cv
95.6289 116.85 96.938 116.49 98.2271 116.119 cv
99.8979 115.639 101.691 114.951 103.398 115.115 cv
103.441 115.92 102.598 116.154 102.07 116.428 cv
100.461 117.264 98.2578 117.865 96.4531 118.592 cv
96.7539 119.592 97.4922 120.131 98.0781 120.83 cv
99.0469 120.822 99.8481 120.987 100.664 121.139 cv
101.543 120.072 102.27 118.643 103.102 117.432 cv
103.328 117.104 103.633 116.549 104.062 116.584 cv
103.926 117.483 103.168 118.131 102.66 118.897 cv
102.148 119.666 101.723 120.51 101.258 121.295 cv
101.801 121.674 102.691 121.697 102.879 122.451 cv
102.211 122.6 101.762 121.873 101.105 121.756 cv
100.16 122.901 99.6519 124.506 98.9648 125.924 cv
100.191 125.69 101.098 125.112 102.141 124.69 cv
102.559 123.725 103.141 123.108 103.25 121.756 cv
103.445 119.334 104.926 117.912 106.355 116.658 cv
106.43 116.276 106.66 116.049 106.797 115.733 cv
107.082 115.666 107.059 115.92 107.238 115.963 cv
108.742 114.877 111.527 114.139 114.035 114.342 cv
114.488 114.381 115.527 114.506 115.516 115.115 cv
115.496 116.092 113.938 117.221 113.227 117.819 cv
110.602 120.014 107.047 122.264 104.434 123.916 cv
112.188 114.885 mo
110.164 115.053 107.715 115.701 106.648 116.967 cv
106.012 117.721 105.707 118.838 105.172 119.826 cv
104.617 120.85 103.266 122.463 103.988 123.608 cv
107.004 121.76 110.047 119.838 112.707 117.662 cv
113.559 116.967 114.602 116.158 115 115.037 cv
114.121 114.694 113.121 114.807 112.188 114.885 cv
112.188 114.885 li
cp
103.844 121.369 mo
104.289 120.217 105.164 119.1 105.469 118.049 cv
104.785 118.955 103.898 120.065 103.844 121.369 cv
103.844 121.369 li
cp
95.1992 120.904 mo
95.8521 120.764 96.7148 120.846 97.3398 120.674 cv
96.8091 120.151 96.3672 119.529 95.938 118.897 cv
95.7461 119.631 95.4219 120.213 95.1992 120.904 cv
95.1992 120.904 li
cp
95.0508 121.369 mo
94.7578 121.901 94.645 122.596 94.4609 123.299 cv
94.2969 123.924 94.2539 124.799 93.7188 125.076 cv
93.5308 124.022 94.1948 122.615 94.4609 121.526 cv
92.4492 121.932 90.7769 123.451 90.8398 125.694 cv
90.8828 127.354 92.1289 127.947 93.8672 127.932 cv
97.5552 127.901 100.25 124.6 97.7808 121.295 cv
97.0552 121.147 96.0039 121.319 95.0508 121.369 cv
95.0508 121.369 li
cp
99.2622 124.151 mo
99.6558 123.276 100.09 122.444 100.52 121.604 cv
99.875 121.424 99.105 121.377 98.375 121.295 cv
98.8242 122.084 99.1128 123.037 99.2622 124.151 cv
99.2622 124.151 li
cp
102.879 124.225 mo
103.152 124.178 103.312 124.01 103.547 123.916 cv
103.496 123.69 103.527 123.373 103.324 123.299 cv
103.203 123.639 103.008 123.901 102.879 124.225 cv
102.879 124.225 li
cp
98.8198 126.619 mo
99.8052 126.799 100.148 127.651 100.738 128.244 cv
100.902 127.151 101.332 126.342 101.773 125.537 cv
101.762 125.447 101.75 125.358 101.625 125.381 cv
100.852 125.967 99.645 126.092 98.8198 126.619 cv
98.8198 126.619 li
cp
0.8 0.415686 0.152941 0 cmyk
ef
118.5 102.092 mo
118.5 101.592 li
102.531 101.592 li
102.531 102.092 li
102.996 101.912 li
101.875 99.0454 99.0698 97.0181 95.7808 97.0181 cv
93.6479 97.0181 91.707 97.8726 90.3052 99.2642 cv
88.9058 100.647 88.0352 102.569 88.0352 104.69 cv
88.0352 104.717 li
88.0469 104.936 li
88.0352 105.158 li
88.0352 105.186 li
88.0352 107.303 88.9058 109.225 90.3052 110.608 cv
91.707 111.994 93.645 112.854 95.7808 112.854 cv
98.832 112.854 101.461 111.108 102.723 108.572 cv
102.277 108.35 li
102.277 108.85 li
103.609 108.85 li
103.859 108.85 104.074 108.662 104.105 108.416 cv
104.133 108.225 104.242 108.033 104.445 107.881 cv
104.645 107.729 104.922 107.627 105.242 107.627 cv
105.559 107.627 105.84 107.729 106.039 107.881 cv
106.238 108.033 106.352 108.225 106.379 108.416 cv
106.41 108.662 106.621 108.85 106.871 108.85 cv
108.34 108.85 li
108.59 108.85 108.801 108.666 108.836 108.416 cv
108.859 108.225 108.973 108.033 109.172 107.881 cv
109.371 107.729 109.652 107.627 109.973 107.627 cv
110.289 107.627 110.566 107.729 110.766 107.881 cv
110.969 108.033 111.078 108.225 111.105 108.416 cv
111.137 108.662 111.352 108.85 111.602 108.85 cv
113.07 108.85 li
113.32 108.85 113.531 108.662 113.566 108.416 cv
113.59 108.225 113.703 108.033 113.902 107.881 cv
114.102 107.729 114.383 107.627 114.699 107.627 cv
115.02 107.627 115.297 107.729 115.496 107.881 cv
115.695 108.033 115.809 108.225 115.836 108.416 cv
115.871 108.666 116.082 108.85 116.332 108.85 cv
117.352 108.85 li
117.496 108.85 117.633 108.787 117.73 108.678 cv
121.492 104.369 li
121.57 104.276 121.613 104.162 121.613 104.037 cv
121.613 103.541 li
121.613 103.362 121.516 103.194 121.355 103.104 cv
118.742 101.654 li
118.5 101.592 li
118.5 102.092 li
118.258 102.529 li
120.613 103.838 li
120.613 103.85 li
117.125 107.85 li
116.332 107.85 li
116.332 108.35 li
116.824 108.279 li
116.758 107.791 116.48 107.369 116.102 107.084 cv
115.719 106.795 115.23 106.627 114.699 106.627 cv
114.172 106.627 113.68 106.795 113.301 107.084 cv
112.918 107.369 112.641 107.791 112.574 108.283 cv
113.07 108.35 li
113.07 107.85 li
111.602 107.85 li
111.602 108.35 li
112.098 108.283 li
112.031 107.791 111.75 107.369 111.371 107.084 cv
110.988 106.795 110.5 106.627 109.973 106.627 cv
109.441 106.627 108.953 106.795 108.57 107.084 cv
108.191 107.369 107.91 107.791 107.844 108.279 cv
108.34 108.35 li
108.34 107.85 li
106.871 107.85 li
106.871 108.35 li
107.367 108.283 li
107.301 107.791 107.023 107.369 106.641 107.084 cv
106.262 106.795 105.77 106.627 105.242 106.627 cv
104.711 106.627 104.223 106.795 103.84 107.084 cv
103.461 107.369 103.18 107.791 103.113 108.283 cv
103.609 108.35 li
103.609 107.85 li
102.277 107.85 li
102.086 107.85 101.914 107.955 101.828 108.127 cv
100.73 110.33 98.4409 111.854 95.7808 111.854 cv
93.9141 111.854 92.23 111.108 91.0122 109.897 cv
89.7891 108.69 89.0352 107.026 89.0352 105.186 cv
88.5352 105.186 li
89.0352 105.213 li
89.0508 104.963 li
89.0469 104.908 li
89.0352 104.662 li
88.5352 104.69 li
89.0352 104.69 li
89.0352 102.846 89.7891 101.182 91.0122 99.9751 cv
92.23 98.7642 93.9141 98.0181 95.7808 98.0181 cv
98.6519 98.0181 101.09 99.7866 102.066 102.276 cv
102.141 102.467 102.324 102.592 102.531 102.592 cv
118.5 102.592 li
118.5 102.092 li
118.258 102.529 li
118.5 102.092 li
0.733333 0.705882 0.654902 0.776471 cmyk
f
121.113 103.541 mo
102.531 102.588 li
101.484 99.9116 98.8589 98.0142 95.7808 98.0142 cv
91.7808 98.0142 88.5352 101.225 88.5352 105.186 cv
88.5352 109.143 91.7808 112.354 95.7808 112.354 cv
98.6372 112.354 101.094 110.721 102.277 108.35 cv
103.609 108.35 li
103.703 107.666 104.395 107.127 105.242 107.127 cv
106.09 107.127 106.781 107.666 106.871 108.35 cv
108.34 108.35 li
108.434 107.666 109.121 107.127 109.973 107.127 cv
110.816 107.127 111.508 107.666 111.602 108.35 cv
113.07 108.35 li
113.16 107.666 113.852 107.127 114.699 107.127 cv
115.547 107.127 116.238 107.666 116.332 108.35 cv
117.352 108.35 li
121.113 104.037 li
121.113 103.541 li
0.823529 0.192157 1 0.0392157 cmyk
f
121.113 103.541 mo
121.121 103.393 li
102.539 102.44 li
102.531 102.588 li
102.672 102.533 li
101.602 99.8032 98.9219 97.8647 95.7808 97.8647 cv
93.7422 97.8647 91.8911 98.6821 90.5508 100.006 cv
89.2148 101.33 88.3872 103.162 88.3872 105.186 cv
88.3872 107.205 89.2148 109.037 90.5508 110.362 cv
91.8911 111.686 93.7422 112.502 95.7808 112.502 cv
98.6948 112.502 101.203 110.838 102.41 108.416 cv
102.277 108.35 li
102.277 108.498 li
103.609 108.498 li
103.758 108.369 li
103.836 107.776 104.453 107.279 105.242 107.279 cv
106.027 107.279 106.648 107.776 106.723 108.369 cv
106.871 108.498 li
108.34 108.498 li
108.488 108.369 li
108.566 107.776 109.184 107.279 109.973 107.279 cv
110.758 107.279 111.375 107.776 111.453 108.369 cv
111.602 108.498 li
113.07 108.498 li
113.219 108.369 li
113.293 107.776 113.914 107.279 114.699 107.279 cv
115.488 107.279 116.105 107.776 116.184 108.369 cv
116.332 108.498 li
117.352 108.498 li
117.465 108.447 li
121.227 104.139 li
121.266 104.037 li
121.266 103.541 li
121.121 103.393 li
121.113 103.541 li
120.965 103.541 li
120.965 103.983 li
117.285 108.197 li
116.332 108.197 li
116.332 108.35 li
116.48 108.33 li
116.371 107.553 115.609 106.979 114.699 106.979 cv
113.793 106.979 113.027 107.553 112.922 108.33 cv
113.07 108.35 li
113.07 108.197 li
111.602 108.197 li
111.602 108.35 li
111.75 108.33 li
111.641 107.553 110.879 106.979 109.973 106.979 cv
109.062 106.979 108.301 107.553 108.191 108.33 cv
108.34 108.35 li
108.34 108.197 li
106.871 108.197 li
106.871 108.35 li
107.02 108.33 li
106.914 107.553 106.148 106.979 105.242 106.979 cv
104.332 106.979 103.57 107.553 103.461 108.33 cv
103.609 108.35 li
103.609 108.197 li
102.277 108.197 li
102.141 108.283 li
100.984 110.604 98.5781 112.201 95.7808 112.201 cv
93.8198 112.201 92.0469 111.416 90.7661 110.147 cv
89.48 108.877 88.688 107.123 88.688 105.186 cv
88.688 103.244 89.48 101.49 90.7661 100.221 cv
92.0469 98.9507 93.8198 98.1616 95.7808 98.1616 cv
98.7969 98.1616 101.367 100.026 102.391 102.643 cv
102.523 102.74 li
121.105 103.694 li
121.113 103.541 li
120.965 103.541 li
121.113 103.541 li
f
gsave
88 97.2642 mo
122 97.2642 li
122 112.264 li
88 112.264 li
88 97.2642 li
cp
clp
118.5 102.092 mo
102.531 102.092 li
101.484 99.4155 98.8589 97.5181 95.7808 97.5181 cv
91.7808 97.5181 88.5352 100.729 88.5352 104.69 cv
88.5352 108.647 91.7808 111.858 95.7808 111.858 cv
98.6372 111.858 101.094 110.225 102.277 107.854 cv
103.609 107.854 li
103.703 107.166 104.395 106.631 105.242 106.631 cv
106.09 106.631 106.781 107.166 106.871 107.854 cv
108.34 107.854 li
108.434 107.166 109.121 106.631 109.973 106.631 cv
110.816 106.631 111.508 107.166 111.602 107.854 cv
113.07 107.854 li
113.16 107.166 113.852 106.631 114.699 106.631 cv
115.547 106.631 116.238 107.166 116.332 107.854 cv
117.352 107.854 li
121.113 103.541 li
118.5 102.092 li
cp
clp
88 97.2642 mo
122 97.2642 li
122 112.264 li
88 112.264 li
88 97.2642 li
cp
clp
88 97.2642 mo
122 97.2642 li
122 112.264 li
88 112.264 li
88 97.2642 li
cp
clp
118.5 102.092 mo
102.531 102.092 li
101.484 99.4155 98.8589 97.5181 95.7808 97.5181 cv
91.7808 97.5181 88.5352 100.729 88.5352 104.69 cv
88.5352 108.647 91.7808 111.858 95.7808 111.858 cv
98.6372 111.858 101.094 110.225 102.277 107.854 cv
103.609 107.854 li
103.703 107.166 104.395 106.631 105.242 106.631 cv
106.09 106.631 106.781 107.166 106.871 107.854 cv
108.34 107.854 li
108.434 107.166 109.121 106.631 109.973 106.631 cv
110.816 106.631 111.508 107.166 111.602 107.854 cv
113.07 107.854 li
113.16 107.166 113.852 106.631 114.699 106.631 cv
115.547 106.631 116.238 107.166 116.332 107.854 cv
117.352 107.854 li
121.113 103.541 li
118.5 102.092 li
clp
88 97.2642 mo
122 97.2642 li
122 112.264 li
88 112.264 li
88 97.2642 li
cp
clp
88.5352 97.5181 mo
121.113 97.5181 li
121.113 111.858 li
88.5352 111.858 li
88.5352 97.5181 li
cp
clp
gsave
88.3198 112.088 mo
88.3198 97.4478 li
121.2 97.4478 li
121.2 112.088 li
88.3198 112.088 li
cp
clp
87.1152 113.389 mo
87.1152 96.5892 li
123.595 96.5892 li
123.595 113.389 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 144.108 ]ct
[36.48 0 0 -16.8 87.1152 47.5187 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 76 
/H 35 
/M[76 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 76 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 76 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 76 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 76 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&RfF;$UnXQUT:VUCR$X/)PEM&hO,]'TM2$_:/:rG&IXHHdG'.kHE,KH*BP1mf@UEGH>?P$,
;c$4_8kDNA6pX""4#o/S1,--:!!2rsrl.:D_nj.&]XkY_[C!<HYck10Wi2ekUS+6NS!o_2P`h2kNf/aM
L4b&-IXHEbF`VP?D/3csA7AnO>Zk*+;GTqW7n(K!kQ"&IUnXQUT:VUCR$X/)PEM&hO,]'TM2$_:Jq8E#
I!U$\F`VSBDJNs"B4YX`?X?uA=]\R$:ej\V8Ol3;5s@Fn3AiTJ0]<#_!!!&s!<0u)`P]O-^:_%f\$`TM
ZEUO7X/`+qV5']USsu19Q^!YrOH,6ULk^P5J:;lkGBItHDJa0%B4PIY?!LN5;c6Ca8Ol5G!4Dk`Unj`Y
TV%gHS!]P/Q'7AnO,o9YMM[(AK7\Z(IXHHdG'.kHE,KH*BP1mf@UEGH>?P$,&Q;M$9M.lH779F*4ZbY]
1GUYm!!!&s!<0tS`P]O-^:_%f\$`TMZEUO7X/`+qV5']U.\<,uR$X&#P)t]^M26n=JUi2sH$=CPEGfW/
B4kaa?X6o><`;ml91_WBY5nTu6_^9IT:VUCR$X/)PEM&hO,]'TM2$_:Jq8E#I!U$\F`VSBDJNs"B4YX`
?X?uA=]\R$:ej\V8Ol3;5s@Fn3AiTJ0ZF+_!!!&s!<0u)`P]O-^:_%f\$`TMZEUO7X/`+qV5']USsu19
Q^!YrOH,6ULk^P5J:;lkGBItHDJa0%B4PIY?!LN5;c6Ca8Ol5,!7:d8Unj`YTV%gHS!]P/Q'7AnO,o9Y
MM[(AK7\Z(IXHHdG'.kHE,KH*BP1mf@UEGH>?P$,;c$4_8kDNA6pX""4#o/S1,/J'^An67qZ-W81<%/I
^qRIm\[SuR['Hp>XfJJ#VPU&\T:VO@R$X&#P)t]^M26n=JUi2sH$=CPEGfW/%qfNc@UEDG=]SI!:J48L
7BZ\2Unj`YTV%gHS!]P/Q'7AnO,o9YMM[(AK7\Z(IOKSiG]n4NEc>o3BkV-jAR]"Q>[(?4<)ZUg9M.lH
779F*4ZbY]1GUYm!!!&s!<0t<`BhDX^qRIm\[SuR['Hp>XfJJ#VPU&\T:VO@R$X&#P)t]^M26n=JUi2s
H$=CPEGfW/B4kaa?X6o><`;ml91_WB_uT-(7AQ`RTqJ$LSXZ"5Q^*btOcPQ_Mi*@GKnFu.IsuckG]n4N
Ec>o3BkV-jAR]"Q>[(?4<)ZUg9M.lH779F*4ZbY]1GUZ?!87DQ!W)lr`^7Y^_8*dt]",;X['[-CYH=k*
W2?DdTV%gFR[BG+P*1oeMi!7EK7SQ%I!KpYF)c)7CM.9j@UEDG=]SI!:J48L7J6_m!&p^LU7n6PSt2@<
Q^<u$P*(fdNJi[NL4t83JU`,rH?aUUF)l5;CM@HpAS#=X?<g];=&`*p:.u*h8Ol3;5s@Fn3AiTJ0X^r]
!W)lr`Z)n7_8*dt]",;X['[-CYH=k*W2?DdTV%gFR[>FgP`h2kNf/aML4b&-IXHEbF`VP?D/3csA7AnO
>Zk*+;GTqW7n'T]"f.rgTqJ#BSt2@<Q^<u$P*(fdNJi[NL4t83JU`,rH?aUUF)l5;CM@HpAS#=X?<g];
=&`*p:/"8O7n#g35!:tf2)@!A_>s6/!!2rsrl.:D_nj.&]XkY_[C!<HYck10Wi2ekUS+6NS!o_2P`h2k
Nf/aML4b&-IXHEbF`VP?D/3csA7AnO>Zk*+;GTqW7n)/4eGr%6UnXQUT:VUCR$X/)PEM&hO,]'TM2$_:
Jq8E#I!U$\F`VSBDJNs"B4YX`?X?uA=]\R$:ej\V8Ol3;5s@Fn3AiTJ0_>@_!!!&s!<0tr`P]O-^:_%f
\$`TMZEUO7X/`+qV5']USsu19Q^!YrOH,6ULk^P5J:;lkGBItHDJa0%B4PHZ?X6o><`;ml91_WBY5f]@
UnXQUT:VUCR$X/)PEM&hO,]'TM2$_:Jq8E#I!U$\,^"0KE,KH*BP1mf@UEGH>?P$,;c$4_8kDNA6pX""
4#o/S1,--:!!2rsrl,)[_nj.&4hSA:\$`TMZEUO7X/`+qV5']USsu19Q^!YrOH,6ULk^P5J:;lkGBItH
DJa0%B4PIY?!LN5;c6Ca8Ol4b!:TtWUnj`YTV%gHS!]P/Q'7AnO,o9YMM[(AK7\Z(IXHHdG'.kHE,KH*
BP1mf@UEGH>?P$,;c$4_8kDNA6pX""4#o/S1,/Y,\c;^2qZ-W8/]GWD^qRIm\[SuR['Hp>XfJJ#VPU&\
T:VO@R$X&#P)t]^M26n=JUi2sH$=BFF)c)7CM.9j@UEDG=]SI!:J48L7BZ\-Unj`YTV%gHS!]P/Q'7An
O,o9YMM[(A/VAY+IsuckG]n4NEc>o3BkV-jAR]"Q>[(?4<)ZUg9M.lH779F*4ZbY]1GUYm!!!&t!!!#u
`^7Y^_8*dt]",;X['[-CYH=k*W2?DdTV%gFR[BG+P*1oeMi!7EK7SQ%I!KpYF)c)7CM.9j@UEDG=]SI!
:J48L7EGPm!(E]ZU7n6PSt2@<Q^<u$P*(fdNJi[NL4t83JU`,rH?aUUF)l5;CM@HpAS#=X?<g];=&`*p
:/"8O7n#g35!:tf2)@!AiW.L/!!2rsrl.:D_nj.&]XkY_[C!<HYck10Wi2ekUS+6NS!o_2P`h2kNf/aM
L4b&-IXHEbF`VP?D/3csA7AnO>Zk*+;GTqW7n*:T[/_tXUnXQUT:VUCR$X/)PEM&hO,]'TM2$_:Jq8E#
I!U$\F`VSBDJNs"B4YX`?X?uA=]Z58;c$4_8kDNA6pX""4#o/S1,--:!!2rsrl,_m_nj.&]XkY_[C!<H
Yck10Wi2ekUS'-0Ssu19Q^!YrOH,6ULk^P5J:;lkGBItHDJa0%B4PIY?!LN5;c6Ca8Ol4Q!!&f_UnXQU
T:VUCR$X/)PEM&hO,]'TM2$_:Jq8E#I!U$\F`VSBDJNs"B4YX`?X?uA=]\R$:ej\V8Ol3;5s@Fn3AiTJ
0ZO1_!!!&s!<0u)`P]O-^:_%f\$`TMZEUO7X/`+qV5']USsu19Q^!YrOH,6ULk^P5J:;lkGBItHDJa0%
B4PIY?!LN5;c6Ca8Ol5-!71^7Unj`YTV%gHS!]P/Q'7AnO,o9YMM[(AK7\Z(IXHHdG'.kHE,KH*BP1mf
@UEGH>?P$,;c$4_8kDNA6pX""4#o/S1,/M(^&S-6qZ-W80u_&H^qRIm\[SuR['Hp>XfJJ#VPU&\T:VO@
R$X&#P)t]^M26n=JUi2sH$=CPEGfV)CM.9j@UEDG=]SI!:J48L7BZ\1Unj`YTV%gHS!]P/Q'7AnO,o9Y
MM[(AK7\Z(.=QYjG]n4NEc>o3BkV-jAR]"Q>[(?4<)ZUg9M.lH779F*4ZbY]1GUYm!!!&s!<0u)`P]O-
^:_%f\$`TMZEUO7X/`+qV5']USsu19Q^!YrOH,6ULk^P5J:;lkGBItHDJa0%B4PIY?!LN5;c6Ca8Ol4g
!:'VRUnj`YTV%gHS!]P/Q'7AnO,o9YMM[(AK7\Z(IXHHdG'.kHE,KH*BP1mf@UEGH>?P$,;c$4_8kDNA
6pX""4#o/S1,.Pbf`2!QqZ-W86H-jY^qRIm\[SuR['Hp>XfJJ#VPU&\T:VO@R$X&#P)t]^M26n=JUi2s
H$=CPEGfW/B4kaa?X6o><`;ml91_WBpAh`(2Pd.CTqJ$LSXZ"5Q^*btOcPQ_Mi*@GKnFu.IsuckG]n4N
Ec>o3BkV-jAR]"Q>[(?4<)ZUg%STJd7n#g35!:tf2)@!A[K$:.qZ-W8)TBV1^qRIm\[SuR['Hp>XfJJ#
VPU&\T:VO@-^^6bP*1oeMi!7EK7SQ%I!KpYF)c)7CM.9j@UEDG=]SI!:J48L7BZ[oUnj`YTKo-@SXZ"5
Q^*btOcPQ_Mi*@GKnFu.IsuckG]n4NEc>o3BkV-jAR]"Q>[(?4<)ZUg9M.lH779F*4ZbY]1GUZ%!;$6k
!W)lr`^7Y^_8*dt]",;X['[-CYH=k*W2?DdTV%gFR[BG+P*1oeMi!7EK7SQ%I!KpYF)c)7CM.9j@UEDG
=]SI!:J48L7GImm!(E]ZU7n6PSt2@<Q^<u$P*(fdNJi[NL4t83JU`,rH?aUUF)l5;CM@HpAS#=X?<g];
=&`*p:/"8O7n#g35!:tf2)@!Ao`2i/!!2rsrl-h7_nj.&]XkY_[C!<HYck10Wi2ekUS+6NS!o_2P`h2k
Nf/aML4b&-IXHEbF`VP?D/3csA.2pS?!LN5;c6Ca8Ol4Q!$A#4U7n6PSt2@<Q^<u$P*(fdNJi[NL4t83
JU`,rH?^`ZF`VSBDJNs"B4YX`?X?uA=]\R$:ej\V8Ol3;5s@Fn3AiTJ0X^r]!W)lr`WO2t_8&7K]XkY_
[C!<HYck10Wi2ekUS+6NS!o_2P`h2kNf/aML4b&-IXHEbF`VP?D/3csA7AnO>Zk*+;GTqW7n(5omf5eP
UnXQUT:VUCR$X/)PEM&hO,]'TM2$_:Jq8E#I!U$\F`VSBDJNs"B4YX`?X?uA=]\R$:ej\V8Ol3;5s@Fn
3AiTJ0\QN_!!!&s!<0u)`P]O-^:_%f\$`TMZEUO7X/`+qV5']USsu19Q^!YrOH,6ULk^P5J:;lkGBItH
DJa0%B4PIY?!LN5;c6Ca8Ol5@!5/@nUnj`YTV%gHS!]P/Q'7AnO,o9YMM[(AK7\Z(IXHHdG'.kHE,KH*
BP1mf@UEGH>?P$,;c$4_8kDM[779F*4ZbY]1GUYm!!!&u!<3&u`^7Y^_8*dt]",;X['[-CYH=k*W2?Dd
TV%gFR[BG+P*1oeMi!7EK7SQ%I!KpYF)c)7CM.9j@UEDG=]SI!:J48L7EPVm!(E]ZU7n6PSt2@<Q^<u$
P*(fdNJi[NL4t83JU`,rH?aUUF)l5;CM@HpAS#=X?<g];=&`*p:/"8O7n#g35!:tf2)@!AirIR/!!2rs
rl.:D_nj.&]XkY_[C!<HYck10Wi2ekUS+6NS!o_2P`h2kNf/aML4b&-IXHEbF`VP?D/3csA7AnO>Zk*+
;GTqW7n*=UZiDhVUnXQUT:VUCR$X/)PEM&hO,]'TM2$_:Jq8E#I!U$\F`VSBDJNs"B4YX`?X?uA=VFk9
;c$4_8kDNA6pX""4#o/S1,--:!!2rsrl,\l_nj.&]XkY_[C!<HYck10Wi2ekUF`(1Ssu19Q^!YrOH,6U
Lk^P5J:;lkGBItHDJa0%B4PIY?!LN5;c6Ca8Ol4Q!(E]ZU7n6PSt2@<Q^<u$P*(fdNJi[NL4t83JU`,r
H?aUUF)l5;CM@HpAS#=X?<g];=&`*p:/"8O7n#g35!:tf2)@!Aa8kZ/!!2rsrl.:D_nj.&]XkY_[C!<H
Yck10Wi2ekUS+6NS!o_2P`h2kNf/aML4b&-IXHEbF`VP?D/3csA7AnO>Zk*+;GTqW7n)A:cN$D0UnXQU
T:VUCR$X/)PEM&hO,]'TM2$_:Jq8E#I!U$\F`VSBDJNs"B4YX`?X?uA=]\R$:ej\V8Ol3;5s@Fn3AiTJ
0_td_!!!&s!<0tl`P]O-^:_%f\$`TMZEUO7X/`+qV5']USsu19Q^!YrOH,6ULk^P5J:;lkGBItHD@p`$
B4kaa?X6o><`;ml91_WBY5fK:UnXQUT:VUCR$X/)PEM&hO,]'TM2$_:Jq5D$IXHHdG'.kHE,KH*BP1mf
@UEGH>?P$,;c$4_8kDNA6pX""4#o/S1,--:!!2rss2IFG`P]O-^:_%f\$`TMZEUO7X/`+qV5']USsu19
Q^!YrOH,6ULk^P5J:;lkGBItHDJa0%B4PIY?!LN5;c6Ca8Ol4h!9sPQUnj`YTV%gHS!]P/Q'7AnO,o9Y
MM[(AK7\Z(IXHHdG'.kHE,KH*BP1mf@UEGH>?P$,;c$4_8kDNA6pX""4#o/S1,.ScfDkmPqZ-W86H-jY
^qRIm\[SuR['Hp>XfJJ#VPU&\T:VO@R$X&#P)t]^M26n=JUi2sH$=CPEGfW/B4kaa?X6o><`;ml91_WB
p].f(25I%BTqJ$LSXZ"5Q^*btOcPQ_Mi*@GKnFu.IsuckG]n4NEc>o3BkV-jAR]"Q>[(?4<)ZU(:/"8O
7n#g35!:tf2)@!A[K$:.qZ-W8)9'M0^qRIm\[SuR['Hp>XfJJ#VPU&\T:VN#R[BG+P*1oeMi!7EK7SQ%
I!KpYF)c)7CM.9j@UEDG=]SI!:J48L7B6E?!.k4$!.Y~>

%%EndBinary
grestore
np
grestore
grestore
gsave
89 97.2642 mo
121 97.2642 li
121 112.264 li
89 112.264 li
89 97.2642 li
cp
clp
95.7808 111.276 mo
92.105 111.276 89.1172 108.323 89.1172 104.69 cv
89.1172 101.053 92.105 98.0962 95.7808 98.0962 cv
98.5508 98.0962 100.988 99.7476 101.992 102.307 cv
102.137 102.674 li
118.348 102.674 li
120.203 103.702 li
117.09 107.272 li
116.758 107.272 li
116.426 106.549 115.625 106.049 114.699 106.049 cv
113.777 106.049 112.973 106.549 112.641 107.272 cv
112.031 107.272 li
111.695 106.549 110.895 106.049 109.973 106.049 cv
109.051 106.049 108.246 106.549 107.91 107.272 cv
107.301 107.272 li
106.969 106.549 106.164 106.049 105.242 106.049 cv
104.32 106.049 103.516 106.549 103.184 107.272 cv
101.918 107.272 li
101.758 107.592 li
100.625 109.866 98.3359 111.276 95.7808 111.276 cv
95.7808 111.276 li
cp
clp
89 97.2642 mo
121 97.2642 li
121 112.264 li
89 112.264 li
89 97.2642 li
cp
clp
89 97.2642 mo
121 97.2642 li
121 112.264 li
89 112.264 li
89 97.2642 li
cp
clp
95.7808 111.276 mo
92.105 111.276 89.1172 108.323 89.1172 104.69 cv
89.1172 101.053 92.105 98.0962 95.7808 98.0962 cv
98.5508 98.0962 100.988 99.7476 101.992 102.307 cv
102.137 102.674 li
118.348 102.674 li
120.203 103.702 li
117.09 107.272 li
116.758 107.272 li
116.426 106.549 115.625 106.049 114.699 106.049 cv
113.777 106.049 112.973 106.549 112.641 107.272 cv
112.031 107.272 li
111.695 106.549 110.895 106.049 109.973 106.049 cv
109.051 106.049 108.246 106.549 107.91 107.272 cv
107.301 107.272 li
106.969 106.549 106.164 106.049 105.242 106.049 cv
104.32 106.049 103.516 106.549 103.184 107.272 cv
101.918 107.272 li
101.758 107.592 li
100.625 109.866 98.3359 111.276 95.7808 111.276 cv
clp
89 97.2642 mo
121 97.2642 li
121 112.264 li
89 112.264 li
89 97.2642 li
cp
clp
89.1172 98.0962 mo
120.203 98.0962 li
120.203 111.276 li
89.1172 111.276 li
89.1172 98.0962 li
cp
clp
gsave
89.04 111.368 mo
89.04 97.9282 li
120.24 97.9282 li
120.24 111.368 li
89.04 111.368 li
cp
clp
88.0127 112.367 mo
88.0127 97.0067 li
122.573 97.0067 li
122.573 112.367 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 144.108 ]ct
[34.56 0 0 -15.36 88.0127 47.1012 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 72 
/H 32 
/M[72 0 0 -32 0 32 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 72 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 72 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 72 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 72 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&])XfE0JbRH4$5_m6:FC98k`#X;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_
P*;2u#ah$MSXuLJU87YdrrK_3-UU?p9M\Ma='/X2@:Nk]C2@a+F*)VNI!pHpKSG;?MiNm^Pa7]*RMhWe
T;/3YWN*##Xg,4>['mHS]=u%q_o0O6ZN(ap0JbRH4$5_m6:FC98k`#X;cQq'>[8gd@:Nn^BPD:#E,p#B
GBnO`IXm!%KnbGAMiEaYOckooQ^F22SXuLJU87YdrrK_3"[baN9M\MI;cd()>[_,RB527"E-$,FG^Opg
JV8c6MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>['mHS]=u%q_o0O6^&[j,5qjuK2*!`\5<qP(7nH<H:Jk%j
=B\s8?X[GVB4u!qDK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7ETq\@[!<3)O!9F2H6UjX@:Jk%l
=B\s<@qB:fCi+-4FE_tWI=?a#L5:_FNf]EgQC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b^VIb*`Q$g9e,Vcg
0JbRH4$5_m6:FC98k`#X;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_P*;2uR$jJ8StMdO
V#(/l!Vl`5!'in@8PDoW;cd()>[_,RB527"E-$,FG^OpgJV8c6MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>
['mHS]=u%q_o0Lo`j5Xu0JG:?3BK>f5XIn08P2ZP;,^Is>$P??@:Nn^BPD:#E,p#BGBnO`IXm!%KnbGA
&W;X/OHG]iQC!u,S=Q7ETq\@[!<3)3!$4Ks8PDoW;cd()>[_,RB527"E-$,FG^OpgJV8c6MB[t=OHPio
R$sJ6StDdRV5^JqXKAb6['[9N\\#Sj^r++0`j5XS0JG:?3BK>f5XIn08P1d4:Jk%j=B\s8?X[GVB4u!q
DK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7ETq\@[!<3)6!<)sa6UjX@:Jk%l=B\s<@qB:fCi+-4
FE_tWI=?a#L5:_FNf]EgQC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b^VIb*`Q#pum/TF+0JbRH4$5_m6:FC9
8k`#X;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_P*;2uR$jJ8StMdOV#(/l!T3t5!'rtA
8PDoW;cd()>[_,RB527"E-$,FG^OpgJV8c6MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>['mHS]=u%q_o0O6
klAm,5qjuK2*!`\5<qP(7nH<H:Jk%j=B\s8?X[GVB4u!qDK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,
S=Q7ETq\@[!!!$"!P8=j6UjX@:Jk%l=B\s<@qB:fCi+-4FE_tWI=?a#L5:_FNf]EgQC+,0S=Z@JUnt&j
X/rG.Za@*J$+IIW^;%J$`5Ta&!%'BR1Gq0S4?l(t77TpA9M\Ma<ENF0?!h#MAnPdkCi434F*2\PHQ%<]
J:W?,L5CeGNK0*_P*;2uR$jJ8StMdOV#(/l!P8=H6UjX@:Jk%l=B\s<@qB:fCi+-4FE]6[I!pHpKSG;?
MiNm^Pa7]*R[ftAUSO`cWiN5'Z*UgE[^WfZ^;%J$`5Ta&!!Fu01Gq0T4$5_m6:FC98k`#X;cQq'>[:]F
@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_P*;2uR$jJ8StMdOV#(/l!QP35!'rtA8PDoW;cd()>[_,R
B527"E-$,FG^OpgJV8c6MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>['mHS]=u%q_o0O6ciE,,5qjuK2*!`\
5<qP(7nH<H:Jk%j=B\s8?X[GVB4u!qDK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7ETq\@[!<3)a
!7Lp66UjX@:Jk%l=B\s<@qB:fCi+-4FE_tWI=?a#L5:_FNf]EgQC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b
^VIb*`Q%HK_>leS0JbRH4$5_m6:FC98k`#X;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_
P*;2uR$jJ8StMbXU87YdrrK_3/ji*"9M\Ma='/X2@:Nk]C2@a+F*)VNI!pHpKSG;?MiNm^Pa7]*R[ftA
USO`c&ur"6Xg,4>['mHS]=u%q_o0O6[/`Po!&-)_2*!`\5<qP(7nH<H:Jk%j=B\s8?X[GVB4u!qDK'W;
Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7ETq\@[!<3)F!:BhQ6UjX@:Jk%l=B\s<@qB:fCi+-4FE_tW
I=?a#L5:_FNf]EgQC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b^VIb*`Q$L0h#K_p0JbRH4$5_m6:FC98k`#X
;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_P*;2uR$jJ8StMdOV#(/l!Up*5!'rtA8PDoW
;cd()>[_,RB527"E-$,FG^OpgJV8c6MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>['mHS]=u%q_o0O6q#J#,
3&!$B2*!`\5<qP(7nH<H:Jk%j=B\s8?X[GVB4u!qDK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQBqlER@Kh>
TV8*UqZ-Ws])X3G7S-9L;,^Ou>$PKGAS5aoD/aQ<GBeL`IY!0,Ll.+NOHPioR$sH]S=Z@JUnt&jX/rG.
Za@*J\%0,b^VIb*`Q#4a(,.Eu2*!`\5<qP(7nH<H:Jk%j=B\s8.UQUoAnPdkCi434F*2\PH[U?nJV/Z2
M2I4NNf]BdPEqQ&R@Kh>TV8*UqZ-Ws])W"%7S-9L;*.]X=B\s<@qB:fCi+-4FE_tWI=?a#L5:_FNf]Eg
QC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b^VIb*`Q#Ulp&IB40JbRH4$5_m6:FC98k`#X;cQq'>[:]F@qK@e
Bl%[+EcZAIH$asgJ:W?,L5CeGNK0*_P*;2uR$jJ8StMdOV#(/l!S7>5!'rtA8PDoW;cd()>[_,RB527"
E-$,FG^OpgJV8c6MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>['mHS]=u%q_o0O6huM7,5qjuK2*!`\5<qP(
7nH<H:Jk%j=B\s8?X[GVB4u!qDK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7ETq\@[!<3)q!5ee%
6UjX@:Jk%l=B\s<@qB:fCi+-4FE_tWI=?a#L5:_FNf]EgQC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b^VIb*
`;moa!&$#[1Gq0S4?l(t77TpA9M\Ma<ENF0?!h#MAnPdkCi434F*2\PH[U?nJV/Z2M2Dn'NK0*_P*;2u
R$jJ8StMdOV#(/l!P8=Q6UjX@:Jk%l=B\s<@qB:fCi+-4FE_tWI=?a#L5:^2MiNm^Pa7]*R[ftAUSO`c
WiN5'Z*UgE[^WfZ^;%J$`5Ta&!"CV91Gq0S4?l(t77TpA1JCSA;cQq'>[:]F@qK@eBl%[+EcZAIH$asg
J:W?,L5CeGNK0*_P*;2uR$jJ8StMdOV#(/l!PSR5!'rtA8PDoW;cd()>[_,RB527"E-$,FG^OpgJV8c6
MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>['mHS]=u%q_o0O6`rPK,5qjuK2*!`\5<qP(7nH<H:Jk%j=B\s8
?X[GVB4u!qDK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7ETq\@[!<3)X!8IQ?6UjX@:Jk%l=B\s<
@qB:fCi+-4FE_tWI=?a#L5:_FNf]EgQC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b^VIb*`Q%-Bb5ag^0JbRH
4$5_m6:FC98k`#X;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_P*;2uR$jJ8StMdOV#(,l
!<</4!&m878PDoW;cd()>[_,RB527"E-$,FG^OpgJV8c6MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>['g:M
\\#Sj^r++0`j5Xl0JG:?3BK>f5XIn08P2ZP;,^Is>$P??@:Nn^BPD:#E,p#BGBnNRI=?]tK8#&:MMmIS
OHG]iQC!u,S=Q7ETq\@[!<3)3!#7jj8PDoW;cd()>[_,RB527"E-$,F.sQGiIY!0,Ll.+NOHPioR$sJ6
StDdRV5^JqXKAb6['[9N\\#Sj^r++0`j5XJ0JG:?3BTAc5<qP(7nH<H:Jk%j=B\s8?X[GVB4u!qDK'W;
Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7ETq\@[!<3)?!;-=X6UjX@:Jk%l=B\s<@qB:fCi+-4FE_tW
I=?a#L5:_FNf]EgQC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b^VIb*`Q$7)j8_J"0JbRH4$5_m6:FC98k`#X
;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_P*;2uR$jJ8StMdOV#(/l!U0U5!'rtA8PDoW
;cd()>[_,RB527"E-$,FG^OpgJV8c6MMmLVP*D9"R[Tb<T;/3YWN*##Xg,4>['mHS]=u%q_o0O6nc6N,
5;4cI2*!`\5<qP(7nH<H:Jk%j=B\s8?X[GVB4u!qDK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7E
T`Lm`qZ-Ws])XHN7S-9L;,^Ou>$PKGAS5aoD/aQ<GBeL`IY!0,Ll.+NOHPioR$sJ6StDdRV5Y*-X/rG.
Za@*J\%0,b^VIb*`Q#:c6N@*?0JbRH4$5_m6:FC98k`#X;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,
L5CeGNK0*_P*;2uR$jJ8StMdOV#(/l!R:]5!'rtA8PDoW;cd()>[_,RB527"E-$,FG^OpgJV8c6MMmLV
P*D9"R[Tb<T;/3YWN*##Xg,4>['mHS]=u%q_o0O6f)XV,5qjuK2*!`\5<qP(7nH<H:Jk%j=B\s8?X[GV
B4u!qDK'W;Fa&+XI=?]tK8#&:MMmISOHG]iQC!u,S=Q7ETq\@[!<3)h!6bF/6UjX@:Jk%l=B\s<@qB:f
Ci+-4FE_tWI=?a#L5:_FNf]EgQC+,0S=Z@JUnt&jX/rG.Za@*J\%0,b^VIb*`Q%]R])XfE0JbRH4$5_m
6:FC98k`#X;cQq'>[:]F@qK@eBl%[+EcZAIH$asgJ:W?,L5CeGNK0*_P*;2u#ah$MSXuLJU87YdrrK_3
-UU?p9M\Ma='/X2@:Nk]C2@a+F*)VNI!pHpKSG;?MiNm^Pa7]*RMhWeT;/3YWN*##Xg,4>['mHS]=u%q
_o0O6S,e-@JcPQGJ,~>

%%EndBinary
grestore
np
grestore
grestore
101.508 104.69 mo
101.508 107.85 98.9448 110.412 95.7808 110.412 cv
92.6211 110.412 90.0591 107.85 90.0591 104.69 cv
90.0591 101.526 92.6211 98.9634 95.7808 98.9634 cv
98.9448 98.9634 101.508 101.526 101.508 104.69 cv
0 0 0 0 cmyk
f
91.582 103.24 mo
92.645 103.24 li
92.895 103.24 93.0659 103.256 93.145 103.272 cv
93.3008 103.319 93.4102 103.397 93.5039 103.522 cv
93.582 103.647 93.6289 103.787 93.6289 103.959 cv
93.6289 104.194 93.5508 104.381 93.4102 104.522 cv
93.2539 104.647 93.0039 104.709 92.6602 104.709 cv
91.582 104.709 li
91.582 103.24 li
cp
91.582 106.881 mo
91.582 105.194 li
92.645 105.194 li
93.2378 105.194 93.6289 105.084 93.8628 104.834 cv
94.082 104.6 94.1909 104.287 94.1909 103.944 cv
94.1909 103.74 94.1602 103.553 94.0659 103.381 cv
93.9878 103.209 93.8789 103.084 93.7378 102.99 cv
93.5981 102.897 93.4409 102.834 93.2231 102.787 cv
93.082 102.772 92.8789 102.756 92.5981 102.756 cv
91.0352 102.756 li
91.0352 106.881 li
91.582 106.881 li
cp
0.733333 0.705882 0.654902 0.776471 cmyk
f
97.2461 106.881 mo
97.2461 103.881 li
96.73 103.881 li
96.73 105.49 li
96.73 105.74 96.6992 105.928 96.6519 106.069 cv
96.5898 106.209 96.4961 106.303 96.3711 106.397 cv
96.23 106.459 96.0898 106.506 95.9492 106.506 cv
95.793 106.506 95.6519 106.459 95.5591 106.397 cv
95.4648 106.319 95.3872 106.209 95.355 106.084 cv
95.3398 105.99 95.3242 105.803 95.3242 105.537 cv
95.3242 103.881 li
94.8242 103.881 li
94.8242 105.74 li
94.8242 105.959 94.8242 106.115 94.8398 106.209 cv
94.8872 106.365 94.9341 106.49 94.9961 106.584 cv
95.0742 106.694 95.1992 106.772 95.3398 106.834 cv
95.4961 106.912 95.6519 106.944 95.8398 106.944 cv
96.23 106.944 96.5591 106.772 96.7769 106.444 cv
96.7769 106.881 li
97.2461 106.881 li
cp
f
98.7339 104.522 mo
98.9058 104.334 99.0938 104.24 99.312 104.24 cv
99.5308 104.24 99.7188 104.334 99.875 104.522 cv
100.031 104.709 100.109 104.99 100.109 105.381 cv
100.109 105.756 100.031 106.053 99.8589 106.24 cv
99.7031 106.428 99.5161 106.522 99.2969 106.522 cv
99.0161 106.522 98.7969 106.397 98.6411 106.131 cv
98.5469 105.975 98.5 105.725 98.5 105.365 cv
98.5 105.006 98.5781 104.725 98.7339 104.522 cv
98.7339 104.522 li
cp
98.5 106.506 mo
98.7031 106.803 98.9839 106.944 99.3281 106.944 cv
99.688 106.944 99.9839 106.803 100.25 106.522 cv
100.5 106.24 100.625 105.85 100.625 105.334 cv
100.625 105.115 100.594 104.928 100.531 104.725 cv
100.469 104.553 100.391 104.381 100.281 104.24 cv
100.188 104.115 100.047 104.006 99.875 103.928 cv
99.7188 103.865 99.5469 103.819 99.3589 103.819 cv
99.0308 103.819 98.75 103.959 98.5308 104.225 cv
98.5308 102.756 li
98.0308 102.756 li
98.0308 106.881 li
98.5 106.881 li
98.5 106.506 li
cp
f
200.168 64.8931 mo
231.5 64.8931 li
231.5 105.131 li
232 105.131 li
232 64.3931 li
200.168 64.3931 li
200.168 64.8931 li
f
231.164 106.819 mo
230.883 105.865 230.617 105.248 230.316 104.483 cv
233.219 104.494 li
233.09 104.764 232.645 105.873 232.352 106.819 cv
232.039 107.838 231.828 108.76 231.75 109.358 cv
231.68 108.756 231.469 107.834 231.164 106.819 cv
f
108.73 90.8813 mo
110.246 82.2524 110.836 74.647 110.836 67.873 cv
110.836 44.7988 103.973 31.4512 103.398 20.6821 cv
103.102 20.6968 li
103.688 31.5762 110.535 44.8579 110.535 67.873 cv
110.535 74.6274 109.945 82.2212 108.438 90.8296 cv
108.73 90.8813 li
f
110.508 90.6392 mo
108.109 93.5063 li
106.824 89.9937 li
110.508 90.6392 li
cp
f
221.711 58.627 mo
221.703 45.2871 229.438 35.6079 229.445 22.4551 cv
229.445 21.873 229.434 21.2788 229.398 20.6821 cv
229.102 20.6968 li
229.133 21.291 229.148 21.877 229.148 22.4551 cv
229.156 35.479 221.422 45.1621 221.41 58.627 cv
221.711 58.627 li
f
223.422 58.0801 mo
221.551 61.3188 li
219.684 58.0801 li
223.422 58.0801 li
cp
f
255.301 30.1899 mo
335.438 30.1899 li
335.438 131.858 li
255.301 131.858 li
255.301 30.1899 li
cp
0 0 0 0.090196 cmyk
ef
335.438 131.858 mo
335.438 131.608 li
255.551 131.608 li
255.551 30.4399 li
335.188 30.4399 li
335.188 131.858 li
335.438 131.858 li
335.438 131.608 li
335.438 131.858 li
335.688 131.858 li
335.688 29.9399 li
255.051 29.9399 li
255.051 132.108 li
335.688 132.108 li
335.688 131.858 li
335.438 131.858 li
0.619608 0.537255 0.498039 0.227451 cmyk
f
360.398 103.358 mo
360.398 82.8345 353.398 37.3301 353.398 21.3579 cv
353.102 21.3579 li
353.102 37.3809 360.102 82.8774 360.102 103.358 cv
360.398 103.358 li
0.733333 0.705882 0.654902 0.776471 cmyk
f
362.109 102.811 mo
360.238 106.049 li
358.371 102.811 li
362.109 102.811 li
cp
f
5.25 58.1899 mo
5.25 57.0918 6.14795 56.1899 7.25 56.1899 cv
38.043 56.1899 li
39.1411 56.1899 40.043 57.0918 40.043 58.1899 cv
40.043 71.7441 li
40.043 72.8418 39.1411 73.7441 38.043 73.7441 cv
7.25 73.7441 li
6.14795 73.7441 5.25 72.8418 5.25 71.7441 cv
5.25 58.1899 li
0 0.0901961 0.0784314 0 cmyk
f
5.25 58.1899 mo
5.75 58.1899 li
5.75 57.3691 6.43018 56.6938 7.25 56.6899 cv
38.043 56.6899 li
38.8628 56.6938 39.5391 57.3691 39.543 58.1899 cv
39.543 71.7441 li
39.5391 72.5649 38.8628 73.2397 38.043 73.2441 cv
7.25 73.2441 li
6.43018 73.2397 5.75 72.5649 5.75 71.7441 cv
5.75 58.1899 li
4.75 58.1899 li
4.75 71.7441 li
4.75 73.123 5.87109 74.2402 7.25 74.2441 cv
38.043 74.2441 li
39.4219 74.2402 40.5391 73.123 40.543 71.7441 cv
40.543 58.1899 li
40.5391 56.811 39.4219 55.6938 38.043 55.6899 cv
7.25 55.6899 li
5.87109 55.6938 4.75 56.811 4.75 58.1899 cv
5.25 58.1899 li
0.0745098 0.976471 0.972549 0.0117647 cmyk
f
239.535 113.752 mo
241.762 117.795 240.289 122.881 236.25 125.108 cv
232.203 127.33 227.121 125.862 224.895 121.819 cv
222.664 117.776 224.141 112.694 228.184 110.463 cv
232.227 108.237 237.309 109.709 239.535 113.752 cv
0.780392 0.00784314 0.894118 0 cmyk
f
226.965 120.065 mo
226.02 118.209 225.414 116.776 227.551 115.596 cv
229.688 114.42 230.578 115.697 231.641 117.487 cv
232.199 118.506 li
233.254 120.416 233.879 121.889 231.684 123.1 cv
229.488 124.307 228.578 122.994 227.527 121.084 cv
226.965 120.065 li
229.27 120.994 mo
229.594 121.584 230.176 122.526 231.09 122.018 cv
232.047 121.494 231.512 120.506 231.133 119.819 cv
230.125 117.987 li
229.809 117.412 229.141 116.131 228.145 116.674 cv
227.098 117.252 227.867 118.455 228.176 119.01 cv
229.27 120.994 li
cp
0 0 0 0 cmyk
f
235.152 120.963 mo
231.211 113.807 li
232.547 113.069 li
234.297 116.248 li
234.312 116.237 li
234.215 115.561 234.215 114.74 234.211 114.057 cv
234.188 112.166 li
235.691 111.334 li
235.621 115.377 li
239.723 118.444 li
238.219 119.276 li
235.398 117.143 li
235.355 118.174 li
236.488 120.229 li
235.152 120.963 li
f
379.117 72.3579 mo
379.117 131.608 li
339.148 131.608 li
339.148 72.3579 li
338.648 72.3579 li
338.648 132.108 li
379.617 132.108 li
379.617 72.3579 li
379.117 72.3579 li
0.619608 0.537255 0.498039 0.227451 cmyk
f
367.063 113.752 mo
369.285 117.795 367.816 122.881 363.773 125.108 cv
359.73 127.33 354.645 125.862 352.418 121.819 cv
350.188 117.776 351.664 112.694 355.707 110.463 cv
359.75 108.237 364.832 109.709 367.063 113.752 cv
0.780392 0.00784314 0.894118 0 cmyk
f
354.488 120.065 mo
353.547 118.209 352.938 116.776 355.074 115.596 cv
357.215 114.42 358.105 115.697 359.164 117.487 cv
359.727 118.506 li
360.777 120.416 361.402 121.889 359.211 123.1 cv
357.016 124.307 356.105 122.994 355.055 121.084 cv
354.488 120.065 li
356.797 120.994 mo
357.117 121.584 357.699 122.526 358.613 122.018 cv
359.57 121.494 359.035 120.506 358.656 119.819 cv
357.648 117.987 li
357.336 117.412 356.664 116.131 355.672 116.674 cv
354.621 117.252 355.395 118.455 355.699 119.01 cv
356.797 120.994 li
cp
0 0 0 0 cmyk
f
362.68 120.963 mo
358.734 113.807 li
360.07 113.069 li
361.82 116.248 li
361.84 116.237 li
361.738 115.561 361.738 114.74 361.734 114.057 cv
361.711 112.166 li
363.219 111.334 li
363.148 115.377 li
367.246 118.444 li
365.742 119.276 li
362.926 117.143 li
362.883 118.174 li
364.016 120.229 li
362.68 120.963 li
f
40 64.5532 mo
45.688 64.5532 li
45.688 65.0532 li
40 65.0532 li
40 64.5532 li
cp
0.733333 0.705882 0.654902 0.776471 cmyk
f
47.6992 64.2012 mo
46.7461 63.916 46.1289 63.6538 45.3628 63.3501 cv
45.375 66.252 li
45.6479 66.123 46.7539 65.6782 47.7031 65.3853 cv
48.7188 65.0718 49.6411 64.8618 50.2378 64.7832 cv
49.6411 64.7129 48.7148 64.502 47.6992 64.2012 cv
f
64.27 58.5688 mo
62.8521 58.5688 61.4219 58.9751 60.1602 59.8262 cv
56.7969 62.1001 55.9141 66.6699 58.188 70.0332 cv
59.6089 72.1353 61.9219 73.2681 64.2808 73.2681 cv
65.6992 73.2681 67.1289 72.8579 68.395 72.0059 cv
71.7539 69.7329 72.6372 65.1621 70.3628 61.8032 cv
68.9448 59.7012 66.625 58.5688 64.27 58.5688 cv
76.5552 85.979 mo
76.2422 85.979 75.9341 85.8218 75.7378 85.5405 cv
68.8872 75.3892 li
68.7339 75.1665 68.7661 75.022 68.8828 74.8931 cv
68.4341 74.2329 li
68.6289 74.1001 li
68.2578 73.5488 li
66.9961 74.209 65.6289 74.5288 64.2769 74.5288 cv
61.5161 74.5288 58.8008 73.2012 57.1411 70.7402 cv
54.4731 66.7988 55.5078 61.4438 59.4492 58.7788 cv
60.9302 57.7788 62.605 57.3032 64.2661 57.3032 cv
67.0308 57.3032 69.7461 58.627 71.4102 61.0918 cv
73.9141 64.791 73.1558 69.7368 69.793 72.5332 cv
70.1558 73.0688 li
70.3521 72.9399 li
70.7969 73.6001 li
70.8481 73.5801 70.895 73.5688 70.9409 73.5688 cv
71.0508 73.5688 71.1519 73.6309 71.2578 73.7871 cv
78.4219 83.8071 li
78.7271 84.2563 78.6172 84.8618 78.1841 85.1538 cv
77.0781 85.8188 li
76.918 85.9282 76.7378 85.979 76.5552 85.979 cv
0 0 0 0.188235 cmyk
f
62.0308 66.6899 mo
63.1021 67.1738 63.98 66.2871 64.875 66.123 cv
65.0938 66.3691 64.8438 66.877 64.9688 67.1582 cv
65.6172 67.6309 66.8789 67.459 67.3589 68.104 cv
67.0742 68.3301 66.688 67.9629 66.1841 67.8218 cv
65.3159 67.5801 64.3711 67.7251 64.6948 66.4512 cv
63.918 66.8188 62.6172 67.498 61.7188 66.877 cv
61.4141 67.0332 61.1558 67.2368 60.812 67.3501 cv
60.4531 68.1079 60.1558 68.9282 59.8628 69.7559 cv
59.2378 69.5332 59.2188 68.6699 58.4648 68.5762 cv
58.3438 68.7642 58.3008 69.0332 58.2422 69.2832 cv
58.418 69.334 58.605 68.7642 58.8711 68.9082 cv
58.895 69.2681 58.4878 69.5688 58.1479 69.709 cv
57.7769 69.4751 58.0659 68.9399 58.1479 68.5288 cv
57.5781 68.9868 56.4258 69.4897 55.3052 69.4282 cv
54.875 69.4009 54.3242 69.2949 53.9961 69.0488 cv
53.1802 68.436 53.3979 66.8262 53.9531 66.0762 cv
54.4648 65.3809 55.2031 65.1309 56.0269 64.897 cv
56.2808 64.4829 56.4141 63.9468 56.6128 63.4829 cv
56.8672 63.4629 56.938 63.416 57.02 63.1509 cv
58.3589 62.627 59.8979 62.3218 60.9922 61.5449 cv
59.6089 61.8032 58.0898 62.2642 56.6602 62.6782 cv
56.207 62.811 55.7539 63.0449 55.3052 62.9629 cv
55.355 62.6821 55.73 62.647 55.938 62.584 cv
56.6519 62.373 57.4531 62.1509 58.2422 61.9238 cv
59.2622 61.6309 60.355 61.2129 61.3979 61.311 cv
61.4258 61.8032 60.9102 61.9438 60.5898 62.1152 cv
59.605 62.623 58.2578 62.9902 57.1558 63.436 cv
57.3398 64.0449 57.793 64.373 58.1479 64.8032 cv
58.7422 64.7949 59.23 64.9009 59.73 64.9897 cv
60.27 64.3379 60.7109 63.4668 61.2188 62.7251 cv
61.355 62.5259 61.543 62.1899 61.8052 62.2051 cv
61.7231 62.7559 61.2578 63.1538 60.9492 63.623 cv
60.6411 64.0918 60.375 64.6079 60.0898 65.084 cv
60.4219 65.3188 60.9688 65.334 61.082 65.791 cv
60.6758 65.8853 60.3979 65.4399 60 65.3691 cv
59.418 66.0688 59.1089 67.0488 58.6909 67.916 cv
59.4409 67.772 59.9922 67.4199 60.6328 67.1582 cv
60.8872 66.5718 61.2422 66.1938 61.3091 65.3691 cv
61.4302 63.8892 62.3359 63.022 63.207 62.2559 cv
63.2539 62.022 63.3911 61.8809 63.4771 61.6899 cv
63.6519 61.647 63.6411 61.8032 63.7461 61.8301 cv
64.6641 61.166 66.3672 60.7168 67.9019 60.8379 cv
68.1758 60.8618 68.8091 60.9399 68.8052 61.311 cv
68.793 61.9082 67.8398 62.5962 67.4058 62.9629 cv
65.8008 64.3071 63.6289 65.6821 62.0308 66.6899 cv
66.77 61.1699 mo
65.5352 61.2759 64.0391 61.6699 63.3872 62.4438 cv
63 62.9038 62.8091 63.5879 62.4839 64.1899 cv
62.145 64.8149 61.3198 65.7988 61.7622 66.502 cv
63.6021 65.3691 65.4609 64.1968 67.0859 62.8691 cv
67.6089 62.4438 68.2461 61.9468 68.4878 61.2642 cv
67.9531 61.0532 67.3438 61.123 66.77 61.1699 cv
66.77 61.1699 li
cp
61.668 65.1309 mo
61.9448 64.4282 62.48 63.7441 62.6641 63.104 cv
62.2461 63.6582 61.707 64.334 61.668 65.1309 cv
61.668 65.1309 li
cp
56.3872 64.8501 mo
56.7852 64.7642 57.3159 64.811 57.6992 64.7051 cv
57.3711 64.3892 57.105 64.0059 56.8398 63.623 cv
56.7231 64.0688 56.5269 64.4282 56.3872 64.8501 cv
56.3872 64.8501 li
cp
56.2969 65.1309 mo
56.1211 65.459 56.0508 65.8809 55.938 66.311 cv
55.8398 66.6938 55.812 67.229 55.4878 67.397 cv
55.3711 66.752 55.7808 65.8931 55.938 65.229 cv
54.7109 65.4751 53.688 66.4038 53.7271 67.7759 cv
53.7539 68.791 54.5161 69.1538 55.5781 69.1431 cv
57.8281 69.123 59.4771 67.1079 57.9688 65.084 cv
57.5229 64.9941 56.8828 65.104 56.2969 65.1309 cv
56.2969 65.1309 li
cp
58.8711 66.8301 mo
59.1128 66.2949 59.3789 65.7871 59.6411 65.2759 cv
59.2461 65.166 58.7769 65.1392 58.3281 65.084 cv
58.605 65.5688 58.7808 66.1538 58.8711 66.8301 cv
58.8711 66.8301 li
cp
61.082 66.877 mo
61.25 66.8501 61.3481 66.7441 61.4878 66.6899 cv
61.4609 66.5488 61.4771 66.3579 61.355 66.311 cv
61.2808 66.5181 61.1641 66.6782 61.082 66.877 cv
61.082 66.877 li
cp
58.6021 68.3418 mo
59.207 68.4468 59.4141 68.9712 59.7769 69.3301 cv
59.8711 68.6621 60.1372 68.1699 60.4058 67.6782 cv
60.3159 67.584 li
59.8438 67.9438 59.105 68.022 58.6021 68.3418 cv
58.6021 68.3418 li
cp
0.8 0.415686 0.152941 0 cmyk
ef
67.3911 72.084 mo
67.1948 72.2168 li
66.7031 71.4868 li
65.1758 72.5181 li
65.668 73.248 li
65.4731 73.3809 li
66.062 74.2441 li
67.9771 72.9512 li
67.3911 72.084 li
0.219608 0.14902 0.247059 0 cmyk
f
67.3911 72.084 mo
67.25 71.877 li
67.0552 72.0103 li
67.1948 72.2168 li
67.4019 72.0762 li
66.9102 71.3462 li
66.75 71.2402 li
66.562 71.2788 li
65.0352 72.311 li
64.9219 72.3892 64.8911 72.541 64.9688 72.6582 cv
65.4609 73.3892 li
65.668 73.248 li
65.5269 73.041 li
65.3359 73.1699 li
65.2271 73.3301 li
65.2661 73.522 li
65.855 74.3853 li
65.9341 74.5024 66.0898 74.5288 66.2031 74.4517 cv
68.1172 73.1582 li
68.2231 72.998 li
68.1841 72.811 li
67.5981 71.9438 li
67.52 71.8301 67.3628 71.7988 67.25 71.877 cv
67.3911 72.084 li
67.1841 72.2251 li
67.6328 72.8853 li
66.1289 73.9009 li
65.6802 73.2397 li
65.4731 73.3809 li
65.6128 73.5879 li
65.8091 73.4551 li
65.9219 73.377 65.9531 73.2251 65.875 73.1079 cv
65.5229 72.584 li
66.6328 71.834 li
66.9878 72.3579 li
67.1479 72.4629 li
67.3359 72.4238 li
67.5308 72.291 li
67.3911 72.084 li
67.1841 72.2251 li
67.3911 72.084 li
0.733333 0.705882 0.654902 0.776471 cmyk
f
gsave
65 72.2637 mo
76 72.2637 li
76 85.2642 li
65 85.2642 li
65 72.2637 li
cp
clp
75.1519 83.0796 mo
75.457 83.5298 75.3481 84.1353 74.9102 84.4282 cv
74.1211 84.9624 li
73.6841 85.2603 73.082 85.1353 72.7808 84.686 cv
65.9258 74.5376 li
65.6211 74.0879 66.043 73.9478 66.48 73.6509 cv
67.2729 73.1157 li
67.707 72.8228 67.9961 72.4829 68.3008 72.936 cv
75.1519 83.0796 li
cp
clp
65 72.2637 mo
76 72.2637 li
76 85.2642 li
65 85.2642 li
65 72.2637 li
cp
clp
65 72.2637 mo
76 72.2637 li
76 85.2642 li
65 85.2642 li
65 72.2637 li
cp
clp
75.1519 83.0796 mo
75.457 83.5298 75.3481 84.1353 74.9102 84.4282 cv
74.1211 84.9624 li
73.6841 85.2603 73.082 85.1353 72.7808 84.686 cv
65.9258 74.5376 li
65.6211 74.0879 66.043 73.9478 66.48 73.6509 cv
67.2729 73.1157 li
67.707 72.8228 67.9961 72.4829 68.3008 72.936 cv
75.1519 83.0796 li
clp
65 72.2637 mo
76 72.2637 li
76 85.2642 li
65 85.2642 li
65 72.2637 li
cp
clp
59.7148 76.4399 mo
68.668 89.8071 li
81.3628 81.3032 li
72.4102 67.936 li
59.7148 76.4399 li
cp
clp
gsave
65.7598 85.2085 mo
65.7598 72.728 li
75.3599 72.728 li
75.3599 85.2085 li
65.7598 85.2085 li
cp
clp
64.5313 86.5327 mo
64.5313 72.1327 li
77.9713 72.1327 li
77.9713 86.5327 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 144.108 ]ct
[13.44 0 0 -14.4 64.5313 71.9752 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 28 
/H 30 
/M[28 0 0 -30 0 30 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcMABn@A_4[&/iZ!:[E![AoI:q>g#\"/D9=D#+/$_?7K;;AK$.n@A_2Xd,IR!:mQ%[^N9-J;a7(n>$/V
NH9XH!:[i-V.h,6q>g&s"M(e.PcX]]n[8S+UPjYoq>gPko:uM_P^[_7q>g'&"L<M:,&R/Vo"#"8[&&bZ
[JBmo[KX(;PBiCmq>g)^!Mc%bLMVd8q>g*'"hg-u'iULr!:m])\#kmdZ+0W1o!S_'S:QWq[/'dnU]m9J
F+0@Jq>gK2p;.!0Bd,Tk[/'do\d#^MSWp4b](uEu[Ka%4Mh.J'[e^!qU^!NWHuk=>V"t)__?@/o2Blu=
WP\K3oXY:<[&/h\[CNmF!;*])[A]:7QE%@$q>g/`#G[]@CknISV"t)`_?[c=;&*&t]u'UGqmuX8#Igh"
T!5`9](uF![Kin(J;gA4[^Q#4oV;_^NH0K5U84U]!;+,5V.h)6L:"h7q>g3""hCn/Q)qIo](uF"[KWt3
Mgq>%rjMY'oqVbbPC.M5T)PP^!;424Z@+VTD5mNOq>g6##._+;NMa+orjqq+q6p:2#.:CmH'PD;rjMY'
p7qnfR>5U8R\TkXq>g6+#/-6t'igX7rkeL3p::F8XHT3[\Ga#8!;<i)Xdjp"V6p30rrDrsp7qk^NH0N6
UA^na!;=85V.Ur5L:$orq>g9$"h:h.Q)qIm](uF$[KWt3Mh.J'r3lG%pS7tcPC.G4T)>D\!;F>6YC/;Q
DQ3QNq>g<%#._+;NMa+or4;_)ppLC7W0;LlWjVc5q>g;d#,@T?Cl+UUr1s8krW)`1#/-6s'igX7r5/:1
pppX:X-B3\\GNl6!;Nu+XdX`uV6p-.q>g;d"e:TnI[-Z)V"t)d_?-QH*s+QZ[/7`:!;X20\?VQiXLJ&;
q>g?""gXn[J=`t@[e^""U]mETHZbC@qP<rfq8*<=I5E0dWVXL/!!!#q\d#^PV2_@[\b`o6!;a,.[A]:7
Q)_7g[e^"#U^!T^KkuU7U\^e_!;aP:]p);-=.$\t_YO9/\d#RCPFf%h])'#7!;a,-Xdaj"V6p',q>gAf
"e:NlJ<cl)V"t)f_?HcJ+$G@cq82t.qmls@Z(.)\\+mQ2!!'J*[KWt3M1M8#ppU#!qkOCgPC%D4U%kG[
!;jV:YC/5QDQEQLq>gH)#._%8NMa(npq$;%r3cg;W0)@jX0qo7r3lG%r1jOlR"fF6S"obSq>gH1#/--o
'j$j;pqlk-r43'>X-90\\G*T2!;s8/Xdad"VR6*+q>gMj#Ge/cN,jE5UA(J[!;s\;V.Lf5LpZonq>gK*
"h:h-QE@Xi](uF*[KWt2M1D5#p9setrM0UiP'V;4U%tM`V"t)i_?I,j1F7%Ap;6Y+rji<CZDEPY[(5nA
q>gN'#.1=lH'YM=p9setrhKaqR"T:5S"o\Qq>gN3!P=Hs9bgg"^%T>>!<0P5\#PX`Z+0J<q>gN'"g+5B
NMa)U[e^"'U]m9KEe0LMoq_Eark\i5Afj3m[._?:_YO6;]"5DVS<g:doXal!#I_(HU5=JoYk5C#!!f<q
TTXVDO.Q!>q>^c;_QS>C-#p!X_YO6:]",,ANMj,`\b*K0!!fs?W0)@kX0qT.q>^brUR6aOMOUC5V"t&r
_Rbk''j7!=oYUG)#.h:EP+](io==o%qZ$i/Xda`uVR5s'q>^_qS;_H<Q(mlGq>^`:U1>9.LpZcjq>^]/
Z(./_\+7-,!!T[&LkD>(rjML.q>^\lP'_>4T(8]R!!TQR0d^n@o"rBH`rLV~>

%%EndBinary
grestore
np
grestore
grestore
75.1519 83.0796 mo
74.9448 83.2212 li
75.0308 83.354 75.0742 83.4976 75.0742 83.6431 cv
75.0742 83.8726 74.9688 84.0884 74.7729 84.2212 cv
73.98 84.7563 li
73.8628 84.8384 73.73 84.8726 73.5981 84.8726 cv
73.3628 84.8726 73.1328 84.7603 72.9839 84.5454 cv
66.1328 74.397 li
66.1328 74.4009 li
66.0698 74.2642 li
66.0698 74.2603 66.0698 74.229 66.1758 74.147 cv
66.2769 74.0718 66.4409 73.979 66.6211 73.8579 cv
67.4141 73.3218 li
67.562 73.2212 67.6909 73.1191 67.793 73.0532 cv
67.895 72.9829 67.9688 72.9629 67.98 72.9668 cv
67.9839 72.9712 68.0039 72.9512 68.0938 73.0718 cv
74.9448 83.2212 li
75.3589 82.9399 li
68.5078 72.7949 li
68.3828 72.604 68.1909 72.4629 67.98 72.4668 cv
67.7891 72.4712 67.6479 72.5532 67.52 72.6353 cv
67.3911 72.7212 67.2661 72.8218 67.1328 72.9082 cv
66.3398 73.4438 li
66.1841 73.5488 66.02 73.6392 65.875 73.748 cv
65.7339 73.854 65.5742 74.0181 65.5742 74.2642 cv
65.5742 74.4087 65.6289 74.5454 65.7148 74.6782 cv
65.7188 74.6782 li
72.5742 84.8257 li
72.812 85.1821 73.2031 85.3774 73.5981 85.3726 cv
73.8242 85.3774 74.0591 85.311 74.2622 85.1704 cv
75.0508 84.6353 li
75.395 84.4038 75.5742 84.0259 75.5742 83.6431 cv
75.5742 83.4009 75.5039 83.1538 75.3589 82.9399 cv
75.1519 83.0796 li
f
gsave
52 56.2637 mo
70 56.2637 li
70 74.2637 li
52 74.2637 li
52 56.2637 li
cp
clp
56.4878 57.9277 mo
52.5469 60.5918 51.5122 65.9478 54.1758 69.8848 cv
56.8398 73.8301 62.1948 74.8618 66.1372 72.2017 cv
70.082 69.5337 71.1128 64.1821 68.4531 60.2407 cv
65.7852 56.2949 60.4302 55.2637 56.4878 57.9277 cv
56.4878 57.9277 li
cp
65.4302 71.1509 mo
62.0659 73.4238 57.5 72.541 55.2271 69.1777 cv
52.9531 65.8188 53.8359 61.248 57.1992 58.9751 cv
60.562 56.7017 65.1289 57.584 67.4019 60.9478 cv
69.6758 64.311 68.793 68.877 65.4302 71.1509 cv
65.4302 71.1509 li
cp
clp
52 56.2637 mo
70 56.2637 li
70 74.2637 li
52 74.2637 li
52 56.2637 li
cp
clp
52 56.2637 mo
70 56.2637 li
70 74.2637 li
52 74.2637 li
52 56.2637 li
cp
clp
56.4878 57.9277 mo
52.5469 60.5918 51.5122 65.9478 54.1758 69.8848 cv
56.8398 73.8301 62.1948 74.8618 66.1372 72.2017 cv
70.082 69.5337 71.1128 64.1821 68.4531 60.2407 cv
65.7852 56.2949 60.4302 55.2637 56.4878 57.9277 cv
65.4302 71.1509 mo
62.0659 73.4238 57.5 72.541 55.2271 69.1777 cv
52.9531 65.8188 53.8359 61.248 57.1992 58.9751 cv
60.562 56.7017 65.1289 57.584 67.4019 60.9478 cv
69.6758 64.311 68.793 68.877 65.4302 71.1509 cv
65.4302 71.1509 li
cp
clp
52 56.2637 mo
70 56.2637 li
70 74.2637 li
52 74.2637 li
52 56.2637 li
cp
clp
59.4141 45.647 mo
41.8979 66.9629 li
63.2148 84.479 li
80.73 63.1616 li
59.4141 45.647 li
cp
clp
gsave
52.7998 73.688 mo
52.7998 56.4082 li
69.8398 56.4082 li
69.8398 73.688 li
52.7998 73.688 li
cp
clp
51.5664 74.9751 mo
51.5664 55.7751 li
72.6864 55.7751 li
72.6864 74.9751 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 144.108 ]ct
[21.12 0 0 -19.2 51.5664 88.3328 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 44 
/H 40 
/M[44 0 0 -40 0 40 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&SH'Q8"p+c)!<E?/$4dge*$Qa\0fD0^92S_pA81dRq>_B<#6Or+!WiN1#R:_H&/,cs*$?IR/2&k>
48(u:!#c7O"98E&!s]/C&el6,-7gi/4@2Y;=']<NE;+A5!:'Uf$OR%=!<*!4"UPMI'Gqi7-S.#55"/+A
='fHQphT^+":,59!s&<%!!W?-%grmZ',DH++=&?d0JkaP6MNkC!"]VJ#6Y#-!<WQ5%MBNs+XScI1-%Nd
92SeuAnq'[c2\dp$OHt;!!**%"pkYK'H%u:-nR595XnFF>$bh9C\e#=#m^_=!WW9'!s]);%gWRR&JZ'"
*$HOT/MT(B4nq>>!#lR\$3pY5!<E</$4[ac*?lj`1-%Qh92Si!ASq3^c2\%_%giOE!<<i8!<NH4$P='l
+!`6e1cdom9N,/&BDH?>!#uCR#R:J6!!33("pYD?$kEsc(`FD>-7LQ&2EF%t62CR$((q)`#6Or,!<`];
%M]g%+X\it3^6,.;HdI?D>A2H!7q2k(_[De#6Y&-!<E?.#n.I_)^$CU0JtpX85<,g?tfCPq>_NH$jd1E
"9JQ)!X&]5#mq+P',;B)*?um\0/>CH5l*eF!<)s=*#9+q#mLD1!<WQ5$kO-k*[<*c1cdll:K1P,B5[Qc
c2\n*(D@2a"p=o+!<E?/#nI[c*$?U[0f;'Z8P`>k@qkjV!,ME2*=rYg#m^b=!!!'%":#2;$4ROZ()S#5
,UY)r1H.>j62CR&+;tq*$j[%;!!*0,$4IO^)BL1S0fD'Y85N;j@qfoZESCKc!$<:&((go]"p+c)!<E?/
$4dge*?lj^0f_Ba92JYpASM'Xq>_QL&.K!Q#6t>2!!33*#7(PB%1s6h)&sbD.4d222a.%(q>_BY*Z5Y%
$O?k8!!*0,$4[[a)BU:W1,qHa8Hhsl?"Ibir,L!^+!_pI((^i["TeZ)!<NH3$4mmh*?lj_1-%Nf9Mnkt
Ac-??!"BYU%h/gN"pG)/!WiH/rWiT6%M0?^()e29,Ub5u2E3kt62CR'-R0ZK'+P?S"98H'":,;D&f)K2
-S7)65"/+A=C,TTr,L!^%k&VD)\`hj#m:8/!<E6+$4mRW'H%u;-nR285Y"OH>$kn?C\e#R()7Dl$jd1D
"9JQ)!WrZ4#RLnL&JQ!!*?c^X/28tA4oI\C!$EmA+rh@3%LNFC!!**'#R_+U(*+SI/i#IP7SH`a?Y=6S
EUNnc!$Nm@+rqL6%giOE!<<-$"9o2A&Jc<-,Ub9%4$cD4;d3XBrbM?1+W2%1&.]3V#R:J6!!33("pYG@
%1a'd(`FD=-7UT&2*!l"62CQb1+Xdr*#9J+%LE@@!!*0+#n.@[(EOeM/i,OR7nlrd@:sHVER"P00J"Op
*>]@u$3p\7!!**(#71eP(*"GD.PN_A5tFdN>@M8]C\e#2)^?19&eGK\#RCY<!WW9'":#2=$4RO['H%i3
,:=rn1,_0Y5sb>I,W.;-,p=0B&e,-O!<<-&#7:kN'cA&;.k`b@5Y+[M>@M;aEH0D,r;\*"0IeCl*#B1q
$3gP3!!**(#7:tT(E=VH.krqF6V1'R>\%Paq>_c]*#BA'&.JsQ#6t>2!!33*#7(PA%1j0g)B9eC-S$l,
2`j;kq>_^$1b^C**Z>b)$jZt9!!*0,$4[[`)B^=U0K)$[8l/Ml@ql$`ER"P03AN3:,Te!A&ISpL!WW3$
!<ic:&/5p$+t"os3B]f(;-$t6CAIoB+rqR<'bV#d$O?t@!rr<&!X8Q/#R_(Q',DH++<q(=/2/qA4[SuF
,X4=G/h&%e)&*Pg#6Y#,!<WQ5%MBNs+XScr3'K`';-7+8C2_At(d0l7/LVkd)\`hk#mC>0!<E6+#n%:Y
)'951-S7)75"84D>$bh;!"pM!*?,b/&J#?X#R1G6!!33(#Q=u=$k<ja(E+;;,Ub6!1c[br!$jlp3AE-6
,T[a8%LNFC!!**'#RV%S(*+PG/2B4M78$K\?Y+$8!9jJ/5s.%[/12V`)&*Sg#m:8/!<E6+$4@F[)]p:Q
/i5US7ncib?hsaJ-R0`T)]'5$%L`XL"p=u-!WiH.#7(VE%hTKm)BC%K.5!A43r/gd84#Et0e=[r*>T7t
$3pYJ!!**'#n.:Y(`jkL/MfFP7SH]`@:mdb,Y(-_2)-U.,97U8%giOE!<<-$"9o/@&Jc<-,UtK)4$cD4
<*T2!#q72G*ul18'+bZm$OI(D"9JQ)!X&]5#mh%O&eu9(*[<!]/M]3[!$k6.5WUeW/1)M[((q&_#6=f*
!sT&>&/?'(,:P3$3^?22<*NeV!!Gqa5s$qG0J"Op*>]@t$3gV5!!**(#71nS(*"GE.PWeC5tOjPq>_cl
-mg,Y*#KG(&If-T#R:J4!!33)#7(PA%1j-f)''eD-S$l,q>_d<91D0-1bgI+*uYh)%1!.<!!*0,$4IO^
)'1(R0/YdW85N;iq>f%G,Yq'%5WU_U.OH8X((gr^"p+c)!<E?/$4dge*?lj^0fD0^92YNc-86u!-6jNN
(D[So%1<II#6Or+!WiN1#R:_H&JGls*$?IT/2$u'quA!B;+j>B3]&H<,T[g;&.8aH!!!$%#7:qR()e8A
/2B1I6:k$Uc2]"d:J!u=3AW9;,Tds@&.8gK!WW6%!X/l;&/5s%+t"os3<DB59_n`)1+k(*,U+3H(DRPn
%1*:F"Tn`+!WrW*#RUqM&/>ru*?ZUU/c#Gm>#\9h6pE[f/ghkb)&!Jf#6Y#-!<`W6%MBNs+X\is3Bfi(
;;D6C!$kZE:.RZ62DQj4,Tds>&./^H!<<-$!X8u>&/6!(+t,$!3^?12!$jEV/Li+m+<;@9'bLrb#m^_<
!WW9'!s]&:#Rh1T'c%]-+XJW7!#K!F<)6%O4?5/L-R'NI'+P?S!rr?&":,DD%MT[!+t"uu3Bou*c2]+p
<`2X^5s.%[/12V`(_[De#6Y&-!<E<-$4IL\)]p=R/i5UTq>_-e2)-X2-R0ZP)\s/#%h/gN#6YV?!!33(
"pYG@$kEsc(`FD>-Md]f@pW;:9h7T53&*!4+rh@2%LE@@!!**)#n.@[(`jnL/MfFP8'V)D?s?W.9L_<0
2)-X/+rqF8'+YET"9AK'!<iZ6$kjBr+=8Ql2*:^9-3+$+2D[$=-mg/Z*>fS+&.K$S#R:J6!!33)"pbMB
%1j0e)&sYAq>_dR@U3&49h.H12)-X/+W;+.%1*4>!!*0,#n.@[)'1"P0/P^TeH#FG,\:=e<)H:X5W^eV
.jcAY(D.&_"p=o+!<E?/#nI[c*$Qa]0fJk.,X".F1,(7-,pF?L)&<hr%13CI#6Y#,!WiK0#R:\G&/,fr
*$4qV+)>Lt>ZFWo7R0$l0Ie@i)ANel#R18/!<WQ6$ka9n*X!c=0fD/>!$l8i?<U9'91;$)1bL7'*ul%.
$OR%=!!!$#"UPMH'Ghc6-S.%L!#e'b3&WKD/LVkg*?#_/&eGK[#R:M8!!!'%"UPG?#7CtP',DH+q>_d[
CM$sZ<)6.T5<:SQ.3orP'FkKU"98E&!s],B&f)H1-7go3c2\SpBk1LO;bfnO4ZP8M-mTlR((^i["V(P5
!<E6+#n%:Y)''nK/c#Gd5sIFk2)6a6.3g#W)AX&#%h/gN"pG&.!WiH/rWiZ9%M0?j)YsFZEH#Z(?WpE)
8O>R#1G1%"*Z#J"$3pY5!<E</#n@R`*?cd^1?ef$!$l>pBOb:K;GB\J4>nrG-mB`N'G(TX"9AK'!<NH4
$P='l+!W31!$jis5!1b\0eOq',9S!G()7Dk$jd1D"9JQ)!WrZ4#RLnM&JQ)Y!"3ddDeW]g=].sb69H)E
0eOgt*>T:u$3pY5!<E</$k<pd*[3!ac2],*CMIKi>?4Tp7mT6p0e=Xr*>fJ$$3p\7!!**'"ptbN()n>@
q>^^c5sd[q2DZ@//L`"k*ul.7'+bZ^#mgh>!WW9'"9o);#n7CX(&@q0E?T46@U</69h.N22DQg1+WM71
$jd.>!!*0+#n.@[(EOeMc2dl[,&:q*?X$N,9L_<02)$R/+rqI5%13:B!<<-$"U>>B',DQ1q>gL\+[S=P
2DHp<-mg)X)]0>'&If-S#R:J6!!33)#7(VC%1j3L!<$m[D.d<_<`)LZ5s$qY.O?/T((q&^"p"])!s]/A
&/?'(,Q.Vj!<$[UC1UaV<)6.U5WU_U.OH8X(D.&_"p+c)!<E?/$4dge*;T[65p&?T3ArWH/1Mtk*?5k2
&J,BZ#mU\;!!!'%"U>;<$Om(Iq>gG5+)>Ls>ZFWn76`gi0Ie=h)AE_k#Qt,-!<WQ6%MBHo+O0ubCDLVp
?<U9'8OYg'1+k%%*ubt-$OR%=!<*!&"UPMI'H$ZHr';)_4#f,R/h8=q+rqR<'bV#d$O?t@!s&<%!!W?-
!=KG7!;pgYE,0&n>#\<k6pE^g/h&%e)&*Pg#6Y#-!<WQ5%MBNshuN3Gr+dBhBOkCN;bfkN4Z>,J-mTlR
'G(WY"T\T(!<NH3$P4$K!;o,%69[Ii2)6a5-R0`S)\s/#%h&aM"pG&.!WiH/rWiK4q>gD4%W?)n?WpE)
8jY^%0eOh!%iuQ$%13=B!!**'#RV%U(<upWCE@5'@U)r39LhB22DHa1+s.X9%giOE!<<-$!X8u>&c)M)
5m]kA3]AoN/h&.m'HeA7(DRMm$jd1E"9JQ)!WrW3#RU>-qJdNmBk(IP;GB\K4?,&H-R'NG&e53Q!rr?&
":5JH(!ZgUCBJ<`?s=LL;+sGF4>eiD-6aHI'+YET"9AK'!<iZ6%/Ku#5oi9T3ArZI/Li(l*??%7'+bZ_
#m^b=!WW9'"9o,<q>g>2*,T=t?<C&u7mK-n0J"Oo*#9+q#mLD1!<WQ5$kW%2gAq%b*,9(m>#\?l7R0$m
0InIo*#B7s$3gV5!!**(#7:5,q*>ue4ZPGV0J"Uu+rqX@((q/f$jd1E"98E'!X&`6q>^M8q/I?jB4+tE
;+jAD3]&N?,p4*?&.AgK!!!$%#7:mb!;L=KBk:US<)6.U5WU_U.OH5W((go]"p+c)!<E?/rW)lspH]]\
3&WNE/LVqh*?#_0&eGK[#R:S:!!!'%"UFl(pi.6lCM$sY<)6.U5<:SQ.3orP'G(WX"98E&!s]1b!;HQg
CDpnt?<C-%8OGX$1G1.&*ubt,$OHt<!!**%#5S>o5oMsL3&NHD.k)\e*#]V.&e>EX#R1G7!!33(#PnGp
E>*;+Am\_@:J!l;3AW98,9@^9%LNCF"98H'":39QpM1[^BOb:L;GKbK4Z5&I-mB`P'G(TX"9AK'!<W)t
pH]9U5!1b]0eFk&,9S!F()72h%h&aM"p=u-!WiK#!;:CMDeW]g=]A0f69I7`/ghh_()%/b#6Or,!<ft6
JcOp5J,~>

%%EndBinary
grestore
np
grestore
grestore
56.4878 57.9282 mo
56.3481 57.7212 li
53.8159 59.4321 52.4492 62.229 52.4492 65.0688 cv
52.4492 66.7788 52.9409 68.5059 53.9688 70.0259 cv
55.6841 72.561 58.4771 73.9282 61.3198 73.9282 cv
63.0269 73.9282 64.7578 73.436 66.2769 72.4082 cv
68.812 70.6938 70.1802 67.897 70.1802 65.0532 cv
70.1802 63.3462 69.688 61.6191 68.6558 60.1001 cv
66.9448 57.5649 64.1519 56.1968 61.3091 56.1968 cv
59.5981 56.1968 57.8711 56.6899 56.3481 57.7212 cv
56.6289 58.1353 li
58.0659 57.1621 59.6948 56.6968 61.3091 56.6968 cv
63.9922 56.6968 66.6289 57.9868 68.2422 60.377 cv
69.2148 61.8149 69.6802 63.4438 69.6802 65.0532 cv
69.6802 67.7402 68.3911 70.373 65.9961 71.9941 cv
64.562 72.9629 62.9341 73.4282 61.3198 73.4282 cv
58.6372 73.4282 56 72.1392 54.3828 69.7441 cv
53.4141 68.311 52.9492 66.6821 52.9492 65.0688 cv
52.9492 62.3853 54.2378 59.748 56.6289 58.1353 cv
56.4878 57.9282 li
65.4302 71.1509 mo
65.2891 70.9438 li
64.0698 71.7681 62.6909 72.1621 61.3198 72.1621 cv
59.043 72.1621 56.8052 71.0688 55.4341 69.0371 cv
54.6089 67.8188 54.2148 66.4399 54.2148 65.0688 cv
54.2148 62.791 55.3091 60.5532 57.3398 59.1821 cv
58.5591 58.3579 59.9409 57.9629 61.3091 57.9629 cv
63.5859 57.9629 65.8242 59.0571 67.1948 61.0879 cv
68.02 62.3071 68.4141 63.6899 68.4141 65.0571 cv
68.4141 67.3379 67.3198 69.5718 65.2891 70.9438 cv
65.5698 71.3579 li
67.7422 69.8931 68.9141 67.4941 68.9141 65.0571 cv
68.9141 63.5962 68.4922 62.1118 67.6089 60.8071 cv
66.1411 58.6353 63.7461 57.4629 61.3091 57.4629 cv
59.8438 57.4629 58.3628 57.8892 57.0591 58.7681 cv
54.8872 60.2368 53.7148 62.6309 53.7148 65.0688 cv
53.7148 66.5332 54.1372 68.0142 55.02 69.3188 cv
56.4878 71.4902 58.8828 72.6621 61.3198 72.6621 cv
62.7852 72.6621 64.2661 72.2402 65.5698 71.3579 cv
65.4302 71.1509 li
cp
f
191.793 58.5688 mo
190.379 58.5688 188.945 58.9751 187.684 59.8262 cv
184.324 62.1001 183.438 66.6699 185.715 70.0332 cv
187.133 72.1353 189.449 73.2681 191.809 73.2681 cv
193.223 73.2681 194.656 72.8579 195.918 72.0059 cv
199.277 69.7329 200.16 65.1621 197.891 61.8032 cv
196.469 59.7012 194.152 58.5688 191.793 58.5688 cv
204.082 85.979 mo
203.77 85.979 203.457 85.8218 203.266 85.5405 cv
196.41 75.3892 li
196.262 75.1665 196.289 75.022 196.41 74.8931 cv
195.961 74.2329 li
196.156 74.1001 li
195.781 73.5488 li
194.523 74.209 193.156 74.5288 191.801 74.5288 cv
189.039 74.5288 186.328 73.2012 184.664 70.7402 cv
182 66.7988 183.035 61.4438 186.977 58.7788 cv
188.453 57.7788 190.133 57.3032 191.793 57.3032 cv
194.559 57.3032 197.273 58.627 198.938 61.0918 cv
199.633 62.1191 200.074 63.2441 200.281 64.3931 cv
200.168 64.3931 li
200.168 64.8931 li
200.355 64.8931 li
200.691 67.7212 199.609 70.623 197.316 72.5332 cv
197.684 73.0688 li
197.879 72.9399 li
198.324 73.6001 li
198.371 73.5801 198.422 73.5688 198.465 73.5688 cv
198.574 73.5688 198.68 73.6309 198.785 73.7871 cv
205.949 83.8071 li
206.25 84.2563 206.145 84.8618 205.711 85.1538 cv
204.605 85.8188 li
204.445 85.9282 204.262 85.979 204.082 85.979 cv
0 0 0 0.188235 cmyk
f
200.355 64.8931 mo
200.168 64.8931 li
200.168 64.3931 li
200.281 64.3931 li
200.312 64.561 200.336 64.7251 200.355 64.8931 cv
0.733333 0.705882 0.654902 0.776471 cmyk
f
189.559 66.6899 mo
190.625 67.1738 191.508 66.2871 192.402 66.123 cv
192.621 66.3691 192.367 66.877 192.492 67.1582 cv
193.141 67.6309 194.402 67.459 194.883 68.104 cv
194.598 68.3301 194.215 67.9629 193.711 67.8218 cv
192.84 67.5801 191.895 67.7251 192.223 66.4512 cv
191.445 66.8188 190.145 67.498 189.242 66.877 cv
188.938 67.0332 188.684 67.2368 188.34 67.3501 cv
187.98 68.1079 187.68 68.9282 187.391 69.7559 cv
186.762 69.5332 186.742 68.6699 185.992 68.5762 cv
185.867 68.7642 185.824 69.0332 185.766 69.2832 cv
185.941 69.334 186.129 68.7642 186.398 68.9082 cv
186.422 69.2681 186.012 69.5688 185.676 69.709 cv
185.301 69.4751 185.59 68.9399 185.676 68.5288 cv
185.105 68.9868 183.949 69.4897 182.828 69.4282 cv
182.402 69.4009 181.852 69.2949 181.52 69.0488 cv
180.703 68.436 180.922 66.8262 181.477 66.0762 cv
181.992 65.3809 182.727 65.1309 183.555 64.897 cv
183.805 64.4829 183.938 63.9468 184.141 63.4829 cv
184.395 63.4629 184.465 63.416 184.547 63.1509 cv
185.883 62.627 187.426 62.3218 188.52 61.5449 cv
187.133 61.8032 185.613 62.2642 184.184 62.6782 cv
183.734 62.811 183.277 63.0449 182.828 62.9629 cv
182.883 62.6821 183.254 62.647 183.465 62.584 cv
184.18 62.373 184.977 62.1509 185.766 61.9238 cv
186.789 61.6309 187.883 61.2129 188.926 61.311 cv
188.949 61.8032 188.434 61.9438 188.113 62.1152 cv
187.129 62.623 185.785 62.9902 184.684 63.436 cv
184.863 64.0449 185.316 64.373 185.676 64.8032 cv
186.27 64.7949 186.758 64.9009 187.258 64.9897 cv
187.793 64.3379 188.238 63.4668 188.746 62.7251 cv
188.883 62.5259 189.07 62.1899 189.332 62.2051 cv
189.246 62.7559 188.785 63.1538 188.473 63.623 cv
188.164 64.0918 187.898 64.6079 187.617 65.084 cv
187.949 65.3188 188.492 65.334 188.609 65.791 cv
188.199 65.8853 187.926 65.4399 187.523 65.3691 cv
186.945 66.0688 186.637 67.0488 186.219 67.916 cv
186.969 67.772 187.516 67.4199 188.156 67.1582 cv
188.41 66.5718 188.77 66.1938 188.836 65.3691 cv
188.957 63.8892 189.859 63.022 190.73 62.2559 cv
190.777 62.022 190.918 61.8809 191 61.6899 cv
191.176 61.647 191.164 61.8032 191.27 61.8301 cv
192.191 61.166 193.891 60.7168 195.426 60.8379 cv
195.703 60.8618 196.336 60.9399 196.328 61.311 cv
196.316 61.9082 195.367 62.5962 194.93 62.9629 cv
193.328 64.3071 191.156 65.6821 189.559 66.6899 cv
194.297 61.1699 mo
193.059 61.2759 191.562 61.6699 190.91 62.4438 cv
190.523 62.9038 190.336 63.5879 190.008 64.1899 cv
189.672 64.8149 188.844 65.7988 189.285 66.502 cv
191.129 65.3691 192.988 64.1968 194.613 62.8691 cv
195.137 62.4438 195.77 61.9468 196.012 61.2642 cv
195.48 61.0532 194.867 61.123 194.297 61.1699 cv
194.297 61.1699 li
cp
189.195 65.1309 mo
189.473 64.4282 190.008 63.7441 190.188 63.104 cv
189.773 63.6582 189.23 64.334 189.195 65.1309 cv
189.195 65.1309 li
cp
183.914 64.8501 mo
184.312 64.7642 184.844 64.811 185.223 64.7051 cv
184.898 64.3892 184.629 64.0059 184.367 63.623 cv
184.25 64.0688 184.051 64.4282 183.914 64.8501 cv
183.914 64.8501 li
cp
183.824 65.1309 mo
183.645 65.459 183.574 65.8809 183.465 66.311 cv
183.363 66.6938 183.336 67.229 183.012 67.397 cv
182.898 66.752 183.305 65.8931 183.465 65.229 cv
182.234 65.4751 181.215 66.4038 181.25 67.7759 cv
181.281 68.791 182.039 69.1538 183.102 69.1431 cv
185.355 69.123 187.004 67.1079 185.492 65.084 cv
185.051 64.9941 184.406 65.104 183.824 65.1309 cv
183.824 65.1309 li
cp
186.398 66.8301 mo
186.641 66.2949 186.902 65.7871 187.164 65.2759 cv
186.77 65.166 186.301 65.1392 185.855 65.084 cv
186.129 65.5688 186.309 66.1538 186.398 66.8301 cv
186.398 66.8301 li
cp
188.609 66.877 mo
188.777 66.8501 188.875 66.7441 189.016 66.6899 cv
188.984 66.5488 189.004 66.3579 188.883 66.311 cv
188.809 66.5181 188.688 66.6782 188.609 66.877 cv
188.609 66.877 li
cp
186.129 68.3418 mo
186.73 68.4468 186.941 68.9712 187.301 69.3301 cv
187.398 68.6621 187.664 68.1699 187.934 67.6782 cv
187.844 67.584 li
187.371 67.9438 186.633 68.022 186.129 68.3418 cv
186.129 68.3418 li
cp
0.8 0.415686 0.152941 0 cmyk
ef
194.914 72.084 mo
194.719 72.2168 li
194.227 71.4868 li
192.703 72.5181 li
193.195 73.248 li
193 73.3809 li
193.59 74.2441 li
195.504 72.9512 li
194.914 72.084 li
0.219608 0.14902 0.247059 0 cmyk
f
194.914 72.084 mo
194.777 71.877 li
194.578 72.0103 li
194.719 72.2168 li
194.926 72.0762 li
194.434 71.3462 li
194.273 71.2402 li
194.086 71.2788 li
192.562 72.311 li
192.449 72.3892 192.418 72.541 192.496 72.6582 cv
192.984 73.3892 li
193.195 73.248 li
193.055 73.041 li
192.859 73.1699 li
192.754 73.3301 li
192.793 73.522 li
193.383 74.3853 li
193.461 74.5024 193.613 74.5288 193.727 74.4517 cv
195.645 73.1582 li
195.75 72.998 li
195.711 72.811 li
195.121 71.9438 li
195.047 71.8301 194.891 71.7988 194.777 71.877 cv
194.914 72.084 li
194.711 72.2251 li
195.156 72.8853 li
193.652 73.9009 li
193.207 73.2397 li
193 73.3809 li
193.141 73.5879 li
193.336 73.4551 li
193.449 73.377 193.477 73.2251 193.402 73.1079 cv
193.051 72.584 li
194.16 71.834 li
194.512 72.3579 li
194.672 72.4629 li
194.859 72.4238 li
195.055 72.291 li
194.914 72.084 li
194.711 72.2251 li
194.914 72.084 li
0.733333 0.705882 0.654902 0.776471 cmyk
f
gsave
193 72.2637 mo
203 72.2637 li
203 85.2642 li
193 85.2642 li
193 72.2637 li
cp
clp
202.676 83.0796 mo
202.98 83.5298 202.871 84.1353 202.438 84.4282 cv
201.645 84.9624 li
201.211 85.2603 200.609 85.1353 200.305 84.686 cv
193.449 74.5376 li
193.148 74.0879 193.566 73.9478 194.004 73.6509 cv
194.797 73.1157 li
195.234 72.8228 195.52 72.4829 195.824 72.936 cv
202.676 83.0796 li
cp
clp
193 72.2637 mo
203 72.2637 li
203 85.2642 li
193 85.2642 li
193 72.2637 li
cp
clp
193 72.2637 mo
203 72.2637 li
203 85.2642 li
193 85.2642 li
193 72.2637 li
cp
clp
202.676 83.0796 mo
202.98 83.5298 202.871 84.1353 202.438 84.4282 cv
201.645 84.9624 li
201.211 85.2603 200.609 85.1353 200.305 84.686 cv
193.449 74.5376 li
193.148 74.0879 193.566 73.9478 194.004 73.6509 cv
194.797 73.1157 li
195.234 72.8228 195.52 72.4829 195.824 72.936 cv
202.676 83.0796 li
clp
193 72.2637 mo
203 72.2637 li
203 85.2642 li
193 85.2642 li
193 72.2637 li
cp
clp
187.242 76.4399 mo
196.195 89.8071 li
208.887 81.3032 li
199.934 67.936 li
187.242 76.4399 li
cp
clp
gsave
193.44 85.2085 mo
193.44 72.728 li
203.04 72.728 li
203.04 85.2085 li
193.44 85.2085 li
cp
clp
192.365 86.5327 mo
192.365 72.1327 li
205.805 72.1327 li
205.805 86.5327 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 144.108 ]ct
[13.44 0 0 -14.4 192.365 71.9752 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 28 
/H 30 
/M[28 0 0 -30 0 30 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcMABn@A_3Xd,IR!:[E!Xdt$$q>g#\".bEnI/3j4_?6]O,W>K!n[\k6ZC[8^q>g)p"h(_3N..;n!:cif
Tp1"INVWYF_?@/r3Zi)4!:m])\[88oV6p(!o!S_0Wg7poWql_qV"CGdUR?mRLRIu=o"kRDQ;eSsQMLUP
\coOEQCP1jq>g)p"g+>HMPRZV!:lodSW*_nI[$H#!:mu1Ve[M9J[>1Qo=>.:Z(@/\\%;D9o<nk/UPsYm
XL@s*o:uSaP^[_6TVVDarPJ<G#-r_>+D[pmq>g0!#J%4=NMa(n](uF![Kj4?P^/Ln[C5o3oV;_eR>,O4
RA6SS!;+,3]p;P2;O.?s_YO9)\d,^HQ(>1i]"7_<oX5"+S:QTp['mF>!;*&lS;hT=PbOtLq>g0)#Gl,Y
3/"ZU_YO90])0&B\Zq]hXLJ2?q>g2s"gXn]J=We@[e^!sU]mHVIWCF@rhTAjotgm<IlJTeW;a[1!;<u.
\[85nVR<u6](uF#[Ka.>P^/Ln[JmW2!;<2mUR?jQL74n:V"t)b_?R]>;AE)s^&GnF!;<u-\#kpdZ+0bD
q>g?"rjE!3S:HNo[/IH0!;<2lS;hT?PbS,Pq>g6+"f5oW3J=d<_YO9,\coXLSWp4br4;_)pU172UPjYo
XSfO,!;likU]mHVIWUUCr1s/hpVI*>IlJWhW;OO/!;O,0\[82mVR<u4](uF%[Ka.<PBiCm[J[K0!;N>i
UBR'@Cl"OTr1s/hpqd6KPYr5pR(`F7q>g<%"h1UuT!>g&](uF%[KWb&JW-G4qmQ>$pnS(`NH9Q5UALbb
!<)un_?HcM,!(Caqni10q76a?Z(7,\\,*]4!;X&,ZD3>/T!/"!q>g>e"eh0.F,ljgV"t)e_?7)n2Bi0=
WVXL.!;a82\[85nVmX)3](uF'[Ka.<PBiIo[JI?.!;`JqUR?gPLRP"7V"t)f_?R]<;&*&t^&#VC!!!#q
\coREPb,+hq7?D&qR-R/S:HQq[/%0,!;`JpS;hQ<Q(n)Mq>gB/"f5iT3ek$;_YO90\d,dNSX$:c]"7aL
q>gE$"gXn]J"Ek=[e^"$U]mHUI!(LApn[`dqn`NBI5W9eWVF@,!;sD4\[82mVR<u0](uC,[f*W=[A]76
Q)_7e[e^"%U^!T^LMVg9U\LY]!;s\<]p)>.<LCJp_YO91\coLCPF\tgpU^2$r3cd2S:HNo[/@B1[e^"%
U]m9JEds@KpS@Wcr5&W6B-B?k[.hH6!<'J4\?VTiXLIo7q>gK&"gXn]JY'(=[e^"'U^!WfPC.G4T(\uV
!<'b<YC/;QDQ3?Hq>gN+#._+;NMa+op:C)#rjE$=W0;LlWjVQ/q>gMj#,@T?Cl+UUq5""cq>gN3#/-6s
'igX7p;6Y+rji9@X-B3\\FmH0!<0D1XdX`uV6op(q>gMj"e:TnI[-Z#V"t)j_?$KG"!9X[[.V<4!!g*H
\?VQiXLIi5q>^c/[^)ZbJ=`t:[e]t/UnjZIHZbC@oVD<`#K"?]I5E0dWV++._YO6;]",2ENMa+ooXal!
#I_%=PBiFn[Igp(!!f<pR>#I6R\TMNq>^c;]p);-=.$\n_YO6:]!\T&T!>fs](uC2[]Q$LN2<oQ[e]t.
Un!BaJ<cl#V"t&q_PLid4bg?8_YO69\?VQhXgdl4!!)lr"gXn[JY0(8[e]t-TTa_EO.l-?q>^]&I5E3h
X7F.(!!T[(NMa(no"+Yt"fRQ/Q)h=l[e7**!!SaECl+XVntc*^"d)Op=.6hn_SuSr!.Y~>

%%EndBinary
grestore
np
grestore
grestore
202.676 83.0796 mo
202.469 83.2212 li
202.559 83.354 202.598 83.4976 202.602 83.6431 cv
202.598 83.8726 202.492 84.0884 202.297 84.2212 cv
201.504 84.7563 li
201.387 84.8384 201.254 84.8726 201.121 84.8726 cv
200.891 84.8726 200.656 84.7603 200.512 84.5454 cv
193.656 74.397 li
193.656 74.4009 li
193.598 74.2642 li
193.598 74.2603 193.598 74.229 193.703 74.147 cv
193.801 74.0718 193.969 73.979 194.145 73.8579 cv
194.938 73.3218 li
195.09 73.2212 195.219 73.1191 195.32 73.0532 cv
195.422 72.9829 195.492 72.9629 195.504 72.9668 cv
195.512 72.9712 195.527 72.9512 195.617 73.0718 cv
202.469 83.2212 li
202.883 82.9399 li
196.031 72.7949 li
195.91 72.604 195.719 72.4629 195.504 72.4668 cv
195.312 72.4712 195.176 72.5532 195.043 72.6353 cv
194.914 72.7212 194.789 72.8218 194.656 72.9082 cv
193.867 73.4438 li
193.711 73.5488 193.547 73.6392 193.398 73.748 cv
193.262 73.854 193.098 74.0181 193.098 74.2642 cv
193.098 74.4126 193.152 74.5454 193.242 74.6782 cv
200.098 84.8257 li
200.336 85.1821 200.727 85.3774 201.121 85.3726 cv
201.352 85.3774 201.582 85.311 201.785 85.1704 cv
202.578 84.6353 li
202.918 84.4038 203.102 84.0259 203.098 83.6431 cv
203.102 83.4009 203.027 83.1538 202.883 82.9399 cv
202.676 83.0796 li
f
gsave
180 56.2637 mo
198 56.2637 li
198 74.2637 li
180 74.2637 li
180 56.2637 li
cp
clp
184.016 57.9277 mo
180.07 60.5918 179.039 65.9478 181.703 69.8848 cv
184.367 73.8301 189.723 74.8618 193.664 72.2017 cv
197.605 69.5337 198.641 64.1821 195.977 60.2407 cv
193.312 56.2949 187.957 55.2637 184.016 57.9277 cv
184.016 57.9277 li
cp
192.957 71.1509 mo
189.59 73.4238 185.023 72.541 182.754 69.1777 cv
180.477 65.8188 181.363 61.248 184.723 58.9751 cv
188.086 56.7017 192.656 57.584 194.93 60.9478 cv
197.199 64.311 196.316 68.877 192.957 71.1509 cv
192.957 71.1509 li
cp
clp
180 56.2637 mo
198 56.2637 li
198 74.2637 li
180 74.2637 li
180 56.2637 li
cp
clp
180 56.2637 mo
198 56.2637 li
198 74.2637 li
180 74.2637 li
180 56.2637 li
cp
clp
184.016 57.9277 mo
180.07 60.5918 179.039 65.9478 181.703 69.8848 cv
184.367 73.8301 189.723 74.8618 193.664 72.2017 cv
197.605 69.5337 198.641 64.1821 195.977 60.2407 cv
193.312 56.2949 187.957 55.2637 184.016 57.9277 cv
192.957 71.1509 mo
189.59 73.4238 185.023 72.541 182.754 69.1777 cv
180.477 65.8188 181.363 61.248 184.723 58.9751 cv
188.086 56.7017 192.656 57.584 194.93 60.9478 cv
197.199 64.311 196.316 68.877 192.957 71.1509 cv
192.957 71.1509 li
cp
clp
180 56.2637 mo
198 56.2637 li
198 74.2637 li
180 74.2637 li
180 56.2637 li
cp
clp
186.938 45.647 mo
169.422 66.9629 li
190.738 84.479 li
208.254 63.1616 li
186.938 45.647 li
cp
clp
gsave
180.24 73.688 mo
180.24 56.4082 li
197.52 56.4082 li
197.52 73.688 li
180.24 73.688 li
cp
clp
178.857 74.9751 mo
178.857 55.7751 li
199.977 55.7751 li
199.977 74.9751 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 144.108 ]ct
[21.12 0 0 -19.2 178.857 88.3328 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 44 
/H 40 
/M[44 0 0 -40 0 40 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&SH'Q8#6Y&-!<E6+$4@F[)]p=R/i5UT7ncib?YB+Kq>_E>#6Y).!WiH.#7(VE%hTNn)BC%L.5!A4
3^3:(q>_ED$3pY5!<E<0$k=!h*[2s`1HI`j9N#&&Ao79^j8eKG)\38\"9AK'!<`T5$kX6o+=&Ej1cmuo
:/kG*B_ZB>!#l4M#6Y).!WiK/#RLeH%hfZq*$-=O.PEP74$`R,q>_'=%1*4>!!*0+#n.@[)'1"O$8"(q
5Y"UK>@D/^pi4RZ*"r_f"p=o+!<E?/#nI[b*$?UY0f;'Z8P`>j@VPXRq>^m3#m^b=!!!'%":#2C#7:nO
&f)<)+!`3a0JbUJpd+`V*#&qm#R18/!<WQ6$ka9m*[N9i2*+#o:fU_/BlNlfc2\%a&I]!N!WWu9!<E?/
$4dge*?lj^0fM6_92S_qASM!Vq>_KE$OI%C!rr<&!X/f7#7CtQ',;B)+<r<d0/Y[Oq*FiW*>oP&$O?k8
!!*0,$4[[a)BU:W1,qHa8PrPpASH,[EVKOc!$*!o&.8gK!WW6%!X8r<&/5s%+t"os3Bfl*;-.(8qJ5p-
$P*[Q#R:M8!!33(#Q=u=$P*d`()\,8,Ub5u2E3kr62^f_!$**u'+PBT"98H'":,;D&f)H1-S7)65"/+A
=C,TTqJjd\*Zl=8&./^H!<<-$!X8u>&/6!(+t,#u3^?2/;HdF>r+c:Jq>_QK%h&aM"p=u-!WiH/#7(SD
%M9Ek)BBtI.4m823Bd7*q>_Q\*#91t$3pY5!<E</$P!jd*?lj`1-.Wh9Mnr"B5RNcgApjG+!M^B'+YET
"9AK'!<`T6$kX0m+!`6e1cmun:/bA(BDcQA!$;pe%h/gN#6Y).!WiH.#71\H%h]To)BC"K.4m;53^3I-
q>_B\+WM71%LE@@!!**)#n.@[(EOeM/MfFQ7g2Ud>$trZr,L!^+=89Q(D@5b#6Y&-!<E?.#n.I_*$?RX
0JtpX85E2h@VG^Uq>_3G&eGK\#RCY<!WW9'"9o,<$4RO[$PXHt+!W-_/i#=G5lF"F!$Eg?+W;+/%1*4>
!!*0,#n.@[)'1"P0/YaT85E2h@VK`YER"Op.jcAY(D.&_"p=o+!<E?/&IAs](E=VH.krqF5tOjP>\%RJ
C\e#R)&<hr%13CI#6Y#,!WiN1#R:\G&/,ft*$-=P.kib<48hJA!$O$G,p!s>&.AgK!!!$%#7:kP'cJ,>
.PNbC6:apQ>@VDerc.B,huG#T.O6)U((go]"TeZ(!<E?1$4mmf*?lj^1-%Kd92JYpASQ!rq>_$E(DRPo
%1<FH"Tn`)!WiQ)#S@FR&/,fs*?ZRT/29"B4[;;!q>^[T/h&%e)'0J%$O6e7!!*0,#n@R`*$HX[1,qHc
92S_qASQ1(ER"P01+jt#*ubt,$OHt;!!**%"pkYK'H%o8-S7)75"84D='fKSC\e#2*=j&('bLrc#m^_=
!WW9'!sef2&.B$['c.c/+XAHf0fD!T5sb>I,WRY5-R9`L'+P?S!rr?&":,>E&f)K2-S.#55=J4B=^G]U
EH0D,r;\*$1+Xds*uPb'$4-h9!!**%"pt_M'H8,=-n[>;5Y"LH>$klWq>_c`*?,e0&Io3U#R1D5!!33(
#6tM@$kEpa(`FD<,q1H%1cdccq>_^%3&)s3+rqF3%LNFC!!**'#Rh1V(*4YJ/MfFP7SH]`@:fOXER"P0
4>eiD-6jNJ'FtNU"9AK'!<`T6$kX6o+!`6g1cmuo:/kG*B_h]L,9ImD(D@>j$OI(D"9JQ)!X&]4#mh%O
&eu6'*[:k9.P3D53C*E@,XOOM0J"Oo*#9.r#mUJ2!<WN4$kO-i*[<*d1cdll9iP>*B5Yup(dU5@0J"Op
*>]@u$3gV6!!**(#71hQ(*!])-7U`-4@)P7<*Ni.!$im8*?,h2&ePQ]#RCY<!WW9'":#2<$4RO[()\,7
,:=om1,_2i!$k$!4#J`B,p+$@&e,*N!<<-&#7:kP'cA&;.PEY?6:apP>@M=/!9jJ/76imj0IeCl*#B1q
$3gP3!!**(#7:tU(E=VH.krqF6VC9W>l"FG-mg/Z*#BA&&.K!R#6t>2!!33*#7(PB%1j0f)B9kE-S-o.
2u3La91;'+1b^C)*Z>_($jZtN!!!$%#7:qR()e;B/2/tE6:t*V?";.[,Y:Eg3AN3:,Tds@&.8gK!WW6%
!X/l;&/5s%+t"os3Bfl);-3So#qIDL+rqR<'bV#a%1*:F"Tn`+!WrW*#Rh(O&/,fs*?ZUU/2/pW!$k?5
6pE^g/ghnc)&*Pg#6Y#-!<`W6%MBNs+XScr3Bfi(;-72N!!H%f6Tm@M1+an"*ubn*$4-k:!!**%"pkYK
'H%u:-nR595XnFFq>_6^.OQG`*?#\.&J#9V#R1G6!!33(#Q=u:$k<ja()e/9,:G,uq>_d?:J*r;3AN37
+rhF5%LNFC!!**'#RV%U(*+SH/i#FO7nZ]^q>f%G,Z7<+5s.%[/12V`(_[De#6Y&-!<E6+$4@F[)]p=R
/i5UT7niaZ-8@,%-R0ZP)\s/#%h/gN#6Y).!WiH.#7(VE%h]To)BC%L.4tT#quA!F;GB\K4?,&I-R'NG
&e53Q!rr?&":5JH'c7u8-S7,85=\FGc2]"f;+sGF4>eiE-6aHH'+YET"9AK'!<iZ6$kjBq+=8Ql2$,j*
8GW<31GCC/-6jNO(`*hs%1EOK#6Y).!WiK/#RLhI%hfWp*$$7O.f',j?!'ru7mK-n0e=Xp)AWno#mLD1
!<WQ5$kO-k*[<-f1cdlm:Yc$A!$k`I;+jAD4#J]B-6aEG'+>3P"98E&!<i]7%hfa!+=A]p2*=2$!$jKY
0J"Uu+rqX@((q/f$jd1E"98E'!X&`6#7:nO&f)<(+!`61!#K$J<DcCY5WU_U.O?2U'G(ZY"onW(!s]5A
$ka9n*[N9j2EF,pc2]+r>#S3i76imj0IeCk*#9+o$3gP3!!**(#mq1W(EF\I/29.Jq>_-f2DHg9-mg)X
)Aa/%&.K!Q#6thC!!!'%"UGA=$Om[]()\)7,PhBcAmekC:J4,@3\rB;,T[g;%LWOF!!!$%#71kQ()e8A
/2B1K6I#Q?A6rA::J!o:3AW99,Tdd@((^i["TeZ)!<NH3$4mmh*?lj_1-,74)ZTk"3&NHD.k)\e*#]S-
&e>EX#R1G7!!33(#Q=u6$P!^_()e29q>_dUARAV?:J!l93AW98,9@X7%LNFD!!**'#RLtR(*+PG/M]=M
eH#FG,\U[m=Ahmb5s7+]/1;\a)&*Vh#m:8/!<E6+$4@F[)':(O/Md/&,X+=L2)-[4-R0`S)AX&"%L`XL
"p=u-!WiH/#7(VE%M9Bj)BJYS+)bk'?Wg?&84#Eu1+jpu*>T:u$3pY5!<E</$P!gc*<[Q7/i#K5!$l;l
?sH`09LhB22DHa0+rqL7%giOE!<<-$"9o2A&Jc<-,UbAC!#e0d4#\rN/L`"k*ZQ%6'bCl`#m^b=!WW9'
!so/:#mh%O&eu6'q>_d\DJ<Te=A_d_69@(\/12S\((q)`#6=f*!sT&?&/?!&,:P6%c2\SpC1^gW<DZ@Y
5s$qX/1)P](D@5b#7^k;!!**(#71eP(*"GD.f',j5sd^p2DHp<-mg)X)]0A(&.K$R#R:J6!!33)#7(VC
%1j0g)>X=YEH,i.@U)r291M902)-X.+W;+/%1*4>!!*0,$4II\)'1"P0BiK!!$l>qC1UaV<)6.V5W^eV
.OH8X(D.&_"p+c)!<E?/$4ddd*$Qd,!$jir5Wq+b1,(7--6aHM(D[Vp%13CH#6Or+!WiN1#R:\G&/,iU
!<-sDCM.'\<DcCX5SuR>0Ie@i)ANel#Qt,-!<WQ6%MBKp+=/M_!<-aLBk:US;botR4ukAN.O6)U((go]
"Te]'!=&c7$4mmf*?t=[r]pWN4ZG>40eOt),U+6I(DRPn%1<FH"Tnc(!WWE'#QkGD&/4m?rc'*#C1^jY
<)?4U5<:SQ.3orP'FkKU"98H'!s],B&f)H1-I)VkCEdP/BOkCN;bfnO4ZP8L-mTlR'G(WY"T\T(!<NH3
$P4!i+8Q!:5oW-S4#o/R/Lr1n+<;C:'bLrb#m^_=!WW9'!sef2!XoPNq>gJ6+E)"+?WpE)8jY^%0eOh!
*Z,P#$3pY5!<E</$4[[a*?k@]dK'5]+DPS!>ZO`r7mT6q0e=[r*uG\&$4-h9!!**%"pt_M'H?lKrBVMl
4utV[0eOn&,9RsF(DRMm$jd1D"9JQ)!WrW3#RLn>&,H;(E?B+5@pW;99h7T53&)s3+rh@2%LNFC!!**'
#n.:Y(`ps&r+d0bAmehD;+sJG4>eiD-6jNJ'FtNU"9AK'!<iT1#n.C]q>gFZ+$r+N2D[$=.4-8]*#]V,
&.]-T#R:J6!!33)"pbMA%Jg)%E?8t0@U</69Lh?/2D?[/+WM71%1*7?!!*0+#n.@[);kM`!;gOQC1^gV
<)?4W5s$qX/1)P](D@2a"p=o+!<E?/#nI^G!;f&'69R=f1,1=.-6aHM(`!_r%1EOK#6Y#,!WiK0#R:_5
!;^[ED.d6]<`)LZ5WU_V.O>TI)AE_l#R18/!<WQ6$ka<#!;^IOBk:US<)6.U5WU_U.OH8X((gr^"p+c)
!<E?/$4lt5q*>6K2`<EF/1;hZ,97a?((h)e$OI%C!rr<&!X/f7#PnGsE?0"6B4+qD;+j>B3]&H<,T[g;
&.8aH!!!$%#7:qRc2dZU!bl1O)-Bg58OYg'1G1.&*ubt,$OR%=!!**%"UPP4!;So#5<Ch`1+k(*,U+3H
(DRPn%1*:F"Tn`+!WrT3#l4PsE?&q5AmeeA:J!r=3AW98,9@^9%LWLE!!**'#71n4!8@MLCE.)&@pN27
:.RZ62DQj4,9Ij=&./^H!<<-$!X9#.!;So#69[Lj2)-[4-R0`S)AX#!%h&aM"p=u-!WiH/#PnE#EVXSn
DeWci=]A0f69I7`/gqn`()%/b#6Or,!<`Z9c2dWT)es"n>ZO`s7mT6q0e=[r*uGY%$3p\7!!**'#6"W$
!;Ji!69[Ii2)-X2-R0ZP)\s/#%h/gN#6Y).!WiH.q>g80)Js1u?<L3$84#Es0eFas*#9.s#mUJ2!<EB2
f)YRGpM1[^Am\bB:eX>E4#J`D-6aHH'+YET"9AK'!<r<"pH]]a4ZPDV0eFe#+WVR?(D@>h$jd1E"9JQ)
!X/?"p2L^^B4>.I;,'PH4#J`D-6X9C&IepN"p"])!sd*Op1kO\ARAY@;+jAD4#AWA-6O9E&I]!N"98E&
!Vufi5n-.D3AiQG/1;eg*?5q4$PF![$4-tC"98E'!r;oiE>WJ(@9cf091D0.1b^C**Z>b)$j[%;!!*25
!.k45!.Y~>

%%EndBinary
grestore
np
grestore
grestore
184.016 57.9282 mo
183.875 57.7212 li
181.34 59.4321 179.973 62.229 179.973 65.0688 cv
179.973 66.7788 180.469 68.5059 181.496 70.0259 cv
183.207 72.561 186.004 73.9282 188.848 73.9282 cv
190.555 73.9282 192.281 73.436 193.805 72.4082 cv
196.34 70.6938 197.703 67.897 197.703 65.0532 cv
197.703 63.3462 197.211 61.6191 196.184 60.1001 cv
194.473 57.5649 191.676 56.1968 188.832 56.1968 cv
187.125 56.1968 185.395 56.6899 183.875 57.7212 cv
184.016 57.9282 li
184.152 58.1353 li
185.59 57.1621 187.219 56.6968 188.832 56.6968 cv
191.52 56.6968 194.152 57.9868 195.77 60.377 cv
196.738 61.8149 197.203 63.4438 197.203 65.0532 cv
197.203 67.7402 195.914 70.373 193.523 71.9941 cv
192.086 72.9629 190.461 73.4282 188.848 73.4282 cv
186.16 73.4282 183.527 72.1392 181.91 69.7441 cv
180.938 68.311 180.473 66.6821 180.473 65.0688 cv
180.473 62.3853 181.762 59.748 184.152 58.1353 cv
184.016 57.9282 li
192.957 71.1509 mo
192.816 70.9438 li
191.598 71.7681 190.215 72.1621 188.848 72.1621 cv
186.566 72.1621 184.332 71.0688 182.961 69.0371 cv
182.133 67.8188 181.738 66.4399 181.738 65.0688 cv
181.738 62.791 182.836 60.5532 184.863 59.1821 cv
186.082 58.3579 187.465 57.9629 188.836 57.9629 cv
191.113 57.9629 193.348 59.0571 194.723 61.0879 cv
195.547 62.3071 195.938 63.6899 195.938 65.0571 cv
195.938 67.3379 194.848 69.5718 192.816 70.9438 cv
193.098 71.3579 li
195.27 69.8931 196.438 67.4941 196.438 65.0571 cv
196.438 63.5962 196.016 62.1118 195.137 60.8071 cv
193.668 58.6353 191.273 57.4629 188.836 57.4629 cv
187.367 57.4629 185.887 57.8892 184.586 58.7681 cv
182.41 60.2368 181.238 62.6309 181.238 65.0688 cv
181.238 66.5332 181.664 68.0142 182.547 69.3188 cv
184.016 71.4902 186.41 72.6621 188.848 72.6621 cv
190.312 72.6621 191.793 72.2402 193.098 71.3579 cv
192.957 71.1509 li
cp
f
77.438 65.0762 mo
95.5308 65.0762 li
95.5308 97.0405 li
96.0308 97.0405 li
96.0308 64.5762 li
77.438 64.5762 li
77.438 65.0762 li
f
75.4258 64.2251 mo
76.3789 63.9399 76.9961 63.6782 77.7622 63.373 cv
77.75 66.2759 li
77.48 66.147 76.3711 65.7012 75.4258 65.4082 cv
74.4058 65.0962 73.4839 64.8853 72.8872 64.8071 cv
73.4878 64.7368 74.4102 64.5259 75.4258 64.2251 cv
f
60.375 80.6079 mo
60.375 120.608 li
90.082 120.608 li
90.082 120.108 li
60.875 120.108 li
60.875 80.6079 li
60.375 80.6079 li
f
61.2271 78.5962 mo
61.5078 79.5493 61.7729 80.1655 62.0742 80.9321 cv
59.1719 80.9204 li
59.3052 80.6509 59.75 79.5405 60.0391 78.5962 cv
60.3521 77.5757 60.562 76.6538 60.6411 76.0571 cv
60.7148 76.6577 60.9219 77.5796 61.2271 78.5962 cv
f
28.1172 79.1821 mo
29.2661 81.2437 30.3091 84.2251 30.3091 86.8032 cv
30.3091 88.2954 29.9609 89.647 29.1021 90.6147 cv
28.2461 91.5884 26.8711 92.2046 24.75 92.2046 cv
24.75 92.5063 li
26.9258 92.5103 28.4058 91.8647 29.3281 90.8149 cv
30.25 89.7681 30.6089 88.3384 30.6089 86.8032 cv
30.605 84.147 29.5469 81.1392 28.3828 79.0327 cv
28.1172 79.1821 li
f
26.8911 80.4868 mo
26.9531 76.7476 li
30.1602 78.6743 li
26.8911 80.4868 li
cp
f
132.777 33.5259 mo
191.363 33.5259 li
191.363 46.8579 li
132.777 46.8579 li
132.777 33.5259 li
cp
0 0 0 0 cmyk
ef
136.84 40.6938 mo
136.59 40.3652 136.449 39.897 136.449 39.3188 cv
136.449 38.7251 136.59 38.2559 136.84 37.9121 cv
137.074 37.584 137.418 37.4282 137.871 37.4282 cv
138.293 37.4282 138.637 37.584 138.902 37.9282 cv
139.152 38.2559 139.277 38.7251 139.277 39.3188 cv
139.277 39.897 139.152 40.3652 138.902 40.6938 cv
138.637 41.0371 138.293 41.1938 137.871 41.1938 cv
137.418 41.1938 137.09 41.0371 136.84 40.6938 cv
136.84 40.6938 li
cp
139.387 37.5532 mo
138.98 37.1001 138.48 36.8647 137.871 36.8647 cv
137.246 36.8647 136.73 37.1001 136.34 37.5532 cv
135.949 38.0059 135.746 38.584 135.746 39.3188 cv
135.746 40.022 135.949 40.6001 136.34 41.0688 cv
136.746 41.522 137.246 41.7559 137.871 41.7559 cv
138.48 41.7559 138.98 41.522 139.387 41.0688 cv
139.777 40.6001 139.98 40.022 139.98 39.3188 cv
139.98 38.6001 139.777 38.022 139.387 37.5532 cv
139.387 37.5532 li
cp
0.733333 0.705882 0.654902 0.776471 cmyk
f
142.016 41.084 mo
142.016 39.8809 li
142.688 39.8809 li
143.328 39.8809 143.812 39.772 144.141 39.522 cv
144.469 39.272 144.625 38.9282 144.625 38.4438 cv
144.625 37.9751 144.453 37.6001 144.125 37.3652 cv
143.797 37.1152 143.328 37.0059 142.688 37.0059 cv
140.875 37.0059 li
140.797 37.0059 140.734 37.022 140.688 37.0688 cv
140.641 37.1152 140.609 37.1938 140.609 37.272 cv
140.609 37.3809 140.641 37.459 140.688 37.4902 cv
140.75 37.5371 140.891 37.5532 141.125 37.5532 cv
141.391 37.5532 li
141.391 41.084 li
140.891 41.084 li
140.797 41.084 140.719 41.1001 140.688 41.147 cv
140.641 41.1938 140.609 41.2559 140.609 41.3501 cv
140.609 41.4438 140.641 41.5059 140.688 41.5532 cv
140.734 41.6001 140.797 41.6309 140.875 41.6309 cv
142.797 41.6309 li
142.953 41.6309 143.047 41.6001 143.109 41.5688 cv
143.156 41.522 143.188 41.459 143.188 41.3501 cv
143.188 41.2559 143.156 41.1782 143.094 41.147 cv
143.047 41.1001 142.953 41.084 142.828 41.084 cv
142.016 41.084 li
cp
142.734 37.5532 mo
143.141 37.5532 143.453 37.6309 143.656 37.7871 cv
143.859 37.9282 143.969 38.1621 143.969 38.459 cv
143.969 38.772 143.859 39.0059 143.656 39.147 cv
143.453 39.3032 143.141 39.3809 142.734 39.3809 cv
142.016 39.3809 li
142.016 37.5532 li
142.734 37.5532 li
cp
f
144.988 43.0532 mo
149.941 43.0532 li
149.941 43.522 li
144.988 43.522 li
144.988 43.0532 li
cp
f
152.945 36.9438 mo
152.758 36.897 152.586 36.8809 152.414 36.8809 cv
151.773 36.8809 151.242 37.1152 150.805 37.5688 cv
150.383 38.0371 150.164 38.6152 150.164 39.3188 cv
150.164 40.022 150.383 40.6001 150.805 41.0688 cv
151.227 41.522 151.758 41.7397 152.398 41.7397 cv
152.648 41.7397 152.883 41.709 153.086 41.647 cv
153.32 41.5688 153.539 41.459 153.758 41.3188 cv
153.93 41.209 154.039 41.1309 154.102 41.0532 cv
154.148 40.9897 154.18 40.9121 154.18 40.834 cv
154.18 40.7559 154.164 40.6938 154.102 40.6309 cv
154.055 40.584 153.977 40.5532 153.898 40.5532 cv
153.836 40.5532 153.758 40.6001 153.633 40.6938 cv
153.508 40.772 153.414 40.834 153.352 40.8652 cv
153.195 40.959 153.039 41.022 152.883 41.0688 cv
152.727 41.1001 152.586 41.1309 152.43 41.1309 cv
151.961 41.1309 151.586 40.959 151.305 40.6147 cv
151.023 40.2871 150.883 39.834 150.883 39.2559 cv
150.883 38.709 151.023 38.2402 151.305 37.9121 cv
151.586 37.5688 151.945 37.4121 152.414 37.4121 cv
152.664 37.4121 152.883 37.4751 153.07 37.584 cv
153.258 37.7251 153.383 37.8809 153.43 38.0688 cv
153.43 38.1152 153.445 38.1621 153.461 38.2402 cv
153.523 38.4902 153.633 38.6001 153.805 38.6001 cv
153.914 38.6001 153.992 38.584 154.023 38.5371 cv
154.07 38.5059 154.086 38.4121 154.086 38.2871 cv
154.086 38.334 154.086 38.2251 154.086 38.0059 cv
154.07 37.7871 154.07 37.5532 154.07 37.2871 cv
154.07 37.147 154.055 37.0532 154.023 37.0059 cv
153.977 36.959 153.914 36.9282 153.805 36.9282 cv
153.727 36.9282 153.664 36.9438 153.617 36.9751 cv
153.57 37.0059 153.523 37.0532 153.492 37.1309 cv
153.305 37.0532 153.117 36.9902 152.945 36.9438 cv
152.945 36.9438 li
cp
f
156.133 39.459 mo
158.008 39.459 li
158.008 41.084 li
157.805 41.084 li
157.617 41.084 157.492 41.1001 157.43 41.1309 cv
157.352 41.1782 157.32 41.2402 157.32 41.3501 cv
157.32 41.459 157.352 41.522 157.414 41.5688 cv
157.461 41.6001 157.602 41.6309 157.805 41.6309 cv
158.617 41.6309 li
158.82 41.6309 158.945 41.6001 159.008 41.5688 cv
159.055 41.522 159.086 41.459 159.086 41.3501 cv
159.086 41.2402 159.055 41.1782 158.992 41.147 cv
158.93 41.1001 158.836 41.084 158.68 41.084 cv
158.602 41.084 li
158.602 37.5532 li
158.711 37.5532 li
158.836 37.5532 158.945 37.5371 159.008 37.4902 cv
159.055 37.459 159.086 37.3809 159.086 37.272 cv
159.086 37.1782 159.055 37.1152 159.008 37.0688 cv
158.961 37.022 158.883 37.0059 158.789 37.0059 cv
157.836 37.0059 li
157.602 37.0059 157.461 37.022 157.414 37.0688 cv
157.352 37.1001 157.32 37.1782 157.32 37.272 cv
157.32 37.3809 157.352 37.4438 157.414 37.4902 cv
157.477 37.5371 157.586 37.5532 157.742 37.5532 cv
158.008 37.5532 li
158.008 38.9121 li
156.133 38.9121 li
156.133 37.5532 li
156.305 37.5532 li
156.492 37.5532 156.633 37.5371 156.711 37.4902 cv
156.773 37.459 156.805 37.3809 156.805 37.272 cv
156.805 37.1782 156.789 37.1001 156.727 37.0688 cv
156.68 37.022 156.539 37.0059 156.32 37.0059 cv
155.352 37.0059 li
155.242 37.0059 155.164 37.022 155.117 37.0688 cv
155.07 37.1152 155.055 37.1782 155.055 37.272 cv
155.055 37.3809 155.086 37.459 155.133 37.4902 cv
155.195 37.5371 155.305 37.5532 155.461 37.5532 cv
155.523 37.5532 li
155.523 41.084 li
155.445 41.084 li
155.289 41.084 155.18 41.1001 155.133 41.1309 cv
155.07 41.1782 155.055 41.2402 155.055 41.3501 cv
155.055 41.4438 155.07 41.5059 155.117 41.5532 cv
155.164 41.6001 155.242 41.6309 155.336 41.6309 cv
156.367 41.6309 li
156.555 41.6309 156.68 41.6001 156.727 41.5688 cv
156.789 41.522 156.805 41.459 156.805 41.3501 cv
156.805 41.2559 156.773 41.1782 156.711 41.147 cv
156.648 41.1001 156.539 41.084 156.398 41.084 cv
156.133 41.084 li
156.133 39.459 li
cp
f
163.418 41.6309 mo
163.512 41.6309 163.574 41.6001 163.621 41.5532 cv
163.668 41.5059 163.684 41.4438 163.684 41.3501 cv
163.684 40.3652 li
163.684 40.209 163.668 40.1152 163.621 40.0532 cv
163.59 40.0059 163.527 39.9751 163.418 39.9751 cv
163.309 39.9751 163.246 40.0059 163.199 40.0688 cv
163.168 40.1152 163.137 40.2397 163.137 40.4438 cv
163.137 41.084 li
161.059 41.084 li
161.059 39.3501 li
162.074 39.3501 li
162.074 39.4897 li
162.074 39.6621 162.09 39.7871 162.137 39.8501 cv
162.168 39.9121 162.23 39.9438 162.324 39.9438 cv
162.418 39.9438 162.496 39.9121 162.527 39.8647 cv
162.559 39.8032 162.574 39.6782 162.574 39.4897 cv
162.574 38.7559 li
162.574 38.5688 162.559 38.4438 162.527 38.3809 cv
162.496 38.334 162.418 38.2871 162.34 38.2871 cv
162.246 38.2871 162.184 38.3188 162.137 38.3809 cv
162.09 38.4282 162.074 38.522 162.074 38.6782 cv
162.074 38.8809 li
161.059 38.8809 li
161.059 37.5532 li
163.137 37.5532 li
163.137 38.1152 li
163.137 38.3188 163.168 38.4438 163.199 38.5059 cv
163.246 38.5532 163.309 38.584 163.418 38.584 cv
163.527 38.584 163.59 38.5688 163.637 38.5059 cv
163.668 38.459 163.684 38.3647 163.684 38.2251 cv
163.684 37.3188 li
163.684 37.209 163.668 37.1309 163.621 37.084 cv
163.574 37.022 163.512 37.0059 163.418 37.0059 cv
160.012 37.0059 li
159.918 37.0059 159.84 37.022 159.793 37.0688 cv
159.746 37.1152 159.715 37.1782 159.715 37.272 cv
159.715 37.3809 159.746 37.459 159.809 37.4902 cv
159.871 37.5371 159.996 37.5532 160.199 37.5532 cv
160.434 37.5532 li
160.434 41.084 li
160.199 41.084 li
159.996 41.084 159.871 41.1001 159.809 41.1309 cv
159.746 41.1782 159.715 41.2402 159.715 41.3501 cv
159.715 41.4438 159.746 41.5059 159.793 41.5532 cv
159.84 41.6001 159.918 41.6309 160.012 41.6309 cv
163.418 41.6309 li
cp
f
167.344 36.9438 mo
167.156 36.897 166.984 36.8809 166.812 36.8809 cv
166.172 36.8809 165.641 37.1152 165.203 37.5688 cv
164.781 38.0371 164.562 38.6152 164.562 39.3188 cv
164.562 40.022 164.781 40.6001 165.203 41.0688 cv
165.625 41.522 166.156 41.7397 166.797 41.7397 cv
167.047 41.7397 167.281 41.709 167.484 41.647 cv
167.719 41.5688 167.938 41.459 168.156 41.3188 cv
168.328 41.209 168.438 41.1309 168.5 41.0532 cv
168.547 40.9897 168.578 40.9121 168.578 40.834 cv
168.578 40.7559 168.562 40.6938 168.5 40.6309 cv
168.453 40.584 168.375 40.5532 168.297 40.5532 cv
168.234 40.5532 168.156 40.6001 168.031 40.6938 cv
167.906 40.772 167.812 40.834 167.75 40.8652 cv
167.594 40.959 167.438 41.022 167.281 41.0688 cv
167.125 41.1001 166.984 41.1309 166.828 41.1309 cv
166.359 41.1309 165.984 40.959 165.703 40.6147 cv
165.422 40.2871 165.281 39.834 165.281 39.2559 cv
165.281 38.709 165.422 38.2402 165.703 37.9121 cv
165.984 37.5688 166.344 37.4121 166.812 37.4121 cv
167.062 37.4121 167.281 37.4751 167.469 37.584 cv
167.656 37.7251 167.781 37.8809 167.828 38.0688 cv
167.828 38.1152 167.844 38.1621 167.859 38.2402 cv
167.922 38.4902 168.031 38.6001 168.203 38.6001 cv
168.312 38.6001 168.391 38.584 168.422 38.5371 cv
168.469 38.5059 168.484 38.4121 168.484 38.2871 cv
168.484 38.334 168.484 38.2251 168.484 38.0059 cv
168.469 37.7871 168.469 37.5532 168.469 37.2871 cv
168.469 37.147 168.453 37.0532 168.422 37.0059 cv
168.375 36.959 168.312 36.9282 168.203 36.9282 cv
168.125 36.9282 168.062 36.9438 168.016 36.9751 cv
167.969 37.0059 167.922 37.0532 167.891 37.1309 cv
167.703 37.0532 167.516 36.9902 167.344 36.9438 cv
167.344 36.9438 li
cp
f
170.66 39.8501 mo
171.098 39.4438 li
171.285 39.4751 171.457 39.5532 171.613 39.709 cv
171.785 39.8647 171.941 40.1001 172.113 40.397 cv
172.27 40.6938 li
172.535 41.1782 172.676 41.4438 172.691 41.4751 cv
172.738 41.5371 172.785 41.584 172.816 41.6001 cv
172.848 41.6152 172.91 41.6309 172.988 41.6309 cv
173.363 41.6309 li
173.457 41.6309 173.52 41.6001 173.566 41.5532 cv
173.613 41.5059 173.645 41.4438 173.645 41.3501 cv
173.645 41.2402 173.613 41.1782 173.551 41.1309 cv
173.504 41.1001 173.395 41.084 173.238 41.084 cv
173.16 41.084 li
172.707 40.2397 172.379 39.709 172.176 39.459 cv
171.973 39.209 171.754 39.0688 171.52 39.022 cv
173.035 37.5532 li
173.098 37.5532 li
173.238 37.5532 173.348 37.5371 173.426 37.4902 cv
173.473 37.459 173.504 37.3809 173.504 37.272 cv
173.504 37.1938 173.488 37.1152 173.441 37.0688 cv
173.379 37.022 173.316 37.0059 173.238 37.0059 cv
172.082 37.0059 li
171.988 37.0059 171.91 37.022 171.863 37.0688 cv
171.832 37.1001 171.801 37.1782 171.801 37.272 cv
171.801 37.3809 171.832 37.4438 171.895 37.4902 cv
171.941 37.5371 172.035 37.5532 172.16 37.5532 cv
172.301 37.5532 li
170.66 39.147 li
170.66 37.5532 li
170.848 37.5532 li
171.035 37.5532 171.176 37.5371 171.238 37.4902 cv
171.316 37.459 171.348 37.3809 171.348 37.272 cv
171.348 37.1782 171.316 37.1001 171.27 37.0688 cv
171.207 37.022 171.113 37.0059 170.957 37.0059 cv
169.613 37.0059 li
169.535 37.0059 169.457 37.022 169.426 37.0688 cv
169.363 37.1152 169.348 37.1938 169.348 37.272 cv
169.348 37.3809 169.363 37.459 169.426 37.4902 cv
169.488 37.5371 169.613 37.5532 169.816 37.5532 cv
170.051 37.5532 li
170.051 41.084 li
169.676 41.084 li
169.566 41.084 169.473 41.1001 169.426 41.147 cv
169.363 41.1782 169.348 41.2559 169.348 41.3501 cv
169.348 41.4438 169.363 41.5059 169.426 41.5532 cv
169.457 41.6001 169.535 41.6309 169.613 41.6309 cv
170.957 41.6309 li
171.113 41.6309 171.207 41.6001 171.27 41.5688 cv
171.316 41.522 171.348 41.459 171.348 41.3501 cv
171.348 41.2559 171.316 41.1782 171.254 41.147 cv
171.191 41.1001 171.082 41.084 170.926 41.084 cv
170.66 41.084 li
170.66 39.8501 li
cp
f
175.711 41.709 mo
175.898 41.7397 176.086 41.772 176.273 41.772 cv
176.82 41.772 177.258 41.6309 177.586 41.3647 cv
177.914 41.1001 178.07 40.7559 178.07 40.3188 cv
178.07 39.9438 177.961 39.6621 177.727 39.4438 cv
177.492 39.209 177.148 39.084 176.695 39.022 cv
176.07 38.9438 li
175.773 38.897 175.555 38.8188 175.398 38.709 cv
175.258 38.584 175.18 38.4438 175.18 38.2402 cv
175.18 37.9897 175.273 37.7871 175.477 37.6147 cv
175.664 37.4751 175.93 37.397 176.242 37.397 cv
176.445 37.397 176.633 37.4282 176.789 37.4902 cv
176.961 37.5688 177.07 37.6782 177.164 37.8032 cv
177.211 37.8501 177.242 37.9282 177.273 38.0532 cv
177.352 38.2402 177.461 38.334 177.602 38.334 cv
177.695 38.334 177.758 38.3188 177.805 38.2559 cv
177.867 38.209 177.898 38.1309 177.898 38.0532 cv
177.898 38.0059 li
177.836 37.1938 li
177.82 37.0688 177.789 36.9902 177.758 36.9438 cv
177.711 36.9121 177.633 36.897 177.508 36.897 cv
177.43 36.897 177.367 36.9121 177.336 36.9282 cv
177.289 36.9751 177.273 37.022 177.273 37.1001 cv
177.07 37.022 176.883 36.959 176.727 36.9121 cv
176.57 36.8809 176.414 36.8647 176.273 36.8647 cv
175.773 36.8647 175.367 37.0059 175.039 37.272 cv
174.711 37.5371 174.555 37.8652 174.555 38.272 cv
174.555 38.647 174.664 38.9438 174.914 39.147 cv
175.164 39.3652 175.57 39.5059 176.102 39.5688 cv
176.68 39.6621 li
176.93 39.6938 177.117 39.772 177.242 39.897 cv
177.367 40.022 177.43 40.1782 177.43 40.397 cv
177.43 40.647 177.336 40.834 177.117 41.0059 cv
176.914 41.1621 176.633 41.2402 176.305 41.2402 cv
176.023 41.2402 175.789 41.1938 175.602 41.084 cv
175.398 40.9897 175.258 40.8501 175.164 40.6782 cv
175.133 40.6147 175.102 40.522 175.07 40.4121 cv
175.008 40.1938 174.898 40.084 174.742 40.084 cv
174.633 40.084 174.555 40.1001 174.492 40.1621 cv
174.445 40.209 174.43 40.2871 174.43 40.4282 cv
174.43 40.4902 li
174.477 41.397 li
174.477 41.5371 174.508 41.647 174.57 41.709 cv
174.617 41.772 174.695 41.8032 174.805 41.8032 cv
174.914 41.8032 174.992 41.7871 175.039 41.7397 cv
175.086 41.6938 175.102 41.6001 175.117 41.4902 cv
175.336 41.584 175.523 41.6621 175.711 41.709 cv
175.711 41.709 li
cp
f
181.367 41.084 mo
181.367 37.5532 li
182.242 37.5532 li
182.445 37.5532 182.57 37.5371 182.633 37.4902 cv
182.695 37.459 182.727 37.3809 182.727 37.272 cv
182.727 37.1782 182.695 37.1152 182.648 37.0688 cv
182.602 37.022 182.523 37.0059 182.43 37.0059 cv
179.711 37.0059 li
179.602 37.0059 179.523 37.022 179.477 37.0688 cv
179.43 37.1152 179.414 37.1782 179.414 37.272 cv
179.414 37.3809 179.43 37.459 179.492 37.4902 cv
179.555 37.5371 179.68 37.5532 179.883 37.5532 cv
180.758 37.5532 li
180.758 41.084 li
179.883 41.084 li
179.68 41.084 179.539 41.1001 179.492 41.1309 cv
179.43 41.1782 179.414 41.2402 179.414 41.3501 cv
179.414 41.4438 179.43 41.5059 179.477 41.5532 cv
179.523 41.6001 179.602 41.6309 179.695 41.6309 cv
182.242 41.6309 li
182.445 41.6309 182.57 41.6001 182.633 41.5688 cv
182.695 41.522 182.727 41.459 182.727 41.3501 cv
182.727 41.2402 182.695 41.1782 182.633 41.1309 cv
182.57 41.1001 182.445 41.084 182.242 41.084 cv
181.367 41.084 li
cp
f
186.59 41.147 mo
186.434 41.1782 186.277 41.1938 186.121 41.1938 cv
185.621 41.1938 185.215 41.022 184.902 40.6782 cv
184.59 40.334 184.434 39.8501 184.434 39.272 cv
184.434 38.6938 184.574 38.2402 184.855 37.897 cv
185.137 37.5688 185.512 37.397 185.98 37.397 cv
186.215 37.397 186.418 37.459 186.59 37.5688 cv
186.777 37.6782 186.918 37.834 187.012 38.0532 cv
187.027 38.0688 187.043 38.1152 187.059 38.1621 cv
187.121 38.334 187.215 38.4121 187.355 38.4121 cv
187.465 38.4121 187.543 38.3809 187.59 38.334 cv
187.621 38.272 187.652 38.1938 187.652 38.0688 cv
187.652 37.5371 li
187.652 37.272 187.621 37.1001 187.59 37.0371 cv
187.543 36.959 187.465 36.9121 187.34 36.9121 cv
187.277 36.9121 187.215 36.9282 187.168 36.9751 cv
187.121 36.9902 187.074 37.0371 187.059 37.1152 cv
186.871 37.0371 186.684 36.9751 186.512 36.9282 cv
186.324 36.8809 186.152 36.8647 185.965 36.8647 cv
185.324 36.8647 184.777 37.1001 184.355 37.5688 cv
183.934 38.0371 183.73 38.6152 183.73 39.3501 cv
183.73 40.0532 183.949 40.647 184.371 41.084 cv
184.809 41.522 185.371 41.7559 186.059 41.7559 cv
186.355 41.7559 186.652 41.7251 186.934 41.6621 cv
187.215 41.584 187.434 41.522 187.574 41.4282 cv
187.621 41.4121 187.652 41.3809 187.668 41.3501 cv
187.684 41.334 187.699 41.272 187.699 41.209 cv
187.699 40.0371 li
187.746 40.0371 li
187.855 40.0371 187.934 40.022 187.98 39.9751 cv
188.012 39.9438 188.043 39.8647 188.043 39.772 cv
188.043 39.6938 188.027 39.6152 187.996 39.584 cv
187.965 39.5371 187.918 39.522 187.84 39.522 cv
186.152 39.522 li
186.059 39.522 185.996 39.5371 185.949 39.5688 cv
185.918 39.6001 185.902 39.6782 185.902 39.772 cv
185.902 39.8647 185.918 39.9282 185.965 39.9751 cv
185.996 40.0059 186.059 40.0371 186.137 40.0371 cv
187.105 40.0371 li
187.105 40.9438 li
186.918 41.0371 186.746 41.1001 186.59 41.147 cv
186.59 41.147 li
cp
f
0.768627 0.752941 0.623529 0.811765 cmyk
%ADOBeginSubsetFont: Humanist521BT-BoldCondensed Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Humanist521BT-BoldCondensed def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 4 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 83 /S putdup 86 /V putdup 97 /a putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 105 /i putdup 108 /l putdup 109 /m putdup 110 /n putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 122 /z putdef/FontBBox {-185 -236 1014 962} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings18 dict dup begin/.notdef <1C60D8A8C9B7C3C9ED9313AFF691AF9DEA7EFE9F59246D6675CBE223F5D9796E7E2CD60A70D0> |-/space <1C60D8A8C9B86A968D> |-/S <1C60D8A8C9B76356853D649393BB4189B8A86FB3A86723A52F24DA0FD99875A3B97535CFB5C640F7B3D12E92FA3DA1542C2ADE3BE948A0AFA59578020A426F46127405FCB696AEFA9E2FCAEAB65249FF1528D4D4009032131967A906DF2D18908889720063A5CCB85E0BF532C87A48A81675B38B53BC49B1A365107964CF75D10F0D82BB10C8438BB75CDC2E22BDC21A9EF53F7A6F9AB213F3965F70BB3D64B87C7EDCBD7A4CA7E1E39EB1201B7000B9323828D599D5CC09> |-/V <1C60D8A8C9B7402F14A5810E773E09DEC91073C288028277F2EA310A71E147259AA9A33163DC9CAAE9E1860366919EFA330700E48D1025560A6E5983AAAAA31F9907> |-/a <1C60D8A8C9B779148889A84E89B7C8E7D4D6A0AAF55DAE6FC1446C8647E5D636256C8F0387D90EB70808303EEC4494E421F619A65D29BFEC7585F099444EA7FF2C0B514098B20CF8EF38E57B2E64CBF712ED0D15FA031EC0B5933C2F79D2774EFAB054EF3945C5E9313814756F382FAA1956F05D225F2899093BB0F255ED0C7C6948440E59A9E7CEA9ABA70613E621016DAD11D3C4AE66DE9C526970AD7EF7EFF4AC58489432C430EFA8B6C959A238D5E3930772393FD190773F24F462274DB3E0FAF3148A86FC13E27AA65D7DBC474B55ECDBB2FEEAA2B216A2ED8DD4547DC75D30> |-/d <1C60D8A8C9B7A66FF2B921E1473FBA581E7CCA4DB027DAA14465688580F5A5E05802E4BD0BD4140EDA2E3B603DA15FA1FA14E54AA1D12424A038100183B503B9A55971BB66125B4382B237DD98C019A41156FB1A3921FAF0E818F88C53F598505733B5CF700B52CD12DA10B0012B0DA08F2EABCECE39F4BEAFA6511710BDD78FC64677FE9FCB3EB64F29AA4AE6B2DD824A> |-/e <1C60D8A8C9B7635685105750B982F9BC390CAEB6C326CAE83E311C6801C091D71E4AB82FDB7D19A86E6A0570D0339025F1E2805F47552FACD5B4DF754819003AF7154BECA192471505CD07FCE5DB3D73252D4BBC6BEC3E11A02F5AF7E54B2DD6821AB0E72397B765289B2C5A2E3B935233132E0B982B983DC2D5D5A3BDB2AFAFA1EC6D105A976359BE33B79B920D2F0CA846C4FF57C0E3F60E186B8D302A86> |-/f <1C60D8A8C9B86B643B0524DCF17E0D9C1D05B3A4D44CF9A410D87E61B0308B4F5D656140D318C5CFD2302AEEFFE1A7722D190C1351E1E82EFA36000CEF7B55D4A7A2B1C54DA1E3C479C08E7273810E2E2B35B328941613377945B502101CA90A191750590BFFC2084A> |-/g <1C60D8A8C9B7734F839CC0865D85B881531240BDD0F7B706AEE178C525AF83B106C127E0EB7143D30FEDF9E9614CBCAB51714231DA8D7F302AB6C994E856F2F4F71B5FB57E83702D4621D9CC1BE26B0BC68FB125E2503E36416046CFF83D9F8D99675B99DA418F00BEE2031525FC91769F29817FE94B383EE5D5850D1C7BDDBD0FE5D46FF48CAEE5FE214C01B4B1EDD016D11420AD7011E7EF2CEB4FDD07395CF87474A405394E33D294F4F0371AAD6D0AAA9D1D41AEB8B39D1DD9672B6704D88268B17EB1EEA3F6F9D9FB130FD2CE47BB5DB3BA3C35F5F83BA4B3BB717CEBAA417E3746B8CE1B9AD8CF25BE6235C283D4477294DB70DFE7AE1F3A76AC0F897C64BA7B749506610F680AD4B88E0CEAD188A01C1D49870B3C89EE5678F31245730B290E03FBC4BB4A37D9BABA764813364369FE4B728E4355A4> |-/i <1C60D8A8C9B87F87DF97D32C7F5B59CE576BC341075C2F8C4598E7B14292DC5BA62170CC3FF1CB58F75C4556715CB77554E6538F22B894BF1F12AD1AA9362663AA8C949D08C570504E552D98543858339A81E8F0BB> |-/l <1C60D8A8C9B87A8F726124394B268AC7A51709141BBB> |-/m <1C60D8A8C9B6E081B0A6EF1F3E589BC7EB9F1E72CA7B4096AF3FEC12A194E471DDC0DB197D1DEC1B91558447355CC2E9EA9F749716C358C43379D33923EE55B486AB7F7C8060FBB68F183611348A48E614DFC2816A4F5226162C5B01A7F80BBBA3CFECB41DB7FA8A7463A553BB03E2AB2FC06752E9B11D6492929A6ED35F18C9EA1A8E120D0821C005FE98131F63501CF1817CB1805D14AA7A0F5F> |-/n <1C60D8A8C9B7A9C0D3D62020D6D08025027ADC3EC22FD4A3A95D1F1087BAC5BB25B90CF54FF623B8736DBE4E6C76C74D9516F0EAE24CEB07986EC381B1B59F65CBC3EF3F6A3FBF9F8A6995916C36FB785BCDABBCDC45C402E3D9> |-/r <1C60D8A8C9B722FF7362A249A6EEC353E591E4B77317ABDCA37C402D91FFE0DD94FAFBCA6E27FD0DEEA15DB5AC9238301B05CA72ECF7E11110FA4B87EDC4A2F1D4AED534BD6C1622892E99CE3A67CB92C163B5BC> |-/s <1C60D8A8C9B7361F02B327E702198C6FDA07A90631AF99025BFF3ACAEE7B88786B1C6A95B8FE05B6AC9D7D3E46EF4AA66A6070B70804864B92E3C29CDF3B034704A94435A84E7C3FEF8845A4C721CA0782AAFD335DBFD0D632D8C21FCB9ABE46849FEA1756E9A42A2DA4A6658496458CAFDE6FF771B16F251853A8AB82457C8144DC4543BAC61BBBB139E333A6455F20C5CD9007278C19E075F7F4EA5E6112F9C93C2D5D1EF13754EA0B647D9E7F2C00DA414A37CB24F31F0FAD03> |-/t <1C60D8A8C9B81F2C359317DDBD3F004A72EC983121ED01C0A70AE0B4287718DB87BED56DD82F422010083B3DDCD31D4A9BFC3B06453F71982413464D1FCEA284C516DB67AB9B1C0FA6CA12E7ED396CBA6A9AC87DA4AB86C406BE240F2D72> |-/u <1C60D8A8C9B7A9C0D355275ACD34CBD753DD029AEA635CF980A04715531274F0B91FFFC41F02AFB000AFBE0BE84D08C4442C5A228CD000DB53E531DF5973D1333A80C7E5AB79B7314D20BFEC35DC7B3DC84E5C0B6A9F69BEFFD4> |-/z <1C60D8A8C9B70D0E7C19A4B2E8E26B72E4D57418AA8D6728B6FFFA9C39526B874B505195> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/FFKGYG+Humanist521BT-BoldCondensed /Humanist521BT-BoldCondensed findfont ct_VMDictPut/FFKGYG+Humanist521BT-BoldCondensed*1 [32{/.notdef}rp /space 50{/.notdef}rp /S 2{/.notdef}rp /V 10{/.notdef}rp /a 2{/.notdef}rp /d /e /f /g /.notdef /i 2{/.notdef}rp /l /m /n 3{/.notdef}rp /r /s /t /u 4{/.notdef}rp /z 133{/.notdef}rp]FFKGYG+Humanist521BT-BoldCondensed nfFFKGYG+Humanist521BT-BoldCondensed*1 [9 0 0 -9 0 0 ]msf52.4565 8.57324 mo(Verifiziere die Signatur mittels)[3.78369 3.95947 3.39258 2.13135 2.31152 2.13135 3.58154 2.13135 3.95947 3.39258 3.95947 2.30273 4.50879 2.13135 3.95947 2.30273 3.95947 2.13135 4.10449 4.48242 4.05176 2.99707 4.48242 3.39258 2.30273 6.74121 2.13135 2.99707 2.99707 3.95947 2.16211 0 ]xsh%ADOBeginSubsetFont: Humanist521BT-BoldCondensed AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginFFKGYG+Humanist521BT-BoldCondensed dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B879BE1E15F0928490B4575DEAC5F0BE046314257991805800B657E562A3F331735C553F247A2239B3A82F69B7570FFB338D9EF3693E195285695C9CF285EBC3> |-/E <1C60D8A8C9B7AED87B19FE39751507F2030EBE51E4EB770DDA44897BA1B5F1A4ED3DE0A08E7F2A8B88B9C6489C0B> |-/b <1C60D8A8C9B7A66FF26611086DEB9F9ADEB81CF7A4477AE1B3FD58D040358B5A33225FCB34B2759315C93AE4FA8B4240D95010F63F8904C317A521B6457B15D720C994C349FE690D99D140D64B8F3AD73F85EECED6AF7A723882A67C41B6F860282A4856C7358E226A520056BD621A72457E8D34DE37A43BD93A48F3E1C8963639408D7B37A360DB5AF2C8B967D944E90C7E4F> |-/o <1C60D8A8C9B7587019EAEC8BA45EA4E2ED2A554653C8B708A048C615850025747302E2DA4F1F18F7A7733B9DFA1CC682CC1A51CC79CF9E84B335CAA7CCA859C309738ADDF424CE393ABE7E15C91DE65C4F693C295E864398D58F8FE080E134B73B272DD6E417BDBBDF54D05D800D1F67406730CBD1584980D134E5032D80B3530AA2> |-systemdict /gcheck known {setglobal} if end {end} ifendFFKGYG+Humanist521BT-BoldCondensed /Encoding getdup 46 /period putdup 69 /E putdup 98 /b putdup 111 /o putpop%ADOEndSubsetFont
/FFKGYG+Humanist521BT-BoldCondensed*1 [32{/.notdef}rp /space 13{/.notdef}rp /period 22{/.notdef}rp /E 13{/.notdef}rp /S 2{/.notdef}rp /V 10{/.notdef}rp /a /b /.notdef /d /e /f /g /.notdef /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /u 4{/.notdef}rp /z 133{/.notdef}rp]FFKGYG+Humanist521BT-BoldCondensed nfFFKGYG+Humanist521BT-BoldCondensed*1 [9 0 0 -9 0 0 ]msf52.4565 18.0732 mo(der beiden obersten Elemente.)[4.50879 3.95947 3.39258 2.30273 4.50879 3.95947 2.13135 4.50879 3.95947 4.48242 2.30273 4.34619 4.50879 3.95947 3.39258 3.50244 2.99707 3.95947 4.48242 2.30273 4.43848 2.16211 3.95947 6.74121 3.95947 4.48242 2.99707 3.95996 0 ]xsh%ADOBeginSubsetFont: Humanist521BT-BoldCondensed AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginFFKGYG+Humanist521BT-BoldCondensed dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/D <1C60D8A8C9B7FBE1C1ED958F164D0D2BCE63766EA22B04DBB3DB77583DCD44F42BB14FCF3AFF036D598EC735009805FE44A01BF65ADA3EE3992F57DCBC0439BDEA2E38805CAFBA3AF5C1334B9ADE5492BFBFCCCE753B0D638A9064C105EE1FA6B25218DB131153F9E4C821A7571EC1D1935A74> |-/P <1C60D8A8C9B7B9B9D1E6C84EB8CC147AC7C2D924316CA0FF02129AF9267367BB989400A1D586A1046AED63D87A56420D85710376330CC794DF262655F0789114AB9096BD8548CB9D03CDFE2C373755246975FD625943C2082A7D> |-systemdict /gcheck known {setglobal} if end {end} ifendFFKGYG+Humanist521BT-BoldCondensed /Encoding getdup 68 /D putdup 80 /P putpop%ADOEndSubsetFont
/FFKGYG+Humanist521BT-BoldCondensed*1 [32{/.notdef}rp /space 13{/.notdef}rp /period 21{/.notdef}rp /D /E 10{/.notdef}rp /P 2{/.notdef}rp /S 2{/.notdef}rp /V 10{/.notdef}rp /a /b /.notdef /d /e /f /g /.notdef /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /u 4{/.notdef}rp /z 133{/.notdef}rp]FFKGYG+Humanist521BT-BoldCondensed nfFFKGYG+Humanist521BT-BoldCondensed*1 [9 0 0 -9 0 0 ]msf297.957 7.57324 mo(Das Programm ist zuende und)[5.18555 4.05176 3.50244 2.30273 4.46924 3.39258 4.34619 4.10449 3.39258 4.05176 6.74121 6.74121 2.30273 2.13135 3.50244 2.99707 2.30273 3.58154 4.48242 3.95947 4.48242 4.50879 3.95947 2.30273 4.48242 4.48242 0 ]xsh%ADOBeginSubsetFont: Humanist521BT-BoldCondensed AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginFFKGYG+Humanist521BT-BoldCondensed dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B835D34C80D187BF12B2A56C69E0C0CCF1355A> |-/K <1C60D8A8C9B794D33BEFD3C053E2F8EB7FCAECD05C13D832BD6343EEAB0DE8265ADCCE1F96937B9423BC97CC5B1A5BDE0BA8C3> |-/O <1C60D8A8C9B7F1D1B0D883DB079CAAB1DE78AC024D7FBBADE6BB81A743A59E0F65BE907AF42EBB989C8BA87E41BF8C24984D85BD8B2E9E7F183AA964DCB26C47C80FAC4D91EB8336568B4460D87CD9385716AA18AAB5C4DB659360C1ACE61C3856902E6D7686021D397E48B9C81F21AC6989AD5673658D37D51B42D6CC667B43EA0D7B1811> |-/c <1C60D8A8C9B70B6BB5A4CFFDBDC9F1BE54F4E3EE2A47C32BF87AB40DD9F2FDE421F50A29E2E11A0534E113EA94664A8873446C17CC124002A3304F53D2925B29F28352F66A910067E089AB05DAB9B45E121CA16B016871152533ACF774BD798B6981E0984ADBF4326DFC51E32ED44C7E804549FD076B80A3118DC05BDFCF6C174E14> |-/k <1C60D8A8C9B74A3EF33C4CC7DE1734F2E51C0BF82E30767D57CD47FF1730F8C4B0125D31175C85800C7269EB5CBCF91DB7A22C> |-systemdict /gcheck known {setglobal} if end {end} ifendFFKGYG+Humanist521BT-BoldCondensed /Encoding getdup 45 /hyphen putdup 75 /K putdup 79 /O putdup 99 /c putdup 107 /k putpop%ADOEndSubsetFont
/FFKGYG+Humanist521BT-BoldCondensed*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period 21{/.notdef}rp /D /E 5{/.notdef}rp /K 3{/.notdef}rp /O /P 2{/.notdef}rp /S 2{/.notdef}rp /V 10{/.notdef}rp /a /b /c /d /e /f /g /.notdef /i /.notdef /k /l /m /n /o 2{/.notdef}rp /r /s /t /u 4{/.notdef}rp /z 133{/.notdef}rp]FFKGYG+Humanist521BT-BoldCondensed nfFFKGYG+Humanist521BT-BoldCondensed*1 [9 0 0 -9 0 0 ]msf297.957 17.0732 mo(das oberste Stack-Element ist OK.)[4.50879 4.05176 3.50244 2.30273 4.34619 4.50879 3.95947 3.39258 3.50244 2.99707 3.95947 2.30273 3.95947 2.99707 4.05176 3.59912 4.18359 2.79932 4.43848 2.16211 3.95947 6.74121 3.95947 4.48242 2.99707 2.30273 2.13135 3.50244 2.99707 2.30273 5.27344 4.95703 0 ]xsh%ADOBeginSubsetFont: Humanist521BT-BoldCondensed AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginFFKGYG+Humanist521BT-BoldCondensed dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/L <1C60D8A8C9B771A8FB4E269C90FB4FE29C12F712A52816953033B5E0> |-systemdict /gcheck known {setglobal} if end {end} ifendFFKGYG+Humanist521BT-BoldCondensed /Encoding getdup 76 /L putpop%ADOEndSubsetFont
/FFKGYG+Humanist521BT-BoldCondensed*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period 21{/.notdef}rp /D /E 5{/.notdef}rp /K /L 2{/.notdef}rp /O /P 2{/.notdef}rp /S 2{/.notdef}rp /V 10{/.notdef}rp /a /b /c /d /e /f /g /.notdef /i /.notdef /k /l /m /n /o 2{/.notdef}rp /r /s /t /u 4{/.notdef}rp /z 133{/.notdef}rp]FFKGYG+Humanist521BT-BoldCondensed nfFFKGYG+Humanist521BT-BoldCondensed*1 [9 0 0 -9 0 0 ]msf200.457 8.07324 mo(Lege das Ergebnis)[4.12207 3.95947 4.10449 3.95947 2.30273 4.50879 4.05176 3.50244 2.30273 4.43848 3.39258 4.10449 3.95947 4.50879 4.48242 2.13135 0 ]xshFFKGYG+Humanist521BT-BoldCondensed*1 [9 0 0 -9 0 0 ]msf200.457 17.5732 mo(auf den Stack.)[4.05176 4.48242 2.31152 2.30273 4.50879 3.95947 4.48242 2.30273 3.95947 2.99707 4.05176 3.59912 4.18359 0 ]xsh%ADOBeginSubsetFont: Humanist521BT-BoldCondensed AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginFFKGYG+Humanist521BT-BoldCondensed dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/comma <1C60D8A8C9B879BE64FAE6A75040399292F38E045F6C73410C36C5D3D68658AE0687357E8E676B8B9427E64592E2ADF78C263840143FEE279B3923752ABBF8F68BE0E0290A12B371543061FD7B4BC24848565E78> |-/T <1C60D8A8C9B77914883DEB73864606D6A32BE8416E4F129BD0B88C5DD0955A2215D9> |-systemdict /gcheck known {setglobal} if end {end} ifendFFKGYG+Humanist521BT-BoldCondensed /Encoding getdup 44 /comma putdup 84 /T putpop%ADOEndSubsetFont
/FFKGYG+Humanist521BT-BoldCondensed*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period 21{/.notdef}rp /D /E 5{/.notdef}rp /K /L 2{/.notdef}rp /O /P 2{/.notdef}rp /S /T /.notdef /V 10{/.notdef}rp /a /b /c /d /e /f /g /.notdef /i /.notdef /k /l /m /n /o 2{/.notdef}rp /r /s /t /u 4{/.notdef}rp /z 133{/.notdef}rp]FFKGYG+Humanist521BT-BoldCondensed nfFFKGYG+Humanist521BT-BoldCondensed*1 [9 0 0 -9 0 0 ]msf3.28955 99.5732 mo(Transaktion,)[3.44092 3.39258 4.05176 4.48242 3.50244 4.05176 4.18359 2.99707 2.13135 4.34619 4.48242 0 ]xshFFKGYG+Humanist521BT-BoldCondensed*1 [9 0 0 -9 0 0 ]msf3.28955 109.073 mo(die du gerade)[4.50879 2.13135 3.95947 2.30273 4.50879 4.48242 2.30273 4.10449 3.95947 3.39258 4.05176 4.50879 0 ]xsh%ADOBeginSubsetFont: Humanist521BT-BoldCondensed AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.systemdict beginFFKGYG+Humanist521BT-BoldCondensed dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/v <1C60D8A8C9B71DE7D2964163E3452F1A950E90709C599510BB195F98F232C1AE9EA71F0AC80CD0A039A2CE257FC16442D12D38EAE652BCBB8DD6C2457811A45310F6> |-systemdict /gcheck known {setglobal} if end {end} ifendFFKGYG+Humanist521BT-BoldCondensed /Encoding getdup 118 /v putpop%ADOEndSubsetFont
/FFKGYG+Humanist521BT-BoldCondensed*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period 21{/.notdef}rp /D /E 5{/.notdef}rp /K /L 2{/.notdef}rp /O /P 2{/.notdef}rp /S /T /.notdef /V 10{/.notdef}rp /a /b /c /d /e /f /g /.notdef /i /.notdef /k /l /m /n /o 2{/.notdef}rp /r /s /t /u /v 3{/.notdef}rp /z 133{/.notdef}rp]FFKGYG+Humanist521BT-BoldCondensed nfFFKGYG+Humanist521BT-BoldCondensed*1 [9 0 0 -9 0 0 ]msf3.28955 118.573 mo(verifizierst)[3.72656 3.95947 3.39258 2.13135 2.31152 2.13135 3.58154 2.13135 3.95947 3.39258 3.50244 0 ]xsh%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ArialMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 74 /J putdup 80 /P putdup 83 /S putdup 84 /T putdup 88 /X putdup 97 /a putdup 99 /c putdup 103 /g putdup 104 /h putdup 107 /k putdup 109 /m putdup 110 /n putdup 111 /o putdup 114 /r putdup 115 /s putdup 116 /t putdef/FontBBox {-665 -325 2000 1006} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings18 dict dup begin/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |-/space <1C60D8A8C9B854D00D> |-/J <1C60D8A8C9B7A73D9658D627ED627C91284E113B36EE4477BE063DB79C014B4C1304B38BFA4196C7B3993D5118026189127416D2C23E3BA1516C5E2D259EE2D27698DAD25B31EA788FD5CFA3D890F5093AD3EE1D75864143B6DAD8719C69> |-/P <1C60D8A8C9B64EDFF4950CC53012D47AE97D5586315BA2F5162B63CEC117C5379A1B3DB174CB2C739C68916A1E99A346AFF71DBF25658867D9AEF1BF3C47CE1BA73978E8D0D40E52B85A56E08A1369D85E15B0A0C517291916FF6E61D0EFBF59B4862165C7DEA15B42BE3811C2CAA25C54> |-/S <1C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E558E3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051BE47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE626CDC6D4C322BB391537921D673F5AEE3EC19E36E7EFEC0F06A0EA4EAAB6BBA94DDCD11A6A564B13B510F8C915848233B82F046D854DCD4F1639F149305DC73D3C68DF8AEB47A96A30E55CF8BAD07FA2825BCE0D675F1CC2EBE61B07B772130E23119250F1EBF8FE12A2098D9F09F3F21BDC41666CA4A0BB70D5F0A750B44BB93A5FBFDD2BF8DE450B277265536F77D5BD6F44FB72FF2E708C60107653AE44BFFB26AFF8> |-/T <1C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A595D3927> |-/X <1C60D8A8C9B64EDFF4DFD017B43F7EAB96365BACFBED2D71ADAE4E00FD12B461A7F13C64E3A175013F8F17B0F966419CDFD1925B86CBC99EE22C73270B3DB758F48A1908F21BEE4A7E0F431996B89DD71E609DF64575A71FFC> |-/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177B5D88A> |-/c <1C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDCE9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F7BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148C344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D36548FE63FC8465B1B685766E782F0> |-/g <1C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817A065D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D559B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0C247BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667DC9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FBD88F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF575C72F67F4BEBB98F8AFA57505EC9> |-/h <1C60D8A8C9B7EF322B3BE19FB964E037672C8A279BC86F7B9BF0C8203E131450D56E388301CEAE43162551FBE05CABF94DC3B5DDFBB4DA55D11470EBD41AC970CEE2D2EFA88D51157B4EF5536CB673423CDDB06FA774D27105AD2B1AC2DFA8> |-/k <1C60D8A8C9B7A73DB90BDE2D32BC36BC1297E20AB90FA9E27E830D444A320C85D226D41FA634DF03A4FEE2FD90BF314563D4BF5C68> |-/m <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519AD5BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD99C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176AFB9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D55C54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE37B> |-/n <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDADE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A5203A8015DD09B7CE> |-/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F518C54BB58C51D6FB6D0C8> |-/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE112857894FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619ADD420F549AB7C795751D32E8EE6> |-/s <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD96538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB3287CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B8435558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F4172D53C8FCAF4D28F2B78D3A4BF03> |-/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F5C42C88FB43C> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/FFKGYH+ArialMT /ArialMT findfont ct_VMDictPut/FFKGYH+ArialMT*1 [32{/.notdef}rp /space 41{/.notdef}rp /J 5{/.notdef}rp /P 2{/.notdef}rp /S /T 3{/.notdef}rp /X 8{/.notdef}rp /a /.notdef /c 3{/.notdef}rp /g /h 2{/.notdef}rp /k /.notdef /m /n /o 2{/.notdef}rp /r /s /t 139{/.notdef}rp]FFKGYH+ArialMT nfFFKGYH+ArialMT*1 [7 0 0 -7 0 0 ]msf23.4004 141.834 mo(Programm)[4.66895 2.33105 3.89258 3.89355 2.33105 3.89258 5.83203 0 ]xsh7.95215 67.1675 mo(Johns TX)[3.5 3.89355 3.89258 3.89258 3.5 1.94531 4.27539 0 ]xsh94.8047 141.834 mo(Stack)[4.66895 1.94434 3.89355 3.5 0 ]xsh150.927 141.834 mo(Programm)[4.66895 2.33105 3.89258 3.89355 2.33105 3.89258 5.83203 0 ]xsh222.331 141.834 mo(Stack)[4.66895 1.94434 3.89355 3.5 0 ]xsh276.927 140.834 mo(Programm)[4.66895 2.33105 3.89258 3.89355 2.33105 3.89258 5.83203 0 ]xsh348.331 140.834 mo(Stack)[4.66895 1.94434 3.89355 3.5 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/FFKGYG+Humanist521BT-BoldCondensed*1 uf/FFKGYG+Humanist521BT-BoldCondensed uf/Humanist521BT-BoldCondensed uf/FFKGYH+ArialMT*1 uf/FFKGYH+ArialMT uf/ArialMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (Volker Herminghaus) ()%%Title: (05-15.eps)%%CreationDate: 11/30/19 9:57 AM%AI9_DataStream%Gb!R&f6[#1Z7($*J9M"Jj<TkOaiT&B2E9WJ#m+V2,oGlU5L"J.I<Fu/Mk0-6(6T5;XLZrSo,IZ0[CWrM.sG"&eXBi^Q_WecP$e0Q%0U"o?*"7MFi;d9r71#1.>+IiRN*7/B)3+jE@5@6Y7&*%h-itJ7T`D`'>Re.MC:S'+X!,G9L"1Q>1C8-]n,Ca_gRl9F^:?n]kGphl%q0@HLPIse"/N;$57o0$RgC?>bS#b:4IlV'ui;f;7Gk8!3W3BHcW$Ofj,VQU8lh,WtN=P=uG8'D0VfSlNU)3cf3US-=De,N-hbN@0%]Bs&md0XlMLngSp4Zo'$"ssBB6(ci&DjJ<:G!r`G2Upr&!KS,j+PO`*gXKg;aFdo`0VH:"[k>Wn_G'`6iE.WB`#je[%/u6\mpS"d%G.b6Z$q%khkS^f+E3esoe7(T0D^`7>5pG:rRtL5bqC@$W>/K'6WrRH27a0g.C);kN',&oSqI<.rR=GGZ:7%Fbo?GRg2'&tnb0c^P%oH0HDKFGZ^!VY-#m@9mmQW&QYr)9,6m<1@]k'4Vq]B+;[+b7B.-cNi:K2/&1:`COaeU4usY*KB8N8Pbn&iBH7;`)Db(@O-4e?ZE,%_P?de;4(';N[>PrP<gC/Nfc&`/.3U*<#k%NOVf3",1Hk_JaYW,$e'^(C=:SQFID%k(@>,ckt#'nBYYTts5:0Z@ZpcNr."&U@D83?%[H%N$oMi=8q]Q7&D$qJPQ9^<8KRP$[CRtUS5T01DKRG1p`_YOcmFq2E$HE%ZgXV$fTW^@eN^s!\])N"H-3GuPDD\2'Gf'6,!L=CK%!Q]7ATD/;\rc#KCr-')&C<GGpS!j28_Adp38K[]h#:cBt1<+D#07R>F_nP$KSIbPA.K$'b:U.*$P#j*keLB8OP\i4A[$_8<QFM:*%J&Sj%Z#*R*[O\'=MB0j*D7X;JDT/J"s&Nepl;&`@m2s.E.EXjXI/B<@7F0@4(i"jTc9Kt,kL@MdmaDFDlYle+1#6k,QiiXf=9.st%2=_8ZlbA!A^,Q$#h&fLM0E(5S"E;*:C,;U(r`mS&AEJ=&gEc^(So:%9FL`,*nc/S_/cCU0nn6EH49"+P4W78GeT=BVc\jtCgs4:`%^-NiikFhim.0`Le[/+k.Vu@U[q[<<6W,"H\cf#&dXYDNuFLaJl$&HJZ[9.;.e9E3e@ke"iI(Dd'B@\1*rAf$UEZD?(s-3F36mKke%%*;9sn3<;%!QDQIrX7I.r[.Wir]$AG0gu3h+AKXs=84VLqs93+[e'of'Q]-cDYsrfBC_+]0O]u(!4%(`E)n2O+F("W4ra,38f/]M%!_kW2X"=E!@e/\-,[-@YcEWU2&dDEH;00YSINp/j)kkXggSi4PC.e?_kM9ZQ4L-O[V;48>O%*fZ(hW'"]Zi(IU-GFc]n=,@c2'fO%&1gJ\*,Y7rDjQYO]j8kZgC<Z2C.Z\J_`k_GlBJLU%G,nH"uJieHj:0b?%U$pBfTEA;^#T;ECs>0`c$>*-U7WeeH_XH[KDV:r9NJT%]qmc>Y:7B9FO[t+#lpaKH0j/Kf"gM,a9]lo*]"ZCqI'E(hediQ?R#L6EXWAhq-,$Yd%]J'+P!GT,")"A7)hbC*C)Z&!-+duGjGZ_%JAm*GI8-n7gEFY@.J1,9;Ad!+`Vn$b2<gT)A3B2`;2%!c9ZEk,rYf,<M]5)IjtBVR0ZX<+Lgr(L$ia&H$"XU"#h4)/%+f:p]bmj5%4[8hID!#/L.=/3T/YF;`j%OZ4oH`"'c+!2@6Edi`S)nm+Eo]]j!G*nU6"44V3usd]oTo;2G?1cTe''tYMpJBq'Q?50^&k?Pr`R$1%;)>r&=Esg=dBe>$mDRVKY+</>5rI,UR=,?HiNM`hISQSZ"\or\W;XE:OFF*obp@c4<h%"o(243Md;PAqk2:7ZpHo(q9cI7WUriX5%==b%[R=tW+q@!2R!"$#fGX^*dgg3qZ!2HQS=oRc<;?-BBld3]dR$a@q+#&fgW56'[AZ2HdUURq-DN$:XX=Ia67Mp1VRBP'_dPT=5%I*@T7+-]jX5S"(a*<bU4E.c1UJ3]YLo,?C=C@faU=<G1<GUgF8F94mG%'POTKDi4S*XG6OZ;;$<ptZ?rZhXo(:8;1C:^l8shI#tj%1]Er#,jjK:K<1:9Cbu%-]]d]3H6@S9P!SjMrJ-M!P0.==='o(MfdFkeg\_LqaQ0NX_+;LObR#-BEWr-6GPq\Vp6bdF.Cc#bs-,2r%:#NFB_.WiH/RKbuORWVQ&.Z[9!-2b*k^W)Q$jYc8&q*#^_tX=_o[5\gSfqNkq&@&ti56*'oVX][^,<ZR&EXT&qXT0k]n"diB5C>3%bb2knn?9ujbs=+rDq'nO,S3CSjG+KOh`H@Y\JPWf)NPKT#<a:+R?7XCg&J`_a!@G*JO00g0PWiIN,',h.8T+t*l'jkDs5Zo2IM#W%iW8kc-6BR]g0jd%%XlG!UjSf&%]*RseVqq)-%J5+Rl&_43[mh/&`9Md2CAJ:X3C`("?-RE0!pMG)2Aa/EVpIertt'6PM%,D`X1HJ%bnqp:R2-WC.W`EM9RlcI"39lR`uWeoDK3JOlPeg6)*5',6.T`Y>Pd>>(*,!inT]Y?Gu/Eka!3s:rh,S%d0NG`'?S@s/p-Z6hjXT>%c=0$+&"83o?i#[!ip`SKE-qb][2el(d>,G4(BTT[s&__m-0U"b\_6$P$Zf35Qt&PlRTEI`HZa<9PW0M'GgNRDJRL$<_K_e.s-Rt=%`N>i5PnsY?_`>XBBRo7r_tqX]EJn>n%?b*@Z0!t0k5XChL5ls4C37`1QB,GjqjY=Ag@OpnJJc`m$!G/ia4p!'Z^HGUD9d"=oDe[E%%+po&RN@eoE8H/):a?21XrEN\$U*J,X-j@\!kYgQA5\j."X8QT"VZi^r=9TefT(*HQ!W%5+P%<VB#ag<ninkpeOIrd&,lk3;\Tok%=FFcd3'fb%V\&UGE&FQH?]o*H0W31<r6Rroi:J*`d3E&C]^Dt3r608fS`Apb0FlkYC&n`'=M\I9LFA=h(aiK0o2rfGE'@Pp42cVu%R8K2j[:FH2b2-6;2^h@6B!Ch`fQ]d^`F6geEne*VAPuf<5f$fcq%=`qTa,m)fPYp>rZ"Z,fiJ,r(MDr=dVAOd^+W3#lbjG<rtPFb%r4V5.g0n2@]g)?MP6?3o$!H!SO8aOM[me%f)XWgl?#q6!ADdBA@L!<WaoGo5X5T!U)8Qa=nk=^^m(<O$]K&V'Ql?SALb`"Im@U#X%opM-G6qi]RQnUAsBn%h7N"H!F<W/Q.k_VM4ZT;jt+/W^.^#>:1X;:h=8bVW#@=m_gV27k]?nnG;poj8mN91)4U&<f`V9J_\s+@`L%J!^\4q/lBr>o'2W.*g>o>[0W(qk'1c6;H.(g&,\t2Lkb)B1%D?5*C`ApW_ii6E'rSVSotAcd"%/7bNI,4nJMk3nes#R24ED5J114%"/n)J_.j)'5_BtnfG#n^1Y[?@rrC<)7:(>KV2#c1Wr.pYIS`l@kohUV9n*;3d&H&]T/_kS&Jsmj6=#boaq+bkk+A'>bR,Y2RKk5@%$6=-m$PPZ&U56uE`I&%Z)]Y+tMn+q\h9VDFK!)O$o7YpP`,_B0Fl(nkf$H[sqg]skZ_@7hB&*]n%f_94V^!uBKT[P<E%n@2.l*;B%c`PTl-mrV@YV",3g#51E&CYM7O:5N8;oo%5[M9!3aqb'!!U2fsF,0U-@kNb<S,QeVT5OWD<fQEc2ji7]0.5NRKJL#;COYMkX;[Kl%C/a_=IfnL`<l=nV\`F6KXsUf7[Wo:VVC6:1IG@,c2M/M%4)#gTc-LJ(#=Ygn&=2:W+3>M!DpXm.]RNbq%3TW:TD+[>JU.0VXTc\F%PrfLKdP&#^Lno#mYTnf)8L^BR'BM2"SHR0I)ki>$<ZG#g8qaR$Y]q:>;7H=M<WaGj&X!5g8Yg12#(cjKRo&Zi.@W&ul$<=HSN1hD%U(fh\U!W#!6"3NsB\T8i)PG:VZY]Sc4L4S17Ut5d>`%NLSh>"&Gf<AP=XkW_mt"ksO0qW4lkk[V@!u\H$7Ot?i'P^"dZAN,X;F)N%oDDB8%HaKD.$MG_lO$7I6i>VEN]<0&OHMB@b.c@je<-NZQ`q#t^17W]/CbZW"5?os&\Dm[WEkB7[[CQWZ-<fu)#Mm5PjREa@;A;(%n*A))k!M4;b\B96Z)4-OGDqk-he9a$a")_JeXETX+!PG<A^X1-nSYrrm:50Vg3eh4N2U`G46Li?*"T)F"PQF`nlR<5eOo+g3/V*@%I[`DU2&u\m!2/Rs9$s-aN@e]pU/=:V!?*H-UYSI%*&T##7bG6/L9*Tt,f!r#g[/rTq\J\0hSA?;DadHL\qB2"r#sI$lE(n"]+j/S%hKFD4N#Xc[c\I!cdgOoB\7G5.$>h]M\R8L=dO&E3L>R=/B`j(i2;6Mk8?^Uu6Y<l$[NqkiR-fEr<D]7Pk+K9I3kWE+##ccgFBNfZ%:&68XC(GeI2gA\#Vp1`";P:eXO_K\rb]ePiEqk?>X0t>QdLmg_63p4grO)@@/1*4o5T@*-W]b<7YZ_Q=HQ"S!;o]>:>?*h`\T+e9%5bEbp&If$!/r,0L!cHh$0);ViFZTr>g*_l8$]4(d'NSV2NQgKrjWPFrRbo,EmA?9[6paah+;#`Pd(<5+AC0/$?B(jFP6KH%U@e@4%mkMtK=nF`[gQAU9P*lD6!1;$$f.bi(j,Lc9=@KE5mD[%"o$2Q7:cMf#*n5LH\8uilKK$u>Q4f^^$;2J@mP3:5_[E\f1ofGr(=cQH%:hOC6XhrrA;PRWg0[s]AZYr8g<SMsj1"47M^X9G^YY0P5G//g#p,8/^Y\q':1RN%qI3%j1R^-eoh,oE3/dG5^m_f=+_WVCC[1qDV%!NI6mf8hF#RAbHDKc5t;RXVI(IlR#GBSAShBjVb_"cREW?gfp9\99pQ!`lt`&io6spkRDLR"<3+2"D,-fk.f-f&%9?2c*@M?tn[u%a:1N0Td-1Q$?#!tAo*GQ]k=%k\Y5\?TMI@)a;%Dfj:@(;_*DKr6l9T1bA?$`XefLDJ/9Gjg-B.Ve-=XTqNa/tAZ1UD:'hOO(':UK%DsSpQ[@A'G"N[ZQjhPIU\te,Bbp;%RA'"F8<LC+i#j6^oN&G4Jle-70E:LE/oFW%F2W*dCQlP!g&ql+]6@=)$%PuU8"*8OCd)MI-%67A-Q(FbZ`:Z/tZ#8H1T(#)J$A!(r.OgMXaB<+b`E;lJ\QW6rb6`SXg0Es?#h6*'Eip+i9Rlu<u=3(hO]SR`aoB,P3?7i+-kgA"[%99(8!!B#GS^PpJqd"\SrnJX&2K,p)&YH!Ua"21^Qh/E1"86UME'tXFSp/(FE,_("C7sj+B)R$.tj'QV36`CKpR\MfkY39"UOI4(u%.t"g2(_3.D@5s+s*EJHr"ugNY4@d<$1jV.BG9V(cU(@)>p0\9af)k;Sf]'dRQlt1n<qE:s<.]U\UG4$E%DJ^t6BP/6U-<Cq+%.Du%fSfQR>$1C@%^0C:=Aq>JfMt@E0_dIEK]tRn/sa-\<5+"PcC5F<2'#J<FeTd=0YS?uY1E93b90[Ic!O'pNjkK<O<-1T<j_VF*jLkg%,bWLj*V<S"YLsr..Ac'GnFLp9.'0j=P*h_B"A=ut-u:`*D@,UN6*sho%Ft:2/dBMuFKWs*C>)+NdDC5f$T]7u1ar!'5VcO"IU?kj%]k*;h+'<16De$s@f/s9?/#(Ki=BA[ZVrdmH0K\oKE=;L4o:Dni8:ih<JmR[I.1(;RE([&Rfo=n8E0@1kR7m^CI]3LM.iR-r!KrGC%jlQSp4%5t0\5,5o4S#-j!ahQE=Lu]'#*ssM7XaE3(BgPt1GqG<7dV9#*cPU=fqI4X\W3iA.;PC0Zan&M)+\DR(1IJ:ODne9Gf)Y4%U5_E=d"5m?\cK_n.^CuDW9F@(-86Hl]<X926_FjeHnL"mR[X+p#5]F[eI6(IpeZtITD80iE)7qcJ>(15C"FC^4;XTXfm]=]J,R-\%pi*g/!\plJlu*1-_@2_=d,pcdVa2mMk!.hlIsgCkc[<&MiYWMk\kg5bJWA!5s8(WjDtF))Jc::!:&aJYRr>/;MB=,QM#$40C,j*?%fV*,J")?Coif'Ffc`l1AdaPV<5Kg5M82Ps@L.-/i)VraU.UZcD#b_tr_8*8KI``D6r/Hl7BQJfA$bru*F$WXMS?J?QnpY2R?+@G%%Ko6X30R=SY1i71!eFU(2fmiPAK!qO8T;=&rn&/aNWKf%VLV5D/qj=G*A$m#]9Oo4ql.]#]d<N.XB'J\:=tTtr@ob?!\g.QYpf!]-%LoY@_e*"lN4DQ:ee,t/`24JDaBYI>\PFkhC)qe2HC)<c!l!`!&ZVPa02+Cl%(G1rTM<J_d;uHI4LL.Zcgg\fAE]<C1[lYV@gm3kl%X69E,h#;,q(<8g[T\A(!1d6p`h7pYd3X+E)2Ge,"`()^C.t;(CN,RZ-HE>l,UG<aWX;G+%09E!Kn],]-5L7V^''&oaVXPUS-"Z<8%Z5&.*j#<IMfUpiG@)u%#F7Qkn:U]0?c0301pVqZbEc(:,Or_G5J$_(9j$+%JYVZdG3ssl=?8@eP#&Wf+S`e1e/_D/g"`!?q5LhC$%PJ^gYL-A>fV/bObKhN-YI[$F1I3kb_[8DBjc.K_:qgFrLZu*Qkr6B,ap)Ptm,KZjECi28?0AP0g8UkjPIQ`Z[rQI6gUPCe(H^5e.%*f%]Qo)r`bg8X:WO;K:@"b.WFQb:"TGWf#T*c3L])0?hKCuH^`q-<L/_[NWic!06a*A+?Vh5R=">9Yc2r4q-cQWBJM3o[_=9C`jD%Nnc9"T$mG&1ZILeo4c\saH+O!U;*>+PqDE*)F94Q#G8LBgr*_L"rB3Ar7RVnVmoO%k>Ijf?LX2nfZjQS^^ZCn$fOjY9:eC'1V)ZE%H+m$"7mD3iGU8%E6\!@.R"GI"nhjhU+6!8ka7TOL7"t,K@8">e_l*c:PmKlc,<s(NVtf:)NrAY.;SR.bb!uYsp[ORBjY>@<jBKTC%Hhs61rCBUUepOFNl*8<WNJq1:4js:n&&%%mjl4U-Y;#p3plj`lF]'iN>pLOHr=t;UN)h.8=Sm;>cSZZEHF`5ZeQL\sLh:?C<e%IL%h7GI=rEj_7kt%nJ9m/E2\P@"Jh49u9ZP#Ci$h6Pfpo`>d3R,F\A1bKTXHUG$.T7V8n(Ag1J^dc$>Qj>2H//3qr):.,Em.,lQ<so`%E\cOr(1R[5,/mK_;9AKG,c6rnH_('a42uDMN_";!"4!sn'KZjd3[3=63)t.Sf$;-VjC))02gf2!;Lnk[.jSQWV%KHK/25Vk##i-U%(+.ob-CPo<53/HAJS4'_[&W^F=l1$\P1MLGX"?nj7b%knCT__?EeB$:a,Ba_GG[9%geuS'dZ'9<BhACM:^PtG;U2.>G.-PTE\[J1%E2P3n?B\BZ(X-VR/shISBKkEm5%0$&,HFT]%(,6u>.a>iS'`EE?TtT4SaVmqkb@J\3`q_2X1LXMk)I+:*ld)\GjWD7O16.dXL*'b%a7a6N7_AM/V-rQPV94^8!)W^Z"O#K?oa;E%?c>=pq`4Ca*A[2/[bO75D'&SBHW+%@M2D;+LsK-[,*ec\f$eZ>696BtrUn"WQf8-i%M*tI0`*cei>lR!GRRZf].+tk^:1/<GHfo\@bFQ:S`ZVOAQf1';S\O:??aTt01nOTeVQ'eA2#2G!.F><\ak(A_fA:[;i`"VLj;@g!%aO7tZNEn+bIsRQ_9XCs^7dL"GU,IAB&9Z%)%"C`lU/$_h7'1eVB0WX3S='WWeE7pH:ZqgE_=-;hCRZ.(LR^UGNgI-6*VM#:cgkET%'X:jNKmaCnE5l,;+7c=[Rp[X/7K,<[_i<Y-,O6n'0,qu:>5Hb=M81c:r$9[',[HE#(lC:S^(K,[CfK1-R5f)-C3Yp*X#&YqhL3)K%jjD77jY;KUENh1'E47slCR\pnIBb\Wb=VTII6/ZJ*]l&g&M4iImF?Xj:q1uNH0L"(F\1:l>R^]I/FEXMO>"(r5WF^BfQkR[[%KM(%q.aX5,UXZW]D=ue`f3HFmi?5NK*0h@]T$-)'=9C/Ef5!!C%ZIIpa_D=4X`q2@$)SYo\=f65m^XC4;9mh4GGed_r-*]0B1&,SHtd+%=I,^;&8u%3iTK"/Q@6_#5\"BQbKWHe&/^ugCPobXB3,Cj#d9p62F_dmA601.Xec`618LrKVP&/NCP+*cn]Np)H!d4;_sF.kBoEXW%8kEMT(Z8GfP1@R^O(q*3!Z&$T&1&n]!(84Pb<230>/&038lr1e<*trtG,bWS`&Jmi6h/qE<:H\\rjqJDaqg?4S"KtB(iM`cY=qtN%Ll/P*oB##.0`C?L9>fGdNRa+'.j_iBBmWELCW?=Sm3T<#'<a40>*Q-.kI[ZRAPO4bR=2A&ie?jg_eZM`s341aPj_J[LLm`YD1Bt9%n?j%-&rIX?,`+TlhFi./at*!Bqp^,SHir:"BjDX'3rXNF'C\WL;)1A''Id+_.P]U;[;B/:Moj*ZGOMf6A?Jhb"?^#O1<8S>eQAp]%khm`iYBa4KgP>MC)OD7FJFKW'nUSl6Yg7C#a+Gq>6[bPY4W^gZdH"D*>inq6c:#]#2YYU!D@IYh1X>?5WTCC-/B8FUQ/#Z]<o<]n%(59APB^B)F=Km"p4)*5hn1<l#L`HIT#Pn8`Rk&u,rRbL.S#B?.W!],l/e06*FJS=ThY]e=$FFfocRl1_a\VLt-eEaI"1\MX.Yjb[%X0D@m7j9R:!@mnjAFcU:.Kg,[1/OuRXN[a[Yh+:1`CbmSag7tJ0*^sV3uPVnGMCL6I8Y4s1tS=3h=0jnf461_&".#Pqe1h-%WKHW%!O?=24gB[Ulg1qHrGG3BOF'->ofmgX?!f`Z]6/aMdi+"O\KGE0OMC=RT*;ALiZj$0M8X'^-dXX!A?L,%?VZmCI0,m,bF]lZbAq=-%r<cZeM\o)gSh'i1aVp'I)n#Tl/)(Cj]8JagT\HV,GCS4n67tD#i;"bA&];a\6tb7?MeK2?o*WsBBRRrKWuC?R+nGh>cI2@ZUWFEH%gcf@)J0^7KINbVo5`F`W)bJr3FhX:TD=[npH"8J320f#B`KPGJn=UHkohBMs[,f?W(U\#2jn+4"<Y/?Yi&5jM9@-EEj`8[]q*oE7%AlF?.AbPrVD+f8ggJ^punK1Hf''[%B(TD_=2;7`"TGNpg@E=a4RVaMCYH5(q]+OH?6uk1\"3S+i2"E:!#/s]AaM2KF.iAWP?LTXM%j2.%K7Z(^E)]2kWhZE4A)BC[H4HOZ3DZS,-F)R/A'^Bbp,XKF$G@bEr[E6t2jG9/EfCcaQEO:OKGk,o\JGYr^MM:=AMbifaP4l0N%"]e&T?\]<EQ]:"o<,MI&F5I'+h6rZEfo`dkN.$q:T@Pq@+dlH<^\LZ\TWu37\c\oN\Zu8`i\sEk9M,EelVqc>@#=i:6NWdlDG5SR%DV&`&F.97?b@iA-U.V'&5n@dq,SE(HB5-QVhK'i1r#Q"!F,[L13:Oc-Cb#$i/)DhSDu&nOM_B;CC/&^Z*I#&'XaEP.1NGln6Nsu_%2-!b4EpYO:]JWs8fQb2k5WYgsC4hRiCfg"En']c=NWEM_H0i[PX>ud\dCA0%Ll$6Yr%_jC(Wl2IqcdeWEBlma6m%eZgD(T!eJh\m%FYEc_ICe-K"NV$Sie\teBp9_1iJu575/=4;[h(K:Pn_i(TO2]sp\&5^:/('L[p[X0Eogc>l;F+?XBjJLr)gYGMbQ0j/8On=MV\f+%9gq9<lI.c2iOQn_,WRH%<j*c>`\<frLW^d)`PuIZm=&.D,Gu]$?!K.X95_LIlQ['gW>+b-:Dq!Oj/@di'VR*s?oJ$K^`mE@-.X50%&VL\Aqn0q\.WPo_>6>u:B0?m<0)nsN`H`[Z)St2aIU638j7_*)0YOt'"(?tR\RkVLV6ZV?QK4L8iAuELp7lDBRYap*S'8(4Q8^b.%PTrhJj'*dmZao;?kcQn*J,)a@eAeB$BDdOnG<kVHG&s_QVFs3)T_J9W0)jg8*'=WZF!Dj$oQ;FX7Nh5(Y11Q^it'dYlkRS89Uun4%gfUUJM\U7SPB%g.H)P%TP;g%^J!O"iigSq55M;s[9u!2JDBttX8UPfG9fu@<Chui?,iMKIPZ#<]_Q*i>eG<4i<HG%=R3rIIooc?!%D\qh`Zr50J^*^J/1*N&J>*Kj<rP&U&pp"D&`gs6-mrYA6/c$MXhJD3>B-o@YiD1hA;-k$J*?B]:Irg01IK@#U\haE'luW1cp%cS%%RPWVWFB"aa@eGpnMOm,EP]C)5++Y3>^\L;S*T!WZq[65.Ze,++8NK,ZKre[\Fo4eFFD,XeM"*gKJN(fn=2e@Oe?ef/kGC4Fd68:s%NJ#fP374&>9=Zb%"F&P^,Dr5-21U9PXRaobc]e]gBA^[#g.HpQ&Wa/ih;Qg5,BTD+4)RO6aLQ[g1?,-$V*:$BY]VI-AC0FW`klig%)/Q%i&)nB\*s=Ma1WuZDlUrZ[nn&G\)Yk[b&<,d0P(!h)Ea`nb*XN0O#mE9(_u)%j3^@1i3pEBo=I+^#,s_2#S1;UckG%@u19<dN%Q!<@i47XFY!PI#o\-#k3h(B[T4V<mrXZQ<DlZ?qY6_(/Hp*Qi!n:d5nYlQ3>/9=3%;n`L2qBAPL/fcQVX6X-,Z"Jba\d1r$Q#:c*%pEQqciP)J.ME]c6g9GCW5P"DZp'SDEh#:sim9)h_>9kjC'&IVc(1o$*6/5M37".=,IjlC_\^EtEQ&Fn"1a#\>W?'7V(h"NIk'[SR%G$Lb)+<pQaC2Ad!k3n,8P\+-.gnK86:i)ue7H=PaX?F&>j\kH=W_b+khs*Q243G\8_I`njr?ieuKbP<</P,5k:Q8[_s$a.@P0YFu%e*[DCIX9Q:#2_%]$Z&q[!m"rF0')23C0l'm8eu5^AS5j#^&o/M/_lWN?`ZRc1Ttdq4Q6ZQ478YFjIb4qXT%Hq,/otWI%t_#mZ2mW%N6JWUQUrVBX"YL"U[B]qC>Piiq7'gq<5Q(o3BoL"OOLrPcAKgS.AaE,k$iu97%tC"^jWob=2EHl&]sR/U6VHsjXU*QD[=`,9Jhl=%1>W4N]3R%%-eUL`rG?2ST7/$;mDYGXI_[NHcuT3ROjn6NmE*5V9O(3oBpOM.MdA$uoj%PDK0^>OO;Fjj-']"c7\e&Rj2Y(LROM2D%hf#7tjC;J+;tn,S@_JAE&GDc^Y9hA?>:H'>GQactHLD'O+7T1<6-?sf5j+0Z\VGJ*=XJh!03Q<jE`&piJfhPsAUZ5_.NF*1c2^=7%)2kFaqU\^t%L[]h@#M1eJ%-`0"E>_Y.R?V=bAn"pYL1YI-&l.^=#TkGHprJjAm4uOqI1XKU:IXImd"+l"N]rjSr8fZ`se8JPEc7s%fd9Gj8')^,:-ktl0%_!H0<Rp(d:h0(gjK[@jfaa42p1`r,Dl('#$1I2`VPJcT@3%En>aps$IE/QQ?*QPRS1neFc0dW#=N1#-C9kM%;]tcZ`Z7TCN4m%8ooT4L8QRF5*k8nrUPuJU;X/b6h6::f7.g#uh<"g.(g50qIdSLDQ.K.$&IGs#e6`O[:tKVG<?;Lu\/+4\`F68J%hE*WO(fHL:f#S@aqrj1>m[sZpji[pX?d0^[d>!7hhdH%FqBd`>qYb:$j2[Kf1ljLE5<4adU9Cc>E\.0hhKPdpS\NKV7IhU6)2UgE%l]Gr3>3)E=i]+^+ijc+4p$^ckbDpm4Q>>&WcR;S%$3Xns.,]rpQl,"#];Vb*STdXiTCl*m3-YmGFYUralV4UT#gZ/KAf28fnG,3a%.^rtNn6`R9CYk;mGkObqU6M$oH7$0tO`<s_+ja[+jLr.cOFd<"_'&'EYQ7_qgZQ(W04u6b85rcoO'G;&[`(PcdBP[*cdPW*1BZhH%Dc\t^i*S#G,1!t3R1%FfFtQ0jR,&N*Qg\!l=4Lc`#0T"8jWiHP&'kr\2im,?V'==+kLG/a..uai*b:CuN\t/q:1E#MhYM0JJ&=e_%f0W/E"ifVYb6+NMpVOk`[Qs0m\!7@,hr%;Ck:YT%j'[)oIt0'$>>PIJVuN"tb/EA+>=Ep/)OkHM;lqA&4Wls"+6DdmkN&DE<qp;S%SAQ`Q75ZmISIU-<h3k0lTCBI2?1,r2-AXhh6E0iM:j?q4I)6DW_+\L*#D8[)X'RtppQ6bo(7p,6HAHrQ*,i!A`Ui_)10H3#hWW8E%NHm`?[[2Hi@LM"&/5H'9f&F2cF'(Q60,9D_gNTB82\u/7=$qt:(AHS>(#cpq3q0YrQ@e]l_upoR:uUCbP\GTCKDAV'#3P@5Q&BV?%X>06*;=.3aRSI3#9$_eJ+m\$qMXdmY2[<&l$Y!Z4(59Jlm,7D-$0P:sAY%2%ETQ!XbgUh?1G&`14-,4&6dl'J@IYu=#8U+.S?o_4%*H$eeDh##o.C+u2;6Y:\nJ@*F4feC1NAu<q?<]cjnEM%sj[T#FbFiF&Yr41&k><"NqmQ$"XP[.6r:Aplk@_Z^n9e(//\[OgeQau%%YSK%_n$i5H?(`4?B/:V(3qT^VX+%G`_UR0+>@jCd=0I'l=/7?*J9>iJ]WMLTBHs7Zdd1/3_-cRf5q#8Z*W#`bF$o^iD2346J9N>@%hE74-J^;lj#,il8&hKeqkmrA;6/SrL4'_l]&=+)D)QSO#^W@Q[DJkl<5i:geg\6%,.*aO^^fI2%iPa!=:DN*VeQkNUBOk;M=Ohu"%/.Rl/Ak4GS51^SG*kDV&>\ZMA]B@bG!As`AkhE]q&ZD5>6JWHP9Xnt?JR4R2OXmXrn'lk#jj%pE")-a.?&7:]jj`H3l@'>1bL]7,%TG;CrIP^K,W1s%bV]XlJ[d80>(HI)"aj#3dJRTO^YA0F'#h88R;!/=7/&&L>okhMS5XR%*:fs'FcW"$MWrO'02_R'm5l:2Oc2+4:%Zoj9um?&LqC9f>Pb2ba<>!T-^eQ[6o%Q&=e@-g`0XTfL%ZMbuL:.OI66Z&to3F5<n!0(5i[@cZY3m^^tK.)4K+#$MZ@nKX.P1H'$%WN?N7in<1&!jtsjCf:ckbQZY=:G_=f'a!^T61B<UQ&0*)[fA7r<W[,+o3Di>fBZ65NO0Y2-OeL8,tm^5Z>?\I=ebFe$EF6AW;\R"%g#[WM($McXSuMfK=Y\RqXB/etAf'[#P@u<l7NH0uqd(@ASrG5HFt]&t5`nOmSa5*Y[?fDG=s0F'0/7UBNQZ0c1)RtE5Z%q1JUM9p%.np.2<rA5n(=5,4Zjp\*J:`XLq>?K[5=]Rnc^B>W'54S9gH96OI1Ho3c&P^''VM[<n!]H4QX\+6$M7ig]@R1sBXqt5>!U8!n,>6L%:fQW3bW>!t*)fZ;>5IbY1k<TGQKL?(_#j"2Cap8MK#6c@%)%(<$R)22*N!OW-Cpd`71XoTdn69?Y(nM;kUc."BGqh0HP\TF$8,^^%40!<)kG+G:m1KHmmYZdScglN&.0IpJZQfb5=)f!h`_l;7TGS#k?q[ZX['N"^2Mmk2_9PPpZ?feD5lD%_+:'&\DmWsM!MJPV&h#of%J/mUb-LQ<Q\Q0gD<a,n5%;$Y#%G=E.hjEokXbD9<46XA9gFcejpGW(/i7tRiBKA(S5.[l4Pk\M[1`s&J*ujZ+eYh09,t6V%]/OJ#%OlYucdq#(b?)g&C2(3f&f)/M[4]N)0"7S:n=!W+'6SoV0mkn-WQn-^Y0Bm0AUDh^.]%P$CoP7G)l&ErND*F<S`MYJ<m,DW@XP_M[%)>1K)`(.`4%W=4r7XB:3o[^2=e7=9rol2JoIIaDP*P6YEGtf4Hlq/be8m'2@MJkn!O8ZOcR`1Z:o9A:7OF#2e4O(L0YNT\,j([&m%.muGei_qkWDKFp3CM2"nrq>0cpCG_'\M]tmr%*GY5G7]a@I.n%]CO7GR/5RnO&k>8mo=e*\bL-W$.QZc[.jHNV4e[EqCdEc$W".2%rfh`>.rR&/Pkri`naUJr\[g)&R.^9(o]373A^oS6l0I2S0RN8-TVoN[Vh+b?o0/65_15Dh+WDc[>;2?RHVs/j#cWKpAPH=A1nJ#8%?.ijl?[S;K4&]pKCM'l0c5GrZnZH"oh_haMl:KF`.6]j=?b;:[kRP,Zc7SnB6EV[qU%KI/68,Yn?jsf;^0]&l4RF\S-UROa`g1de%\6l\sh#Yna:'j0=rR:(`'.geS&i_t%\_Nu6!qtrGQa=[Lqpe<=%F^Y048)9LG@tmf0GB/J'PPS`Xpt#tr$bcNXS8Q!M/kf.e,Ti1%nM6KuB`ROLC'$j%;R(m4k=S]'FB8G\PQ?bD07P5$G91F//k>Ac#aD_LY+u?;cTXmMNbl-s&Z@cOJ%X51)ZE4U[T3Kf-oofE9'7Z/%H;U7FRR".HTE-liM*-QEW;#Cp%<_P/5V#5h'.C:Ze:;Sj33l'r[1M]PS*>o,Z)4<%C^gdoJ)XNoG./J0BSh['b"0.&k-[Y*%f@-.%QLqUEZV'9^R^F\S,\:5*fAgi5=3M[Xqs^S8m(XKu(7nkY*+*DD!1%Odgn+uu$/fcB[ZKZ<b"XH,Le%>HJK$uV+V2IaXO:n)W$;Wr%?GaJXo)<R-BLRD'"TU0_5TYmHX[p%o5@r=i.#GfLTpJN@XHGdj(CLl%igpOUM9T85?ee2BXuKsd(:IE:+%-Mm7me=#K^kfs9R78O%MC=]u^@Kp.Y;RYZ[OrVmp5g-9+dr,q>UDT.%uX:C@\\_nZ:JnM'hDCl3WAUmqW+0]YF)"F6e34Rk(j!/?]+^G(X,!aDHSus[t:2U%Nac+O89KAQQi?iL%'Ld]Z+W7.=[H2qBFi_JPEO^^,^*X5s*`kuri)-i,5YI8W]o967PX?rKl\NPO,u5,N^f=$oQ35h;=l!EO%*?"%0<CuMK_Z_")P8=]oYFL[%YCE&/goIIh8U=D._%"B2`J=C_33W,rk->t]fT1t69]Ks_Ne$(Xico(c)ClMP4aQ_.td+l\S#[GQhqA3%1N?Zq2&(Z-pE'(Sb%\c";CD1@B+;FMVC7Io:sgYcF$]^Q,RcuHHoAOC/mY>rjo*d2@PlJaCjq&)EPh7GJXGT55W5@&G&-,_>k#EU%]&M^'L,r9&h&rq"Wr2ib6ZpZSjZpQGQ\?b)/*SL.fK\.pO\8_%mh3V_GbMmFiZCo"iZPZ:D=fK!8TnH7[57jWb'grbZG`rd\,sEr%r+isB2G#H`o*uKc9Q*L7Z*e%4i8$n,;pqsVW@E9pBY&d,;q<W.F=]mi>pS_tWlX;eY%$*j?ZdpF@U%7F;ccX^XX=t`^nRlq/koA'%6iZ"/`@j&jV)TC<+UNIe*Rsh[etB;mcPfqN\Nu!mV8BJ#D='AB^MNkQ8S;H07"3Ni6!@)c`tF#tO\oa9HbXY<b+]W"LUd))<+cCa%h@R^#fl[O.9J1*V_O+T&*K2^*Y/LuV+TKm_arT(`@[3*C#`2aO&F4S)hAS:c[H,u9C;@XIb\M>oTt9QH+3g(7C>`TkY8_GF72fZ[%F&fH.Yo\Q=[F(ACqkSlGlr7-rI9461Ypm%\Rb9&&p'q5QfE!Urk!8R8JB8p/jL40D"$oak./VY'iKFe(:0"EaJ*D[:8;6ZS<..,W%;c<sB9Cn\eG`2Jc)VB3I2u=dE8cW\-_%,mNOFpat+DAZtLWQQ$95qeUFo6eXiWXju^Md3Sr7i,#!'H8*$NQQdm?IE<r;@SA!IK/Q%dW^IGgaF]W(&al"=q+\"nA0L97d%f\X`[[KdTmq-cVX;VZ,cT[6]B-FmWjnj`o&>O$U_uB+%-OY':0n9cJmHF*>U#<>6@Wh,.aQg%+fQnnr:!eifZ@4SBXlSWd]!LY,uBt:?Qd.!;?g]4VksaA*]u<50s^4$iXb@/2ekEh=Z.doeNeWeL:jGs'Jk)"E^Dl7,MH"QdN'%r%$!tT#6Y^;fd:.G7e"[G14M!Ce9>HQ[`(!N:a<D(6;]=b.'5SXX1oBS2@sT3s%9"1`qrL"jfoNbV_@k]CND'eeED%lP\?=!iTa!sP%<J-*7')*dF93nLtj\ms<%8!D7]g]+'%\n**P(T/mC[gs&.92s?XA;mtXQrJqB2ATLoKGUc^2Tc#>8H0EC5A%4fs4A.>Fo"/Z[-=9%\5'='HADq:6J/6t'CtsCB8qN3?@@\bWpO1Hd$`bsH0p[%U99=$AT@h@RGAo*MjJ%RoBW9KoScX0mR?D1b'$2alpmTKeU!?[8h0e0%[St$:d\BOf__n&UBCc!e/aG`u1IYEYdU"Ej:%Xpha=nVGpHkDkVf$\V8j$:J9cqnK5##""0Ii'`Mq%[SP@uQ`M=u`ORS6m+/^^.j%q@_%``0s&*jW5RU49CR),L7[`Qs&?h9;qn$6MobahL@YG7!lkQAq\1tpTmYiR1/e1L:p[D:JZ''/5&g/7mBL4lF)4j_30JgK9jrQ%D!OpR9&YSW)i,LSi3Z.>e>8K)E+I8EbL8ap[+=(a/El%3\XHflXQQkREG%9.6#5r>R+$jHF]=o$"3`<!(US'KpSfK"mR:j0alM(T%rTm+,;"UJ#LV`p+Z39o^L=iuQX)!kK3nk>@gW^hhdtSnYD>7q_X#:jFL@;mT6oK9O)18MK$I#GsO1J4MNuBie5T<%&L=lgr(G-9a%?Vjh%C7f.?$W#A`cTBlLa(_gAKC!r%/bXQ-qu0_s(UF&>J_I>XE?!886T&/jB%q'96^/;Q;/!k<gm>]GJD-=;Mk2hkVG;t^(n.eO%3@(5c%]Kl%,"$*5/<HnDf]OIukO+#@&46f;NRgO^]+^4/J^+\N$c^ii4O3&HVTl05V5>E'HaI,C=so_5/^fO^V9Pe?QqO-=I%4gm%=%qF+KmSqTM:Ibim\k]\2<jJ>b"R+A.bP.7_sA,Z^Wc=u,NIIcW3]h5Wl;d1%I.\<4]@$0CG;?][5T4891-h1>ZVFS54Z5AoBR[Z%8h%VqA4T$hR"o]ai[YfG'$US<-!UVFTZ,PnBcaFO(=2_N)qDqccoEnqK50V[Lm(:3*U*I.eBmG]d$^uuWM.eETL0@S*&Vj7'm)^_%B;qTRYFre)`>NFSoIK-%[GX&[kZ!*+or81VX.e"GTOZ=935(&A^OhKHI64uo:;;C@pFK(AU!p3<;q\?:WeO9Bb%(Q2]%2bVZtsL[%q&<5(9tLl`q^^9-HO$B),^Q(1Np+SnTOR2Nr)J"H;9NPs-e(\hJ1K67jH?j[$HM,I^*h6#`00a4&iDd#(&`$AREIiE(s_M?]$EiA%8WR%VErX)q*Jfu%7d"F<4`HB"Pg:c+pC/S1Ga6>FO$^E]!;R1Td4:YA=>Ip[X-boK7Bg&.I;77Bmj0!9%&0'qnlaBL)TsA=#/\Ac%YG"i<q:(Y:U*Y6Jh.X'_+r*Kr'67HbgRaCS,E^j2ae:2e5#'Ac2i\`G%0r:?,#Y_4,D%u*WmEN\dic:rZO"?ZXgmI^7!YD#DHJ7[%04+:7*/rHoPr23.ECB>i,1D"oBE=kf/j'qMhnH1](gnV.-ADt4NU5L2PDh!S.j/:pg-l\[lG+Y_\G#6tNMb*GE#kSM_$(aO<P=E2%YO-JE&qa4G6eZ'co%aFY`J(<Zda!E1e6!Sl_>)PE1Z3dE^?$EBg%bEc,+.Z(jT1q>3<b!$MY4s^GIFD;B$[t4]:tSh=nRPD;Ark)%).VB7!CpO6cVXuEj5MpOcSSLF-e2ppeimHZW%EoRs.m68KTTnjFk5>L/S?ie`En,E+k]),.j$^<4kso(fu'N>4_NT,cCV$b(<C\Q%C^.RfN>O2r`%p\eW678^690>9aPIY0mYkh+4B`U7<<KnK&"bL<eLa75^JY^c#H9Z0DGf-c<<IWODb!F"@R$62%pP1%)Cq)a=<0J$%]@(>k/:lEMAGu'R_dNph5\f`#rnO$C4;ilaeZm.)j7n[p6^qA8MGurfZ6+`Ic2?XpRfgPi`[^#Yg1mC8;@^fV7)lSMhop<683EkN%fZ@E^j7/pK'W2t^Opt#)Oi`\B7M1ah?H(OM*h=4/BpIkCocq<h8srpG>=<(#;ab0'@M]6K<6;`-kgZsqLh`hXA5EjVQO.qP)4G;$%LLNTIrFKXi7q<AmJ9"n?NWLs41[PX;k5]ZL8#DNT)HiXZOkoHTTdK1Zq_I:*N+MN)MKSmiR`*DpWL>I_a]("[[F>^O2b[-pYNqXf%ZNj1kg<!t=*DN6n]$YT:9NM,'\s(GL6^;.)S[5""W2n[>X_/c'&Co;K-m?u2%hYgW;/r.M&9Mi1SK^oA+CEjA&1C2nW'\\$?\`$*%Y=t]4m_JGjNi\"7hb-"S4l#9YAu$Kn8;?Eool+`%Wj3i:h">Uk<MU[A&#WG[GYBEn`fN1CEK@Ih;`u+9opnpZ@Ak6mfJt4Tf#&rg%V5%C&G[rt-oRqCm,4=N/*>D*8.X\KGlc%$CF-bGj*#'ttU9J^[n523.SE*c48K:qpVIdLmG-#ep%RC@@Gmp\-J&2('J#n@"(V0.=%<@;[WT*($sbt9V<O1*qncrm.tO8(O`m=<jJ):'cOGqVr1auS)c(.,VW8pUQhhHHdd%K][j.&,"Y$uh5he7@dCHZ?>KrpjULNRkGU%OVU1!Bu%5^n/Q6MUJ\t6N]F_(mH8_$>-MCS5:;ond]R*cbc%$pGeanIBRXhf$k*$B[jKL)/etBP3_)X(qsW2f;VuuM=HWIZH^9Og%o"mrFc/+?-rl)#&A4HapU6M-;<MVrGLK0LP<2;iFWX"D$4;q*pOfE[8oY-D&Ae;qTWJVrGp<;JYBgtuY9K5-rCm]2.4k8=1)kL"9%\"gqAPu9U7FZFXpSB8;$IR5KR)TL'0$>7G`e.>m)9ApF.)]@.>V/V<N#cCJ;1u):B\(<;JC9%_+mFph-:P;5\Fg;,V`QlQ`F`k]I%CaA>@[:b+ac;)#s6B$o!c3t\'BWQMSI`/JQ?BP=\>k%Oq,Nl+Iqir)b!G*<c/")$S"585jF`h_n3'7FGL]H8;GK.bHGphV^?]Z-G%^Q##-fCDj%legbB-2R5EGMO^na?n`jHS/W&[<=:bDKi6b?g\2IWjJFi]hj0'0962.oL4mB7QB0RM^L`g'YE14V"^9+MVTnW\h.Xk%8lbqX:))QrdYOX1f^2,6mL7pq7qr+EQYL:97CQd%CUHC6MVWA)m++I>T]f9j=bK0Q(1!t(d40<\l4gk<_>ss>Gl\bnO"Y5]08`aF%]:fTfk8JJU:7Va(MfR]&PEs@#[sG'N!Anh2%G_c6[#3[c\eTCRX,,nCM9>eYWs6pQe_6PMp9fE7kha@(=+AX&=t2\$jeR";*`p.,%i[XK,Y%tdmoefnW$\X'PM(_pSVr*N8HZ^]:S!"UgJQ[1a8lJ^A_GO1."hgFQ1#(:;Z2]@(YZ%,??Sml$AFpqDCBI'aX'YY!oTG+/%%MLd+g/Ci1PNq=9*HRF7Re=kDa3JsoS;KWaZ=a[5h'?VM:\$m!p?#WEgl!L\o_\4UFROW>q@^?pY+A[7C]*DEb*@NO?'E)to(Lir%Y\-Knj9c*6=>H_uOEMhga7@Dghg,%'A60qOFLGpF[1UP5fQ1$@WVHSc4&aF%9rE7Qk?4kMPZ'pmkPZc(*a2:9[9n49C-&a/@45cj%VE5r9I6]Z\Re*5KjO:0oe8"4n]RQen3ji/&*=6e-24^2nbhABGXJSpsV.97+cWNu?<_J5B?I)eLVittE`bIQBe\uRqXOVF)X#m=P%i\5#FVGl0HI?;C2cW!W:[XK\R)kU5,-X4?^Fe>LPA2To]=-=5qc;[MNA;BpOC-#L!S5)'T`qJ)=#@YhQ24[U'SQ8H4M]?fGFE/sV%NbUV_=us'\nkQ6_;sQ]2%<[D?3ji-PopV"AWp/#LB:TtNNi]+ANIe.,e%JiTW+nB$("1=65.[1XQu:FcmiP\,VhPV^SbM0Fl#nGM%4Oa:kC-'=qF<*WKMH!%7Nh],q0AcY8-@8DpEJ/XE&m13\6NiEm/J^BK_4\HfMs&kD]h(4MZ6pT`o=d7qpEo7AYKePf`!n$Lk!'VW%HOUA%3@$Xe\LDEj4a]f%c#;O?3eM"%0I.BJd\ml:LSoP9J7;%f&dD]gVk$G"fT<%k@0uOujUnKY4>1GiQ(YQmBdaC5fJRkV(mA6I%G=oRP^?4k1HUa%-k0Dn%=XRNsa7@EFMscN>dV1%!*0?e?_DQPcS1DjBmLG(OWEsYTkGAQf1kc%8\\l"!haMb[c(hu(g_i6k/spp+%?_0dslh]<"/2E'/,K6i5,=XUc/`A\"Q=jK)A7HIQ:jF4TG!_2I>jM5877GWS:AsNdU\FJ]V/RDVQ%fik7.I<m-=kq?&WFPP,'7b?%DFIE<ThomP.6:G2k#:W)*EaM.^20bA3O>F5-XZ1sZ)u#l7oVZ5%HTjsHBDjqnbnt_;p4kYW&uYGBs8]H,cX6"8T^QeU.P'M7-?Q<%CK1im`k(_E^Bi5#e.5-AJnjh5ZG+aX`<gW%0Qb?sm%t)kbWY6HEZ%3?`0""X+ZQVmp6npJ6Ogft\YR>T"uWQ43q\MJUu'CAKAk;E%N&MS;X\M&&!+B)Pi6*R7O%G[8F'%gjTq-7^Nua5S$l.R0#8CrcVsj"C?<FK$+s$n$.dorNl^'@H=NFnMF^ZV]h_\dAh6RXsfhct3%h3%Aq#MsETU$19OGIDk!Fmlh%cOG('<B_IP_k$@q]T[Cf<,]9.p85L/e0PEFgh?sG2=!V/\fqTSEd%!_GIgp97LO"RM`h>&-HAkE%r)chneh_9UWhI;`rl%,80KAd/kN@KCVp_Pl4@`g3l@kWhT:0hTqUt=@RuI#]iZV<(>,$Jk<T!eg-V*^rqKB%L)nr8i[?Prb`n3!(%0NbV)eRFt93Bc)(aiYZ(ZKK-<SF,5pkXrg2QXe8/dH7C6",`K>@E_R+bYZ8T_Vm:S`hZnYAA<TA(<e2YqOea.(t.A39JSW*1^sgV%mnSjX_700amp3h-ofg+X)6\AqjBoVQg,gO7f!lKCb557alnRNXXp(Gk@W?\g=Q>o%kj6s.q0"IC]eHg[AE]mQh$k?f<RI3=J"fU,%Nk4XU/aETOl3u9-MVLl"b<<%T%LHKU7MTSt6X&.e]hTp./\[O_S`4FAcK;-h:9BWP%1@m&^Q-`%gM:-c=Qf7k$/)bEHe9Cko/H>g%\<Q)LkF0$[6q^-CHp&HVQ]rIJ[EA!Uh_&]eZI15>e#rUY0$5ERgj<&NrcRf+)F,O6Z77RTcn@8LpqA#$&">L1RB,m"[Y1+^J1=4@%68.5UUdjJ'"ac0#,W78(9r#1)Ue_Z&4-a&ah`.NW[iVh_\[fH=ec%/-$P&$aWmf>uC26Z',EZ>tAU'G7Q/g^!M`/r1h-3;K'^L/W%_6V5lPsFe^<Y\`#"-5ZdFIl<E-WCIG>:'gP(j^*;CZfN%XDCO)9f=1F=USJB3*kCdQ)[b98t;0tmi+oiFRPeSf<VN;kE"k]D;L0I%;IPe%'(tN3HulR[pDg`60I3d=.d>WpL.[s-;QC;=RH:PqA89Y4Q'C*64;1U7:N@]SUoH7=WE"\Qde;d9)P\[gl:t*Ca6*(0&'E>;%l_6>:K<kK`L4k!9KCZDAWp[6g`!>m,L!n2Nbd+"solH?FK_SS0ii;<IT,_@\hWnh=jC=kU:Q7I&m\eKqqpoKpk-K/MGT!CPIX6D.%ZZK#K9.N11COYi?[2<&t3J5CL`MTn-BMI'+<Ii*S`=0[n:hSL->)'6Ak)JXl@&:(on@``LrE1)'0S@17>X%_@_-keQIp)M:i55Ts%kRb%Mc;(*rPDA3R(%u/D=TUm#2pQn>FdnEIB&nmV8b6)$F(?HI:8Z1Zq.$=e7IeBeg)Y>dd9,f$2G3S2"%1YLFAN<iJ+0jl@WZ]k%Oj!V88ibqS%4[W!+Usb>5'`,#K5f"m:1nold+UQ6Xs/!IKR-8(j-+M5n0EsTkJZ$0_Os7M[eGq,j-'o9?u2`G=CrYtXMY-Ye2(5<%n;*+=;,?8qA#]Ngec:TYpb>d!C?oLpSntb@ctEmHSf?>V;umo>!E@0q3hQgVF+k=EB9dOa&#]OdMU,R6Gt8[C#(c-j!:KNBFfPKQ%nr]!6!ouhW1Fn1PKJ)@r1Ef3al/0%9D\"/[<c&_hPY_<)MK<(GLK<;0qR8->PMVYump4)6js-Mu;Ehuq\<AQ,PFn]FDdCL5C9`9[%;SG<WNU,Q&&UN'7SKEi^%<_0RIKuAPFi(h@!^,";rJiuZC?JnfrD9M3eaih9qWZo&G@I/,E3Go5XS/1oAb9:nr<]%XCa`8%GP]uh%qsX4,cWO,r,bC/\TREl5oG4cS,Rpg3l?@J!QhnCEqCr579!2)#Oi45-p\r,..tr?K:5N0n^Xl8rl433oTAs7mdkas_h!8UO^@Fsa%Iq[['VaAKqh<W)tm]#+/VeM24Gd$!:<G=tYl_d_ik#^2FL6AIA3nn^-KqU&2"8DX0TWp<.lc8ao?@[CtI=0)64LP(]:?+UR(MO.^%HcPEUHi<TcgpHKD3:pNArULYB2rV,jrUc9\`1)]\]@TjY<^5to3UC':rEK5".Y`tpf2(9De?;J#I]oC37R7&fWL`!S5CQl&\,%,b%qqCf@l'h]'p[Oe\pTS_>h[0&I*H7g)mX9J\?Ht.XlDM25GMp/`\j<kXWd6kL]mfh@H'k\r\_$;CWjJPioi#mkr)Q$lEbtchI]$<.%`p`TL09]p^hG:o<:]FJ16gitrraZQ8I=.s!iU3gsL^@'2;i\H@:]FJ1I4+:s^"6';U"2?bnA'DL2!3$<lDNs]*cS<T^6rId@d&W=%*LS6#YBiD3?9_RQim+ZTa54j\R,$3*O70=L=fl"ddrVZ;p\LkCZc.S9PI=Dk@$"<EiIu>D:;#1S5HZ:mL$#1Xr=l20ACW*9fWk2I%l+?=0X.bu[^%_Bf]BsXA4T8[%?&V?nofL:!Hnjj#o7!Nji%fbbT><#&F4<;YL8"0S72F&1p\G38CoW8PnYaX(HEWs,..Bd7f]i/,%l0m9o(cte!=oDC9,Aig=Hi<Rq(\CH-3ojU3rEK5Zk$&b8C/C*<Y^SV-XHZ2q\"ao]+mlM.E8Tuq6VQm`X8'oB#jppF@7h1$Q*C_)%_F8$,9-2!Vak5ITO9WA%?l$-e>:..P5fKPXDRhEX.`*`s2s8cOp"OD5_++?[Dpi$,3l'f-XpKOFpKA6=i:CeF(QQ"nDj0k6^Y8DK%<@Sc.A_sRr0.]%$V^5Dnn6^9%,DiJpo4?<1>IGJol?hoXZl?cnk\Sb9A7o7nhfYq>O5IWPJ"PHU\it"]hbWEr('![pWE4(#HG+pb%q9ofQJ7#j#\Wc']q_c!ZX_iiaVLqs9M\WYj>D]ELV":uKHud9`[uU+LeY5?gXNMe^B+ceSl_AK9$07RsGB+PC&nN8N-H_nB1/YSe%h%>q7h)A&(1L>D)S[P:ts#bK-1j'1-BpnrP\Z]LeDeM]n\Eo2'4[j]S1T=Xmr[+HkNjs5JeYQtl;g^1[)Wg;?oakI2afPqtO.\Z9%qk/tN3>lR]5@4<:fk'6inpFM_CX7,"jh#QdX=p]V=E:"B[b@"8a_Lijhctrr[bHUB-k:rBH7sQ=%GMDTKtGQ6P]+2MHMZSj"e6*r%>+2ggRgN'eq6J:WO]@;K`KRiWCL4[2;Udp/9OsmkKP_G0Q(IT^:Kd_;<QnGf_koL:ION+3;CO\V,kAJ32E/;KC@LW]%H&$Zf0I(9%0!R6mn%q_!SfML"`SiFqXP:%UH?2H>4qjp4[-oBii[da?fl*DM^Wa?A??P<Pr;BtUdd^Be,JoAq"bh68RKYL.(I%11?eTeYIVHjJ%&E+.TSG4UB/A$M;#rhhjm/6>\?aF)4lN]e&n>G2E.eQg03T',?pbP"R-6!^=7U9Y^BsP#Hoao;"iK6bg"&H`o&0?(l%j&iTnA$E"%0Y&54%gX$en(#ZAs6.abk=Sbn(Ob7$\"oY=Vf*tGn4Fe('*S0Vc`)Te*J"Q`(+(P7NAL_#LB-*'i6s1JIIG18aMF<5kB,L+"bC^u%UuFYK_qb.A-Gr@Tol<jd6fZ9s[>DZ(SH>&7lPk]:'Z/`Z]D]5+=V.0K4SX3;)+b*il1e@/K_$Z_"QjQ:aV/lIAs:0^Q'<CWA?l7O%H^JR).jt.d8,n]7WqD-m^I(P<,lO''b5I^',O*7q>qYt.Ej4?[Hu3(IqX)!#Ef3qMajm#U^I7W"34GY#5Oi@mWIP.VXBm,Un<p-A%5k4N%A-p"1CkfJro>^k*C&@U\R6=Aep3SlI&*YlAV<mlDAU66=RhrX+5dh3:HaEB5[=MJn)Ye/5K:o#HMO1)TW>rZhs12(L]i[/-%(>[a8O?ilbnF!<?-csqsodkXHh<_660:r[3T3_6idu0M$FRrs/&.Tf"+Z8Vm6^+[>@*_TgI#d<GaQFhm-OkK*4mpbI9,40#*Su'.%bY[t@V2g]qHoMUgfE[,1Wd]qhA<gQ_qun7^DrVpjCe/Km^Ik2M=UO6+RN$9.M^==7'0YTc:EYQ+P\N5%cS(Sq;us6V&B.gf76mUp%.5^m36XHjN;7Ul?o)gFl#Z>DZ8urEbrQ!T2B:UT$e7,)5@C;D>U086-_=eI!XFf$^_M]\E0WXo9TEZR8OfGKB6LdOSP&UZ&0Nf'Q%V>[Zh.YUp)JRVtNg+8iaT8r$5(hG8,f0E&>_['i/=B^7NBoN=<ZmA,i$^3\.+Dh/Bi]\YG[CS":8BXoh2C>ACPgfM!+(BTeSS]>Q%_;Mr[bo=t3quLib\4MgJ7n57HRgs4%4jhSpYqYTpfoSHF<r&'.7F64EWft>U#l$Dc3p`Jn+7b4Q]';AiP(X9K.T5tiNu^e7n_4oG%#Ca!a<A<1FDso]&,Tqm(?L$A)!+V&o&c>,R"F>!h,)2'CjB^F$L5bjXBH&[LPck0rY"2-*eu(cF4[-8VgB(`Y9F2!gp#0H&-ED-6%Ig&)jNIApa=)nuaHs,fi?nN0FWMecIK%PtlPS#W#`'G/ur.2&`@2o'"?3?1Lmhd*pLNMWJ795u%K7NsU%l_9SQ"hEU@f`l%2G-B>%>P;asnjm#BJ1UuMDpeW-S-dnSR2c/_I@V^cR>3F?ORFg*'>P.)Fc^GtDkQ=m/:eRXAf*kbq)fa0=I7fEVEg*4m,7>>Q9\YR5&ZOF%oWiCt/Xa2"l:Jc=g6DiVng>)i?MtQt(L>&)OqVt+G.%Qq-#ZA*lj%Nq/K05B6.h\T^7Us5B[0&,YZl4t5OCW9@5luF#3Lkhhq5$\%6l:a[66(fg?NtH/.0u$)\NhUS(b5Gh0lO]:<dLeD=/R7rKiOB7\m64o%cI"V-EOI8P,bj.1u&p]XO%i<`4=l7d2=UHHl$-jAJa)e%lPFrefTt&Y8-MRU'E;[TmNQ`A@>"L?8,aJ@M)QI?[\R2^=(PqZ_4*BgMmiO+P;$bj\8otCE_PkneFHII__`eInG\)+Arm]+ML6H]%pY5&ONQd'[@*OX@Fr_u@cC7LhU<DcC5.g[D>=<A+f>JS3XS;#$]Zhb](4=amH\>.VBaa+.Hm4@BJodmRO*>9)([+.dIZTJ??^Jj1%aa+\ME8L*ik=c/L`5>(Y+N/rEYG/?uPj><7e3CpkeEhjo6+=u;8Xq0Rf(eZnqcuBJO$GV\XuAC$i/\KPA4[#m@/.Rs%cS9'e0]:=%&0FA\U4\imQQf1JP2fQ^NIc*X62D;=+P$AUD'-eOKUqe>fa\(IH_H'&9Z]U;_re(E(T$l5lc:fbqoEsS10^#@(`e6N@<XepSu/@?%"`b2M5pb_2*%B\1i^6$1;P`W?TgK9q-EC=2ir"XR513CpU^Gi?NDMZ-<l1f@Y"3S$[FcN+TU,.lCa;G3:eYQs+UC'7?V12mIa4[R%>2I[mV2K9s:n[BqigtqJ(>m+&X2R6oh8(3%]uBs8.'fJ8ds9="hBj-VGC%iEG\chFn/PnCPL\Y!PWKY!0%dISDI8td(V02rgBB]0%rV0!`T<-#\)nmM_UWPdn`k7r-;[p,ZdCWD:kNVRBg5WZLB[:]raB]o#*0oU&.,4jF>bn(EoX.o_Y)R6h03C#i]Y8GuZ6&7:Bf]<d%2f08u"?X0'"YV>te<)uW%.k<t0N]sA'^GaW5*QVo&/9CVZ2ofkZJ^_<_Tn6DE?aYe7KHU1:)Y%_"8@$oFp4BH6jT=9XBQa$nZuYU%r`.pG$O=Di4C!O>*.9Hja1;'&V@UE^bf>=?aQ%E;OF+>\Q[Fai]uF)=GWltt_!-8ikeqm3GrOuq&eTeZ/9fu%pb.[gS>e)J+s+h?%\NWk)kESQXe$#/<KK#a$moD_Nq$G<]]pRE,%?'3[a$=U)o$@]:Js-a0.h6E1U=@JgMi4NFZ:WPi'!ZRC]P1YK->V`'FmtTea"Clc%`Cja-oF]>l=9c$q*smjBSo1(XN["i4%QWj8Vo-g`T_70]@R?_=^f-8XCmi)Km/g$f=CE]WH0P#C(lQ&`cZdJM7;@H1L;i>nTIs]f%?,):n>%>Z7ru2X3iOI0B<"pc30m_)d\_'XVpK>Y#2teLh"7mPo@rP8;`tq4uA)M-&$05HG<=sU6s6t,gj/n1DnS39+niUrAO>RP;%Ed/>lU.p$rOLPt>`t'H<+[O;-p[.Fd$1PASnL>?%CY_'C:ZA_)L(G(b58Lr$\21pA4HM?P&i#B271"UUC2(.2'L,H=1t,uHZG'1f%Z=dF-J91LK5af"lGK(N1$M:b;0i[3TkJ#4\0gO*0)!u'B@',;p`%OmO(3mS/A/fqW?P80nTSl(`#&`X)#%**+Zu0e+W8p-r+/$oR%kXr'9T+pkA+KtZ"R!XkViQlQQg,UD=TJ7o>/N.D@^`b9mJ4o]9^tlj7Y&f0R"*)BL65'hS10GF%O=.*V8/0oOebmn4-_!XmH5qnI%kufeG<6,I(\]\2(4[&896ru#9OClQ_>o_)6!ldWWO`$>2!LlN8!?;RYk$1:c#<q7_i7oBI+-h.Qr$'IFa<B;@6m!%)G(H62=?>ub%L<%Z#iu%-jLM&9TM\CdO<dF23e7l/hf#6(%bp*N.PC[JP;<@'n??R$<\Xc.El"uen:fuW40Ra_C3L`8G!KRCEUt6S`"_-sjO250*%kWCC##+(:SD]f*i+7KD"ijs7*KTJ,tT*W;OSHH`A)MiRrBEaNbs-Q0Hd'cEP"AdW8=SR7GNB80)IBNl0mbUDUY9I-B`?,Y:7=i)m%Z^A8L>_5?]Akg9BX=-MrT.G8>g:Zp/k[DoUb>Mj^>i($13(h`*#ml)2/nj%]$%hY4OC")%Bd)Y3p1QB%_ep)CaJ&`Gli*V(RR%.:%+P*m/Ou\/;\)=50>:>#21Z]<2R(*g"3J$oKG]Q24%1S#jLg4XD9NJ.i<#$bV%<7q;F1Vb3A,=qIT_XC`cPuP,NtZ4MTR_ZnD'f_F%`fm:jbMjadq<UDk\i^[INC#=?\_.]u_1YJ6gNf#Vib%8C\k9;@!#"DKrX0M(dCXkiRY)eY@BYfY_Focb%2p*lMc`$uQlsLI\af8X%TtNqPNDC&L?BbLn,@`b'KWPXNY(4;S$Ag**-q;_.[kbQM"+gj4T_U[[k]+EoD,MeOl"<H2oJ2n)Ys+J[G(boMoL*C/e^E)bj4QY6%]bL!SVO/1&-Cs5/;B0Oblil4YY(<He\Ok,#iU=F,R6?+>ZIpEVP<r?j,#oDbEOC367i)Jh"<\GD8FC2V#hm"i[fE7"Npp<m&RaU7%->7b/hlu>5<>Qcd$BJN#^@1CqH*+mql1kfI:m5[VfG9Q0O!>i^9?!qSVdG;eEZ4eWJkjRlo31uZMLLlprC[$o.nJ_3A3!_KN/;TQ%ZId0X+6+Y_kcT06P?FR;.WEGqJiCZ,^H6gh6flK3-rq.0hIm"d>@9,&T3dpg.EDTfF:*9PJ/QOc]dR!*1#XBsD#2kC3'0C2^Q282%K7%urDkV,6P16CN>kj>DS"-1S@7oRl#57M&%:0=k+-]6;;=ngkEJoQ$Z91K`b`$WYhHmI&@Zh#K>thKE+DWUV/E*I,Qh<aTOrcX(%QWRH44/N'/Z.6>Yd,)9?kFsF?OL.h=HrV_,T]CX(SjOC:c9TeSQ43EBJe?6#UjI9U719gj6o;>e0C'aE/*1mB._\</kcmd+<WR<R%XWhO40!%6+E1df+k1!\n])l?UI#Zmnk0itp$B$q@A$;b`/`[;]=N:lT$1!Vj%;V#EHmc1PX5t08M&0R%3]9[ilZO;h:P2`j;@P12%H4rld$7_nRF5aZ9!lHHh6(=$'5XD.b.,J&sK`">N8"mMi>6"J&YX@9"\S2B,H%&IQUTZ%IThkr1)MGqql)+V9$^(QQnu"j6*"Q=5%*sULo]+"L4i(=U[](0>)JM]Gd)B*YQ]uEn`itfUhC+(u]DmCEpN#ZPh8GNF*]gfnipO9V$@^7%cN#ZPhR&n;dOd\_Ms*^gp_FAk-%7ZEO9;^D!N^_B)!I"3qlUa[MJb5K>90iK@0<L=t4=uKR"73casDhn[cPL""q=_D0H\jT1rKTJt::;p3k+<(c5Pt!Dd=!;r+ZiqL\%aM`VS[K.n!GG54inM':bOIk?;3D`=r1dUb9YN9dN"G6fG,$2p?7CaU7'isn?,FbGDbhG<b]=(;2!fAUm8&FU24QpL3XK7gPB,W54%)c:(jr7JWt&fX81:qE&LZUE]_=X0("K&Xm('Mg?4E;:nlBd#]nBHN.&q-74[6CQh2\TWNBH,tQb/metjVFP/V>g"@)3NtLP9/Mrs%pj=Z:^FnPKH15.'Qstg4P-goj<7RZT&:DRFI1pRGLZ:k/IUd)M`(BIMmGb8*9:3^Vb,'B(U\ofG10Kbg$o6gOIB<8q%\!Jm`01%n%>mVDbTqHfW4sTBI\.jn2TFqcu$rnR2g/@In]',$W<lQrs&!g^=/p?KJlK.I'F#dGQc6nDV*ug(NrKiVWHbkEqUfN%a.#pa"U7CPX%ir^5)Kd2JFh/fN[!n_e>_AJ(JFW8:=$3QT+&KHMr>bGIu!X',R"U&$gEh=^#khTA+cp]Fq@rXWF,fluCK"S'h6K,<T1J`4;0R0TL%PcIXVXJ6K_.!D(JV[<.$R07m'mbr,[7:EK@T(ojU(59jS4%Jgg7Z2lW`!X,_)D);[L%QtBDR:fc(@:R^he6Fs:BZkMZ7Z?@(6lRQ%B`&"*6ud[N7:EJm,4ObP=qi<Aani1X/II[FXo?(CZm\T`/B?%SZm\T`<kfVgZks:pb0EgHMb$\QaU4rlSQDU8":@Ei2aiNiTQ#3a%%*G.a;B2-3ONG(8UnDDQM'6$+0)c<BU(A_$DL$n+3A;`%>N;_f7V<+NJnH5;b5Nn7=gZ?s1N38XOR17Q]s<`9REG@bRCYI$%])eD%Ko;;1F&'4&2fG[?3I'lP^[;0jEnjRhWWm/6Qn@=gXGO#?*kCSQ1[`$fnDiffAEEZEUu&EM30T*BI.-1ljfAW6?Y@<mYJ6M6V@+KR%bA-R1o%ZJHK.ah!H7[I9M,.eY-KEDEK5,q(gY^Tn&YGRf_Oj#i/.am]2@8Sq+eRhKC_A+W;PC6BF)h2H`&.uq$gCKaaC+S+6!g2p%Gs=#dLqD[$%<4UX3LMGA/&<+Z4..BUGpWEn:G81_"AI;A#lmHk-j"na7X;-?7HCI9m^S/Q?a%ZnN;3tpqjX[E^qV^aelMCCL&H!T%*ga8B?3G$&#,7g^][1`N@e]CpV4>.N]OBD1B6RT^JHN(\^]Nmu1#j+aP52VS#^ide[Nf'r7=l<'aP'i%S'@q$c,]'@q%6^9$R!M:%LLHjXQ"A")i=#@!EYNj-!cM1/PZhn<%=Yuf-qr_\I;`NpKe[ocTu9B\?+MPDSGBd&]3I59LlN1J\eQ1SYf'fX[h4\,9a.^=<kh^I%Wao\H+L/!K^GCuP.DUTJ._G8c+'@n\am)86^X'R,F!@btLJi5HNSZ;kD0P_o3N*aArtZ_(Pf=RQ.!^Qo%h[fS"?(NPh=Y*Cco^':%OD#4pRq!^iFFi6I(d,<i]Dmc"%V\fL(i#1JTU<DZ><T<sQk[G<5]?`(7IjF:#E4Z*HjRh8^biVt&7b:/asU3%jhN*c:9(o*i\Cdd%(*%L@lM!_[(2Z!-r>s(Xf\qf;Bg6k&M<dT*Mg4oCr1/mX*iuSVr.=#MG[lW+*IOrK`l8]?S\!^;,+8W3U))&e#>37tZ7+LkJHZEC%UnEg3KN9[$$;@U2V+4`X$n+Im)WteoBlT+pX=2N<?-``&8HR@4T_FlaZR9"U#D4mY?l!9p[n)'8@Q9K>7R`mXWf84mrJ#'_!gLnF%!PuX.Ze&Fd("l7`MMl3OX`OtP\rdV+qYgG,n'0bf.aC-'hs^1/hf,']5te8$:=WLT$ggJ%&7C.l$.0A&kS?][=XV>Pk/h.OSsd,F%P<I2H)99"Q`*9nC].m^R"UoVVgN^UT2VsuaR9Q;-X#f/,q=`[k,bA$Ldf&l"F_Z3rHL"N$QfpCA$655b9(b&pf=.Ih2LU'_J#k;n%RmHT7*ijA=G1!1!o#*u_G0Wi+0-1%2i9UKo2ID5sjt3NV5)MtoCTM,nB8d)9-8(`H;r,l]o+me0?EfVY=mLdR#to@Q\i]BP\d=:;%&mX9^3Z;--^oln[cH5o-(N0esftIi10ra?B/-DMOfJK+LQU(/*b897o%(Zgn%c26l81,R^b8jfI*t2&XG=-gulLKR,d7oCM##<5L%T8u-aJ*J:!3,risT#BQ$_>/7#k_+KQ5GW?%Rbp*)Z<cMhq.n`)E;4hM1_(7K<UR-34hL9R@/P4Bm[VG&4Ec'JZF:q0LXR5I%j1'+%]FU(Ya,lbAH)iOV)_%4V4BA9.(4ES-6ab"g*B.ff0c8-2`QW5"PI4_E&I4C9\u/>Z$5GMVZ[Wq@)^[Jn/&1g>=,#q&CJ[)QL\9=c%NL01fa;WP9QV9\m%L(%!Ie057gbF6!`Dgl84c;W7P':!m;8H$<<YJMMrNS9)e!35[gq!l."&E2>>u\E0e>3E#@]_;9`L76Zs+Qp\%Z%WDmm27<%`ElHR>$SJ:29XbJDnbP#4ZfL=Zs0lL(m?m\4*l&$'>E74H>]@"19jR7"OV"n243;L?b?f.q/V08l1^PS+XH=9<HW77%&+'Qf8j6L#HtUf/DTCk;8MA^p69.(MqY(]ie;L=H?=0@;B;aYcJpl1t.Yfr^_5!U'$1HLG/#XFO00<Mg:*%7/qAsl1f<`Jg\7NR9%Ou$D&Veb53>Xo%)Je&M9hhFA_\7j?64-0(V$_pX)9<A6KZ$kZb`8]*S/cJ`#fYldqAM*m\f%@prkH`IJFsn$6fK:(X$B%'6[J2jf%n<4Z:/o1!&1on#:Y$37RN%=3<PCq)WdT4aaepZW0Efh_2ZG3aJg-t,Nkfh,2*95$!d=Oen?m]`N4BdP]kK]h38nD?Vm;b9&\A0n9%Z6XG\"k,[.'_@6lbipQO0&BCb/=`%'*k5g*3Q\^lWOB<H[0"IYOcBNJjEXu87Tl6Gfk-73%Tq>"reesi[ZKO"/6q0qS@XE%5t\7E%2cQ;)$#[Ti,ZM5#0dWVeE]U2.5f_4R)/RdX#I,_kA#*m"QXa.b"\QmcGFL\.FeiM<4LR5Q@0qr;8`b?&iNaKALdc:^^gbk2Q=e<8%PW)SecD'jn6r/gdr3<jdh*NDbH=l^>(@rDl>/rdN,W%(HoVHd#U.cugQ_8i2hU@hW@R#,Z\'hCjo7h+4L1uG!b(K"(&6]XTc(!,`%UR)'ed5ZF'JCc_Vj+d&\&a:(%(qg>>V,Lk;b<Bmt%JD^R*U!g15<@H/l.kEK1-`K#bi63M-o("1YHu]U3/kG?EgbZZI4p?\")i-n%PHps9#>4aOdmp`s]Sm*dS+iocqE==1pEICkZ9(fdHGt^#V#,dp?fVSGiaL!";mlqAo6&*^,8j7C8QY]:JU!i0ai?tqYt*E_NS7T#%G#*)6%_NpOjV,Zm[cOYtgY9nH]kCnrQ=nis85BY:dVb!Q)Ka6o;`@WY#._4b^sf3)#Q&OPEX:N]m-L$RV\0tJ91>NmC>SPOD#(Xp%\Y+q*63-"KdZFXg$<FofdAFUH:N!eg*<3VeQ'U\^V7+a1"qUd,,.&!d^iGI[DiA8&$o9bg\t/OF8"X_Ge#AiJU2@7V0K-234h%fH%MTglUHiPFgVik'RpLC>gr,.%:QD?QWB2EP;G5KJV*B]R<Ja*hlcAj6,i-Ph#EZD;IKTbA4h;6Megj[u'$7]WY-+n/J9T`P/m?&m"%e](8'2%\$):S)D6k*&kP[%HK-i"2!B30ikA96.8)U[IO)o`t*QS#cKN<H%c5g@il.bH@b6DeEUbSi-a8>:FN!Nl;WUi+t9dJKo3Y%iO#@1$kAeT,tn6E_Vi4q+&dFB<<3=o5.Lb+]F*T4'/Q^A20mQ^KkB;*^^Rh1ZB_LqV7$^r^]Xa5hY8jVJDH>K_*4]WOn1HbDd(37%*,J#YmQt"ufL:5p3J&:5:$9A#($i)24%7lAEf67tnh&XWN=n($2:qaCeFlW2:5MO/]'._M$'CcA;j4#eh5qL%*SPnmZ1Cm&0c1nj%NMLO7=mio4KPCUV?gL!VF@fJeg#a=JqBX[:X6dPH-]&@0$8CoX"N!&FD4;8bpILU8[i^@:E&^YTjbgBE;#,<A:$[CaR>c)JX0@sM%\G+U!N7CX$N]1NJO)I4.@HR3mX3]UEk?V`?-c`ZUD;K[hcYkdalJDL&:7o9"oIlcmHggT\g!aTZO)Gon]_f9'LCQ3'hUBsJSiT"u%ali!U`8#PFQ1%:%\<pUVHUiG@SqE@Lh0sD5*SF.KL@5Q':uK+jG*=:LS<@.CA]IPlm'?#kB`5KJ='`3$d[Shh/*ju>lSb;=O67#C%L3.\8lAIRWr.7RuTgn$;EYe.5'm;4<D7XTa^%I@K4#QA!DSLVWNE;W68jLkmD:`W6+O&]3jV$7iDE>8iNWZaq[/9.Kf<bM-79+C&%cX+!CbdFoi?[Xm(cPu[&fYm%P0Q5!M]!A0>op#qV(sAS-+G2*=fPnshe*!mD0K-1Sj&JTe*&pEa"bQWs#1'eA\GK[EAKnY)0><js%/F13cG#!d!V`4.m3i<oR+B!ECDS\ukFL7feq&*6#f)6DHBg+uob2?l2?a/Mch%`DokG$)k]Co_4%O]S>g5VOL$p>Ya@lQsm_D]ok%Qp4BBiT-iA\$->M%U#dHh'^9GDA'o+U*BNHfl5Y:CTsDH!Au,Y]BN22P`tI&nZR;:kVV%Y]s]p*Z9]YhGD3O14,S11c(G([r5!/O%[mg>(AOE1,&m&P_Y/pg$qsp:JG3C$ZptQ[Gn'XE?ajRAg*B:9Wr/(+2QOiFT0]>&!jo(\.+2S0;&Cf<_,F_-n*k47`/$tEM#\VHg%_@;NIFE"q>\'dZP*B^,tM:Wa$Usa?NFi6.-VW\UPgigri$m;:[\N,@NO)^qZM`\i<q/6/-;sVsZ+.D88-b*hojeGJ#4QtSq*06.O%M8IZb95Ll:4[L=(+m[g0\8BQMlbiJa^4,gE)[EkPf2!L#b8^t0lucOD]!ic<XE'K(@XnGuqbbfAPGl9$cTdu5pk@ch@aYPh0)UA>%LdDZYH%S&sFN$FQ`t9rf>Xu?e(Al;D]Dc-8kedu%e(@V]!mUI+7T8)]p6'J;S3om&Dn_09DiqK/c3R'LI<kuOLlI:XKH+n!==3J0%NVcICXMC3:OE.pN!cgKXQ1N7V,rSXRa./#]FNmRRm?thf>fY%j>H`g$p2BB6aJh:d76GP+ig(N!8N.dN3&R?CBV\56@IhK/.-AF:%`(N'rT/Q."W3H,P#P["scgF_j$T^Y2rI^\$<eu,f\DpLC51rQ?.U&)L)l`"uYW.!7LgfsbQu5Rk107mW0&dl\'XutArPl:5]&0W*%Dn:&DV91s5Q=a[j^SrRBGPn:A[NF_h38kgLQA_#hCt%_OJ!o1pjp.eBm@eJZh.Z03`OrE24#dqmDr;W,i#O'7lQt<:LNpHmP$NA4%kU--]@\r%%YOn/iOY>C53RHd[jL=#lEba[6Qh0=DM%QN>M=CK3")dSP454=rfoRBn0]0?8YK'W2%BOof*f60>XY8UBjC)>[E<uaX%0(66L(lFHB&p-pc//GM)n&oVIcF`fo"auJpnpsl'e)Dm9Q/D2p.@RLd5qUl:j-Iqkh7JS'2-ph>roCf((O=;c`^+$n[j9"p(tK?e%hfethT'b2O-T2rJ^m@PH2X`$=0?uX<LG</LQPk/!`6L_9V6p-aK"M8GR839*B[f0pC]`/W9g4!4]e]*Q]pln8AVU\81q@D*#9dhi%K:g!6,D\-G;nM/m^ZRp(!Pa+m%t;7)Isp%hjB_WeRb5.5d[bdI-!;L\+?oktJ+:K>FrjJIs*ODkk%%u\ir/a%@M@GZMp'?I9cQ6<%c#.=VY'$<%HAI"%$%a,#n!:(a(:W.jLNPV&n_Qjue+atOU;Hh&1%!Qh:O%bBe=/bh2=]u85'q0<o[-4cQeR&%./&<NJ(5D=PeT(t%ZT,`ko4\JgK;OO>cOo%?o_k7+cd9U`=Zj*;US-7@QX"iYefBgXQt!^h!'ODBTEV%X,D.6)qo=nIr%M9Q3_&LOpTB-&QCch@2NGB7%?kd/J4Ljm;h;>lhKil)5BjbE)7CQt5gSr%[Rojn3V+5GAe\nCX>u2V6>HXS<fo$%-@FO!@aL]UK`7/h*1)l]"d7!1eqW-]=fl47k%ZA>cBSeeI"5rRl8o3sHsh8AY'8]100F4/$'0q\'8%NO?SH#E5.Ue>@uen_WcZd+T0?Vf'"+*t\rj*@O_X=^nfF&a1=JA#%O]CCcZ%Y2"BGl+P\$$INjPF3,X]*Toq7m-],l(Sl1:V3*'<b=$FlS!Z8XYq/:5gVQuZK)&1[%*q=]G+j_Paf_HUH/6s)f0'VJHpgKBE#=/j%\2&l#Eo6UR8*>,K#8%ucD1l!&)oWZIdSO@jRblurD7JS%n,R@`1^lZhcT*Hg5pTVZ'k%>cgTe:n1W#5!36g'9UUE+'FO't]Q61c*%OfFPSiKd4Ca7m[RL]>mI'!)d</A-m0Wg"f[`/Zl1^9SldI?hJr%h_OEMD%r*//]]K?g5AEXpR_dfYjegPQ?JIH>MLrm`L."ij<q8%-?`BS@SoGFJVdYIOBAM]?#kY?K(.@ZRb>M)8%)_\\bFgk9033e&-tegYlr!b#VB^9+<9KL[dJ.W'o-a=h!(O)m&6\??21<$6TB7N%mWRCRf.R`Q&RX3F'#KcGDU[CqW^&O!hGF@6\:P9P4M@;38:W\6@)oG+DZ-`]p\!(+c!P=RTbr!_gZMqj%TJqf\f;PJ`P:NoM\Bp7%\R:EjD8,>)P?4Kk_i=4Rk!W2VOqf<_hr/`\rs[I*:SnDdW(kjbhm78i[:gnR(u6aAJoo\nc.Kt/S<5,/,.:jhV!Zoj\g#eeRk)3U%H?:rcDfeG-\h"Dt*ndV`]-;8"C5Ic>$["nt\^[Gueh8kk)4R!T^0-lf-HQ1Vn]f3E2hVi"7sqWud>]7Zc`(MG75oF_*Ca2Dptgun%2=]pZH)k![O0^b0F0&\B4CJB31OQ6&'0hcsB!"a$4DX+t9t]ELb^\g1qOtU.7F]7/)i&/o2=V]*I"c=ppDhqU+2%7FUaBCu<>O_n%\Bp!uH\:L0VsC==5CbP2-/[g<gYLpMQ(,Q\X,.4>>USYoGg.3VdHe5ZEVm0b5!0b(Ym3r<)Fi[rEOFOR\,On9Xiklk(3I9>DPq(3%MiO=\Z"rt0Vmc$(@cQ_+5*[mr:nV5t7&=u=$3LWH50V#X+1!,E1,cD[a)!.g1k;[5'U;"-Rj4!IO?si1?)UBKYT/o`TMPj?X]PFf%NR[VQ7\rfPW>%R:C=AmS^n#[^,Jg5@Ut$l<l1Sr,q5tamGPTGUSh,6HV/PKHrdoL&/TB:lC=#,K]LS$,ET@sIs445!X"jaXIZD?>%OK4QMiJ#h0\Ugkf3hGt1dA2-Wb?J*L14gSe]_cWd!Q]^RckV]q`W^U8b6&k3pbBH.H.;o9#_%^_,$#;+9\3iu!QaW?n>ZPO-+Al8%+on&$fW#"7%HK-B$%Ruma5U0$$%Rt07cV5O<<XM7s%N8]!0@fj(u7-URK-m*<oGR0$U?TeM6@Bh)>Q.[+^%561->NAWW6SoH/[9U%+=$Y9S/5L3!4)Sdbc&,KM\mloGV8m`T,6HNqf(9J"mitMYN3ENT+8[3mtW-/>Bo57j#Hr0_W+^KE!#FRq2$?cO*8q.i>(aqMgN\X%\s[9k"1R3rn:;8%07k:R%ZfiD3;gTH>*j3OfFjk4_cKmj8MX8t'mGh0WI`-7<,Ks=3D#AQ?Y(UA>U7a`bA`V^]&hcPCcdZe"_Qkd%U]hpt/_`jkJTFS#+\iYF7djI=%R\/;Y0S]B8J9?c[$0!UlstI/E7HQN="holMI0L\-])(RWOH+=-Y`1L"kHqtXrOrp$6'pGJL"&#%>Kp*e%A.9KOJ0!<JMki(,^ulJ8P64Vi2%R(ZKj'CC5n"eE?\rc>L0M-614dShf3.mS[b;B][6B'b5mja$t;?4ptf:Xd.R_gf+VI@%A(R(HMWWKjgketseNMRX$)0H<JW;ENId3M!k(!]J,.mECUY10E2E&sHPjCha=r>9.mO?0@4*gAac*8!Q,2-l#j;e`,;gEUB\,ikI%FD)7tZWuFEH8`se-3gp%EV-u55K=ahEH?;JbK[ZSqP.+s1\`E!V)^9D^EUpP%C/9`(BjQ*OM/N'n-;HB*/H-$!IZ_rHTq`:4r=E9%pQk42]c*T&G/#[)Fo/UQH\C@K0&'H5&`K;W01JbD0gb?FeHk=KD%CscaM&],Z$EKA(k"-U]Q]d'Wmk0Qh/S`Z9RV+1#!_AW"rmn5%h19+c[0/+4g)_N<!WgZQQZ#Yt<M>8%#q@JhLO()D#!+X.Ka"WSPSX5)Ic#9lXC\OMm$*cQ/TWf'.=:SI[:'">B<L%HC\MXPG33Q:%q8G@*PP=It3N#faH+B?Dr6"nd^,&iSq4]ZHjHNrUI34Qor30+Cr&ERe7%VhsFn(EfGS/0W<nakd@Xh#sM%EF3m*3Vmb)Jf.e:PAW%K+?OiX+T('6=&K[PPaNd^ddD*fE'`q:ESCn&*Lu2pPZ\BQ$:"Jgoj[)YFktUi-sWQlCGo&`Aq=M*5=SF0C+X7+6A$Hr%R"L]e$aU%Fi_nGI8t`0"7O%mpB-Z(l&A+FQ6/1b&+e.*RtK;&E)CS@$E*Vlc&9Y8(I@J.lXtDo&Z+C^K+Nr(IGWbb_)cr4oMu!oF(MBX7Y,^]%]N#PS.o8Yg2d#6*<<OfTf(lMXMI6`uSI+TV.Y;f+rI@=C<No5MlK$^#<tVO?>Gj=K0ZLYEgC\i#B;hNG]glFcB^9DD`:#r+_0/Jc%?P=Wpjs1`]:_ZG<p@-/R'_1kYmu^q#=05/l"sf(k\-mHI8.AJ-&pL%p*N>#mN4d&:^>eZO6u#[[5$nA>fo]J'_i.9^0=/[VQEu"K%o$)/gbS%+<OW<^S09',oPqcg3(Og)BK!(&8&I`L\)&3fIBU1I3LJ!i__9RDh18.V-kHip'D7[.(YPBf(#<L5iQ1-,"2r8e"PUYLW%)'%B4c9X2YX<65d_(?R`XMF&1`Q-t?P"N2t=P.thcrD+N7#\3ajugk!SMOB#aid%"]A&Gigj/P#<B.rXqI5#phP`L#'^(%:mT[aE%:$Y?+%8MY6@,fV8qI1AuSoF(Z<XY5F>sQ??Q&[/0r.9e3aXeMnEGj_ok,pe['Ba58a*%TVJC$B!(O0G-)+(1#\+hI+S%3F12s+#V%2fE/M@+?$@@r?>agXOC'QlD:(SUai+qB"I37F7kmHe4U-#'_(Yl>I.hoFod9^`SbN`\tFOH/N.fOnBF)V;&7j/(M6B<`>e16]AT(%2pD$<S[e+^+S$_*fs,-WSL"^Z;c$DZ,HTe5EUd$f3tBJNNb>*.rt.ZGjWl0P;9k;i+Bt6Z-?<M>mDPur^5K;#N)q.nef`lGZ*h54%G7(P4RO`1V-HE;%muml\;X_`1]`3AAh/U@2]+YK5Y\3uZ\,PTG/$\qf=NdJOHIGWQ8+)^CeRdL@6h1!pCut#8#CHBo4KSOr,9mjt%Mb6(UHOkq,`nXr0\jG>jj=-qp^`->W*-c:/!$6Ab^k(NI"<Mef^k!4dfAM3]"WTL8QnCMjWdk2L'gs:_I$Y9P4P&!@b(Bf6LZuSV%0-;/NYYYpe!s\:9Y#2i2^a0%4.F2@BYHZ!NHT%ms*=qI[cc*_t?@:"/bU()agoiVDl>jI$/Te>/QV7J:]0S&0h9*3<@ii:l*@tkN%:Oj)!=PAA<g4a#Q(uP253924@;k"[k+=VAq=[YcIOI(s[T+8'"3g[Zu1DkU#68JaI`0f/5b;pbspYUE1KCM^n[jP)_s/Yb:]q=@0%1CIU><lQNG>hlsfoc7OH_g@10r5?<*Vc%4-Z&+<&\aK+c$hrV2o#)9@n%@u1Od!P-qV51:cMs)^s1s3NG!'un\1>bl9*smGgW.n4%]D_Aie)U9#nKV\d-;JC6II@$i];Ep3Fmk`^kC.]($V8=@3c`-3^#N>:q:QG?fra<#6>s.CiT]j0osbOj7-NTdZ#"f3pqL=R)#eUL%=>n]AD3G^pGE-7_O79Vc%_l6dI^hJ$IW<";^M<]/>I3iuTtA@*Noc[uEohQ)gSq:Jp%[lUhRKQC*4\V0M)=\eW?SB*B`.!H-$es>%d%r41X/m2bVFk4E<(n%#O1l&f3*-o-k\"S@EPA4j_I$RGiRg_\mV#B$B"PFMZn@T\KYfZHN@UM--207/@9P^Z^*36!EPuou:OA@n%C%_&QD!4s5OdEtfo[2gbl2IouGNoOe]IN#Bm2MM(WgmgOgI0ah6?=c^-bhZ8M=97T[c'RJcJGeP[E$%dG'-i?oaF&aA^P,bTrtGj%`^8i@"R_rD3CrZF>Njj<2.b6kDrai>T!dd#TG=<L""gTQ<<O2_h,LEhhmN\cHs"ffR1A\ZM5Ek:b,8LqD(1rhEYgrqf)glAS@d_%%0MG:_2\ZH26B$TWg8QuP:>Rd1=AaO)>B7tfebNGmjK6(\lYH/mc*(ir"/X5?"$/K>i'!W`pls'&Ce87qrEd=@C0`=]/aIRHZ,%ju%;kWRk0BDu\i6"dgX=!1b^b-J!Q\d-VN7]nIZAM4J)d^Bl[6/k'7]P0b.ESqQbsTOYq7&9r5+;#[aN"@uQS+V-08k^7-;0e_cfR5b%)IKp%:C2_f]rnB\;gp4BRSHM)b1Aa5?=3;&Q-<:+CIO:dTDA5'>Xjj\9+u;kj>/iNr!rHId"6FP8`BXQ8qs5V?4mUk#*1o2($8"%%6Q-kFYj(+(`8^JAm/F7!2isKLKD*COY%S&/$6s7A:td%74Io:sGoh4^aTNE&c-+^lWHE3<5q%VL*t!l^:FSTlZI6j17Oq[%>&>Zd%=gtSsEoP]X:KX2\HHH*qPbt-\b2AM7f;bgEWKW*L&mCNUTm<>W,U'Ds6DqV&Ze\*a2Auul"_5uW21a:%%3opga\UUJD%rd"G`#[n%,)heZ$MM,L=S-11'2%;<)2o=F6IYK,`0Fku&U6X7+Wfe7\XF7RdI>A#^V/)2dEsBHDj>m1Rlo,2LaF^qH_jE:;[laHL.iNj)De%/%TUa.CIRljm#rtce^SN2YI;:0BAkP<'<jhY']]PaIn^f<l@2r:6s3!AlVFH2XmQ<@jd$-JVk'Ld/'r=aAg.Y0AYDW#f']jQ[:K.TT%A.Z$n,m<2JM`dPr5U*X-RL'a$(I^MgVo*#lWKg8Tca@Kf?#?FB9W$,i`tp;'p0Ot^/o<QF0)_hmrPO[Ama5Y+C$D<BAO<Yq)U7E^%=pgLkA6(=`ZL(DgFNGle3c,7(:O*^\ThP2/JnRZ0<<VPjaCA)p3`j/4?u>4]&P)k\2NuQ]Sq*7$h*.:@CX-9.-Dnl'd;j'J"3Ghc%OSK6uB4WSG)p(ceW8U!/-t/c^]VmkeKe<ME9E`jr44JAq158X_V0F41=FhU_G48T.25MQV2Pm[=d"]b-ZEGQ,<1m5W'dQJ*IX?7W%>Z("Cl9(,lBpt1>V)2"2I4PrPOsd6)8HOYSa5@o=O%c$q^N,Yr.#]uI@06ml/ecPe/*31^h[8Bdko^@>LlE3J`3>dl![0TTkc(SH%QH4@::r;icI8=SDN.SoF.ulmXHRd"-3LO/rT$V/unl)V%n_m[J<6'IaXNe@Qd2^fMKjeS!mg/O&P/?>lo@HMLBcof`dR>enMR3W'%jtg9gSOm6.?,qUe_IBuk.d88[E<3'NYfij(h?9M@`P>FGSogVn6m\$tE3'^d74Wgn>M%*/go4<Z-\NTSRD]XC8Jk9nJYVLXRsZc,%SukX8J^j'lbTAWt$+E`A:4,[?M1](YT)j";puk?Ys"f?lAZV$,,9!;BBnYdgVa&U3r1U`l`'4BUAm0s>YOV*<2VQ/?(A<ht<,JE:%2`@[PoVnQ7dYO$q:7HF7^;m"n`&`Lc':\4p-'YiuY8PSXj/"A!`j:n+e7l57M'&9$9SeppI]QpG:,XY\/GpuG98;TWDm:-HOfOZ9%VXDQcN)Ssl:a-Kd#G)R2&`Z1bY\D'F"P`EmR<4Y+^UTNZbs88XP,Pn@b2(0<V)?OL0OW\5L[CY#j'b;gd1?3bDW(;kA^qe0AU(Rq%HpX;oC!i'<_.Lq7/Sfe"4^dBOVFgCi.%,Au12I5hC\#DF!=Q9/;crN6-$h^'ND32b8PPnf=>G2*k_#Za=?ag::-H1!GgXS'?AB?1%]KgPl"aSR4QGm&%3djR9I*`s<RUuSs9$M$9YQ9(YK4S)b)4S2+0q30ffq@#gCR6k/QA#[>H<GFI4H-b8A[*O^>2oG>h52&8q)"-I%B>n<hS!>6CZ/Jg?U*I+n-6['t@jDlR5akOt/Uf7j>+eHEcKP[\:(O>R@We^P<<?=GPOMBC^.uR1j071EV/qe0.'m+RcPS\Q`@/iQ%':MUP[?O=_j-0+tc#0[u8m;C1W@:ssVl@WPm[<^FlYEkdc1"E$9mUNq]>;-:=YiTY4V<%(a#oZ02NMYi7jMe"'7ZoSgWUK\R6RAk%ZY\rD.hP^dEP5IDdT+Q_WjD1t>X:/0D-U^b)5K5K)(ZPt%Gm:fM"kt,LqSM#b`c]t;/#JiT_R:iUPY3pk*3kA",]\d>JrF&/"'el%lAjMkj.4^&V=apAP7=U27u-"+bsNj89+8*q_PbS;d]s@[%][g0.6niO.EP,;RP^kG`5Iru3FMHN,R8.N9Y9%ORK^KQkH8S]Jcf!]%RLV;IdKM?Gb$`V=-l[?3(GfiAj31U7#X[-HR`4D/JV[*:Fn7oJ&P2JO#mR_`1`^"@P5$oXOX2NSQ=J:p0JB9C%I(GQF^i3B;6rZ+%c)1'm_<%[XG.3>%g,Lm18Cro()&-n"78?B&2L.cUI.p<,CF-!?Xg`%iX:MF%[@gM4j\$Eb(Q(64BNoO*""i.AhgMN5h&UC/(/`&[%PuVS\<pNO%k;oB:5>iECSu+>K^G<s^0WjH)!j,?\lDN0gis064Kg;<P]Pp+I#hIZq(SZdSiWMN>e=#Y6Yt#9r.o!(**,%74p6>?L%ee0@SFi,iU6DgNQA.qhIcR"KC6D9O`H\KCKP^Sq`dPs_(ehq5;T>rUJI'W`S>\.Elk_gk"l\&ab]^?9`6aT!MPbRfl`-+Acp)oQi%,[2DD1tFGhKn_fTetHf`hq4ZiQIpo&a#ch*`3LDP%6tdmR67lV'"s1TkZ!@>Tn6g+Y_eiI83kW/6sAWf2<pST?W+_lh4:Ja5b[#j%8<Ki1<@]cR(g3k>@*lN#775%m<^<or.uTgBU.R2P-ZsMuc(Q_`DepJ3&YpQ<3&X3IHb&YjnX3A6'^@lNj'>>-6#95'?C^h$OX*\+%&\V#/bp'`=k55s65?'b`6=QSN72Ca[U?]4L#W1YS,)Jol\`p_3>)]VO4c6b!.2K3[,%J%\3hg;'$a[5RaseJg3ft[]?6l$3\h)5H%L]d;7IqXmja+2/e:OSHn1E-eqYQ=//kTVQV?FFR>!ArY_Y`sL-'I@[JEMfhYAHsp2\/35IQg$lji/X1[:T>@Zb':.B&u0Ec*G%IL%9Jc*+8M]]_:"WWRZIH")0?L,H?Ld``q-`ErmbDbB*Q+r<n'a*@Z2nK3e>95J-ThciBX3[E*a%BCLJ0MlJPtR"/YPG7O6b-oXjN+I%<[31Dk.7lgC]I)p-,2(f;hPE`ZH8>Na7#k3_e([#BZ<33EQ0"5?`"_8oP;TkT]q1ElWa"nB[U.3T[\,^S_pHR]).<NG4DR98t!d^%C;rE`HnA-6cFn2.$*?43:n2W*F7'4KAD'!'lljqOVipj&Y%>Hr\SRk+DGV4,/!).5CYiTpnXX76ln/$\&.2u?9t:KeD-D,#`U((f%,>G]f--<]q2!.)@aE$_B[3Xq<?*]\V3mB]NZft?"A'Q)Ni_s$N2bU_lDRFXS/M_uEM_7!XNcieE6rQ(5as?N6Tog)j7Jk2pG>P)[%6PJo2[@Cjl]Xr0IV:<>$4=N#T%^p1QkNGjM<LtN'X\DIF*AX:!+KX*Z.E*5WV2n5F5;+<3kI.ZAR8/kWeCMZ9C!o/@Qn0+$r>=!?%mr!_mWG3B?90_$A?%c9R<L_8]2`"3>9Y4fG>CB;>'#r>+41$,sY/I\/B\H1Y1[2;Gg.Nl7LhV'P=5=li(qMTM*&)'dVL.[$=j.qF%fX7)XppcR":h2@T['FGC5)3>EXY-H_7\lg?jX(?/[:5JSJs)9IMZV/fHX(>g<4]?kW\1=(M5S.mWqAM1B1W\8?A(QiX&In%:r<7?%M.6TZ<JWff`Me&;M+0B@'^eu'dSTPhRBOKrq7Muj=CqZ3EG::V:h9GfqCdChJP2GA.;GEUjA#2,UN]Zo/2*t1<AZb7l=^oq'1p36%:t0!51j/+n9/_.lPO#*NcmsoU@OZ%uPiufsd_.Kb;IET/,rSk`7Q?&gr332s7Z9]"WH\SNX%!2H'XC;tku6Y:;=PN>q,1f8"_pr0%<M88kTS<k3ioMePq]@[i(h9^E.>K`sh9A5pDRa$l%G5K"`/mkRXGA\bSH>Wc/Z,%,9:#i;kQB(qKfXoAFeVoQ/;^[5G]M7m$?KBn%'iH?j**]UKa*%5TZ+c/'Brjbjd]J'k8]I:IA7hnhh&69iWk5*8VB+Yg<!00n4QFnr0@:U44^2RLD-F6tTllsuq&k`_6XMF!;e+.r%KTEM?V65pM8/Z\GAg3r$Hl:1@[>\lQ1G;`uSb4F7JL.@!MDgGE?*`58iK6I66-:F+kh#U,(TeEVpF6tN+2$gLaNZmd%<K2N)7(ER%)/I?+chGMS=6ZuTYgM*<'r'#Q*[sFc1WUe59D)>Z<i&.sh/$9AM`-B[;YuoYX_gI'lftE#q].,Br_@,N/O!@'>$"5.Qe2\<fGX+B%Y%k=+7C4LUZ]msXS#)Vhhc+KOXXd0oqZ=dJ0d\K9d<)3/*HO4t1Y,Hf8;1">UiTd]B9JN.70CQ[$8UJh"#e>MT4FJtrLrFH%=:\f%:T=gqV@h.,5!DUrh^NaO`@BP#ngfjPX:e.h=W&2jWGRiSE[pdfKd`K-5Ll:R_b5;@aeg4XW(+`miImlO\WJ]f*=,PWV<RKtC!B[o%M>8pYU(Of\AM,9Ld'bdoJWa)/a$aG4;V<:D.S*IkQq;`R:bjDdgk)i574Vr%)B3/Y>-<@\Gc$a(43PQ38eOrH1eB4)1B0'A6!C-s%];._E<`a(Df`)DF6;+9rmC/<jk2s\gR[.$s6b*n+krB'OFlg280[L0/_;_E%bcLr'oDP%om1<EDI][AG2.BGB)srg?ce37pdo,=+%hIhs/QBs\+5ohqFWYC`8]V>jN&%OO1O5I?9:?-`+W>DZiSE!"0&.'k6)oXk+d_oUGQF2Q^`AE_u2,H]>`,'H"V;7(2'LpN,qo-)l%:bp/ml,&9Go=DB@(=OSUa9aV;#)5gpHR5W/&m0pVQY]OKcDHh2iXt4%j<6,he=[T$AQ<3&km0,J!9<]>R3hOF'U"jk;Ta)2QMM;K%:^8B95q<\BWDRSV-I"NZ.aC%%Z4]cq^1Xg1"8c+f0%3A'NV.t%r7b>RbiaJK5")0NSV5GM!o):B'P=AhP>/e0QF]b'S1)=72\HEe%78*cZkDr#Y]KBa5dqVODMQ>:72M:p[jB8Y`UZK+X.>p?&b]gt1S"e5^bI"3Lj>W!nYc@PmYd>+qSmof\HC=kUVmXTX-<9l]9J!5N%FHX")>_C&)j$8e\OU`[LdAFl5B[%Gu=t\#T:SbL[XW#Pe%6:l#jdDp"4T+7`Au:r*BZ+5.Ou\Ma8N5D,3=*2=S@VBCHIOOCOi!\u%=s91"[(HJtOb@==dg=1Ubc,`"e[U@_9Kr__$%_f!0a"i5(T?ITa[i&`8m>-AXHcs2D]8^oF@SroEEOW0nQKM?3kF7O127iS0@uJ@%_FuuR&5DmY8`j@P\5-E)WmnnNGim1_M*kY(Y&fBL\odNq05VM1[8`g[K1/;'l)#K5X_"Wb=;nK@'\-cWVSQMR8OFb">hOt/cmc$P%@m-!HgVPAE1=<j]-15N:9e6Ka!6ZR'd`3TLp0f%IQJVGI4Y%cHZ&[/MRF#J&I,*/7)=pEcS^&a;.G[DRfe9_,buUdi)TWc2L%TV<%TE*>PM%agrG%odD;X/rN&@'":P9OEAN,1ltK%R#s*qaMW;M1C%`pRMV8HUqVM^3hj@[ZH5>"6QI&4T9$2e2Y/Fu,GFDq9PP8]L<m%lt22kZ(!JS`GR-DL2/W8'Pj[>KOD$#0)!F'Tc,?%9?%d-dZ?MGMI]gdF;.:]O&M5QJV4!Ui#5\MPZ3gN*=BQJmD.]=.Z6aX@Qf@g%PCACn[IGZNfYp,(c\p-)kf6nMg(T@#RaM`Jl,QJOac%HtPN#g<9p/[PM'Q9,`R'^Bb4H*hN*E;u8u:)[MR#un:rVJUauu#T_/bW8%j]]?[Ma%k'<l:u0IA$+'m'#I$>Tsm57\H]o:u`!gldOdeb,;U=M>+#".n7h._5O^^g)b9<3@bh87&dbK:8R+[e6rM,f7WD5+d&F4%2'J*JS*?$9SQJ*Dr,83OSF`&mCNZi4\_"='NA^/cr`.66l'"Ue7=F[23jI%5p.F>OC9U\!Z-\gf)WGdn\`!2jB>U6t7EQ>+5g6UL%7q85B.9#Bu"IpioOlHqUk5^*&i8OGHLG8+[>16)Sa9p<h[l&4&^hPY,71?TTAf*sp#5LEWnZEj8Ea@#)):1G"9<3KC<?F%<]F%Of%HMg)A/0J\RG!qqMin%?lSKUI;9<'BPQ!/`."<nbS6Ffg-J@`),JZb"WTjKU4YZb%t'[X3T=QIdsdh.;P9RqA<Ok0(IYZ+#DO@Wkm%VDM*V<JsV-'-TE$JWjS2*&Rp-lP&$)9IZEN9514p1rg<S)/*-Q1pn5%1oZnF[?"XP4)N-N"tDqG.#0<eAh7?mHS:;LPI:oX-&/[U%B&@*n%Z91SP\S@*?t50A'/=8lF@0XbZ^FO6`/\E_CSuTf6<VcD6!`")9$X6>`Y*i7/6iigL_ZtIEZ?die&1n7*._Nc:O^+MTpHbE%H(k_f[rBFqFXba:%&Ac=Z[-?^/nfiRcqB9F8,,QQh\`*,GDH&#jJ)h]MZAhY'ag-;D)pgP*V3Daj[;_1M6mCUaklE[-1@uRd+*(_%B"Kmf?KWVYgdb#1Xmdt''_Kb861k]$n%69ZjV_Pho[+;!.nlJ'*$(n&9AO<cO#BM#pQ,+]Cli4(Qo<BUOV"*ZT(g\X6\1PaUa8/l%%&;\sU*]7<oae_o'J2"8&RKB*J7Fk[b6!VA;BqI-;l6Q#B+(6ICn>4NX5m.8;Zm:5_O?;l$Q<SJ>ip:Wc_F`%"=HU:IGGG\F'0B&%%;;"&_0\1,jf)k8;\`4*$OF*O*P<QZD19`N_Um8>?=!&!-2gS+`U>JeoDgf2q-.Bi6)0X7kVYt15p-h%4LF@EiBdlW<_PA!3:oY]%qj<b(P#J#AK;ehS[L*-eB`ip65>Z_>k'ib*UGO0.PUW?)S3.O&7E#^eO[5\J)o"mL'PJ=6#dc<XNE7s)K>!fCkrFep2GHH5L#>Cr%F'A4`i4.,H;DQLlmK?Pp'O#ZG.@FdKTV\SIM$jBJM*qWC&'_DH-R_&!PK`&SOPA@a(93!MQ`?;1_d/f#kr(gG[5F;PdO/8Yd%E2*%h?l*.*)LnQ/&GT-n!*'0jqopa'q/$ZL+$.r?PL`K+ZSFo)O0ak97!dP6V].-mRMLTD[RTskATDTC.>bOHNg$RVd=\^k/8n!?>`U(%T[:?'CUO'T[)T@aOetH4<)s<_LP2<n'R180PGN2oBS]3Ea='VS+jNk6B*+:)!\NHA`"*.%&K&jc89gbABEb8[<^kVtG$*+[YC\X&%-(7A>#kP$@g*4>93:r4PGb0MA1T>'$i<6/NH8hbpD)c5'P[,pMl4kbd1:(r6Xa-ha;p*oRoFQ;%TMU,n]/\WqD3cA;PpD=OZAKYd%C9Jbf,:.Kr#Q4W0H%I)aQaqor`V#JFgT4s45ii;/7!sCWHdb-+TUt88f7]ij6Kuk%ghA\SNl#&Pb!a-h<$!gHE/fmU9u*d*%gX_F%QgHU$*];^9-p\9h!,J">d$7L`6\-72+q;-E!tM,#:s'.QeRjt6K4VrID<*8ue4%,.etK3n0+<k&O<\qDcN2i/H$JYbb:=(h0Xs6G%K$DAP*kN8Sn,V4s5U4*3,=Xsno[#-a%o99Qb8;pM3Ld%@V5^5[49V`:BumD9!iYdFnob!JK^g2(a61`5UB3X-!oR=08ehcC4@#RH%/N!tf1/08Mg+-:AXPa+UNNC`p'cJ=OC!W^.GYAire$3']7:[J&k&[ojZ/po$,mZgJ6it&(/HAeVcLn:15cIm'8sW%TiDMMB-hC/U%fKt#)[L2OnhK5l%8ZDd:OHd86eJ;jpfJjWI3^Zi&b@&n.>4jom[*)g=p7mUP?Xt-,M`E:ZOif+-U>V*nZOe?mR=l>T\mDF+6[:G$%A;&H#?k\<;>g@MS_D6.f>&aa%Nge3a8k`a?gL#fb'DtVn-C)K$Q90PToU4=k/"f`,)jDOf??A1XSg#EK-P33rS0k(Id^N\GWPt9(%*ZM(cBL=M3Tc('>XGpo@bYk+M-AeG?fLsClYJ+"3J8QL>7YXbs@M<hMP%,ESSIDr+$fhWI%5JSB^6Ggh\`&O_[a\VUN=WQ"`&L"5%be71/el&HNVie75g.HW^.q!-hG9sF2)&D:(5blFJPGkno\d8M\$T=<ejh0*]_PO%\aVcES8&Z$<$LA-fA(A`Aia7=-q*A1=Ce*J:%:/J<<KT]Na3O."5@QR1V>JhU-D\]nAYV1"@Y\u2F9WaOr;HpeG(!em;BP5g7)3hMDD"*D17*o$a$/[XMHlX<,NU.10XNl!lh=T^U%LB$./gGo&lfus'd#c\6d6F?j!Ls??>N^XS?k?1*8%#)mgJ>DIT2S&#+T2LEd=e*iM8r(g"_P"0+;)8jlJ-*hhle'OVK!n'Z:j#T6%1,?+<!%`-ol]FN*EcoX`(V*i4=ZMI`?t7mN4!'-WL!aqLU,e^NSB_o?ClnA]<)/[_T>8SLPFkcu<`(ISKF7]:^IIBMck7@qV7*Eo%R+Cf/E^1^0.+#n_Zn)_%M`K,$W&a57C'YH=hm:i\_qqcKH7KJF=k,qZ^JsRuo(U40@DA?Q$&]#0Ec;OGj<3mPV<5:ZMPNE$nVY5l%JjTXA)`do%&`d?BHe^'Rd@$>S'E%gWEL92Zgsl%L!DB\>P[^NC/B$%:geJp;5VGbfoK^it32h_86E1Ji"H&FWl!Stm-)99=cm2M)%FJV*HPb:j1T:@ttoPgrOIRod-jYFnFOBPM3TO>H@l/gPW#pk:I_&M<g[4L#/"D<V;#iZGRj4V8CF$60n\DddiZ=6u!,liYc?R"<V%Y+u'.e2TTE9p`*U;lV<%bm!9crOmf+12(>PJ39l<kA4=CR4EkAmT]s@pe(JBfn;UO@tsf3*4QTf4OU/:">j<^)&=4qd'Wk)PB%i&%<]_ohUUZ$eWDZibZSN\qo'A?f3=?=$<\.IGd2TBPlRUeW#o$^tW_tof'P%+p%?iun1n+G0,P<nBI?%R3!?,\"%aAgModl:_ERsfg%dGVj\LX#IqT&Vp:OI_7>g;\D9MBjF.Jl36D>KfL1P$<a"6[g)&=VMO'lI_E_9'6\d:g1sir;dg`R7\\-NS1*\AAl7u.lH[*C$MX+%`Jf)a=NOO4DZD)*Y[CKZQ%JB'9nc1(UQS!6XC\%4Z0.ri\2@6ba!.IUSYnFb&R1DS=.RYpU-iCfjMZ&dnV6)%cL;`YJ7K,m2Dgi"%L5Y;T_YT,\"3Cu7)-`O(-6Vm$!*/%"&I"alg'>uLA[JANJZjKnN$^qV*:G4a#!=p?94oSQHXjCKkHQ>(j'4KdPGap1S?XBV>46jb%Z"6XU-%Kl)ci"C[JOK5pfG"GTSX7>Cb)7T@VmmG#P>8A&qaoYo1g"S-eA3DY.!97*UEp#W,_INl;4J-,'%\L+N#]Z+-Egk]h9H_@%M]\Rj,ts?dW5V?CL74^.1VpI%]Wp@:%g1@E6&!Q%[^pII(`U1F^[8fdbRdKpAM6[(MC:?FUcDG<d^Q_M`]8n&ThcsV"BrpJ=,=U&%."ot8/+P(2/k&\a.4sbu9%l%(Mm/@J-Q?Al>g!-T\L`;n9:FM4%fuQo;Z^gg89W6+'A/EU/Q)KI1`&5=q4L#WS3FG0==kc^`:o@f%'$k,ZMeEQL1iFY1N)sf@X")mjZ]*dq3ut6+R27gaf"H"]4\rg'nuI]H>,chQVrZK,dS;57EVd(pdjD=mK`m.8dpfY/BR)<\g2.O@%Td;L+C8$]S]N^3,XPXR-.gG;GDrARJHI\Y0J=P[*j07bdSiAC#:m9SU,rU]XAXnoTR`SMMP)j26pfj)$)pgX:8bn3_`dmSnU[dl'%@/?VVlD#XXK[du=dg'(-R6Gl)3-LY\[aE'S@tGl$8BF>]ghiV+9f2`e#*Fbf4#7-q_f]QF/(G5&^/g-G'`1jM/Pjf5!U``$0QiK2%+f?cW/T\'U1sV[B%F,nM6Fr]Yk["mH<K`;\S7t9PJl7/fAeaMR:U*qr&agpR*M4f@bp/5m4A\V8a5[W2S9Q50%I!s`r*(/:TbLQl%i!$Gg>n2/"l#TC>$&p]In?fMm1[hpi:HNigXRf-[)^X)UFIjGK<O*u^K5)s&a!7cs`J_r8SP?@BcBD>m6U=AJ5mud/a_Ocm`S^#7%ZsrYU[6ojYYrU:?7*\9#k2"l\'!MXIGe;SeX\/1HC3$=Cg7X"P:`Y,p%#5;a&=T9]*0DI\0QPleQ^G'0&3>j##sYJFnL>2]AS9$f%]#mJp'BiXoKVSh%=fnZ@ZoatX7RRP/=mni?W'N'%E*gOG,-`.f(Crr4D2b:c(,;Y*nq9@(7Q-;3UScEG^g'4J<E,JsLW14[>pe0_%15e<G83^TOK3EK+(?_KE]a;a:WK&")5^@J9#r3cOb"Gbm[PVYW7iPo4A&UB"g";+_-U'p>I9nNgLef<_RJE["f4Vl.eLmZa8WMb'%&'I9BH5YCM711`"_lRY1ULdSng7`tM(Ygp74>DOJE<>5m=Ze&M6h7aD(hgm(/*F!tVrW@/WMbLFhFlFpX`!Gibu$M2Z;-\eZGF$0%<>Bl+$)Jk46DK1QeTfM?`mYd>8%%SV1DnoHZK;5'fPsm\o3P'6Gsi7dUM*)1P_17_U0?<7o;rd7>KAs'&qfm$#*Kf09mksE+q=)N%e/i[CZBD"EE]NWW3iN>VU*-p?CqDg+>LB^P-73/;pH+LKm8kd\$&s"g8RKRIm.;%`h%XR1du`BJ4r7]0H&?N69,d@^kh+EbjK2XC%a<rgb5ss)NP0W,8+"3nN,CN*,?gDF.UUI'=8I8Kd\j`1`1b&^q<2(3B)XgDZ<RdPC@c5IH`JJ"HEV?-%5E(m2Q:%+88'`=/j/i1b%)XZm2pB\0c_Y'q[0MV_c+]9ZfP[T]qb<tR-PAa.Z!>YqAT'N=`U9I7n>G")Y7R!/n$;JL]k8"Vl=l5F)Cm^O$/&>7A+<Ns<l%bJ9%Qe9p.[b62@-9-9!MkPtaA:[]8TQu,7m<fft%F[@(Osi(+:tA$ci-q?oJea+820BaX5k$7N3hWS(f[(PB\0_]!^6ll#T>W8e9jH3o%_K3;`//pTK)*mFKSFEP+fo8O=hc1d`P,AZWqu_Y[4Oo[YYa)=*ICHbm3,Rlp?<*/e#^r`d6H>rXWT$eZCS^)5hY<e%cfN<P4S:$<%=jQbWg>b4qqjEi;>j?Si3S%Xr0&NTR^@2TDP$BsJQN<OB[c'1uY5!sY-kXmQV';Tb>d*eq3G0!1\JCQ`g#Q;4V=0c@>$ZKaNu$W$%n^rh2BCH`(hba1RrA;DVPr6=Cr^;7tpP*mfH8h=VLk9lJ'2d7H6!CBP97DEBM(@eFiQ-$^Y,J^h,=^?kDbps@3cTl#P.77:%>@Q#%+ELg;'j;uhE*S*\"r7qlHZtVs[\mPbKfiptKf.@OnSf;UW?CUq$nV%q1pGoh];[C*q-.5M:K_(6/Tn@@RHp<*U^n5CfUGH?+g#sO%PElun^d=Wu^qs8Ie#^uO2JrM/(OCdS+L"$H\G6;$Q@bsI-WTbR6F8(-57^*!9V(ir1s=L*)hLqVfR9\\Z2^tpdp)Uf.o+uIf9rB]%mlu<ugt942j8&JT"(RhpT)OGUVGA9sE5hUW(Q@1/@j;GCOc44QTCN1-#2-GJ8eu:bYH)X_9H$.hiWVK*5Op?&h_;9"acT790>daB%^Q2)_:tPE44F_CpGTGS:Z"&RgYQ)$(n)rolnIOCfrqF>9D`RX0>>K\2`9@ME]CUT;GC=`4Sd/'95'Y,]&)DNg__8b(iO^ajjIT`R%kfb].oZXL$Eo4&aEo4'Km-JY<r;:J^r5*B#iYR+APJ?`OO8e_Mqrk6_mUO$*T-!n&s73/HpofbYk'qm?[sn@6hu:M@s2,q.qEOuD%VgnFeTD@;-s3,uhbKp0S^\Z`8IHa]1rFJe'hTMPjK3*I"O8ekEJ+C(@s3na__Fn5,`P6Zb1Oo32chu<4^@]i4IJIGmq=;_dp6A^n%rMtGFY-7j'HbT3BpHJK.pHSNc+8ksS*r*aE*rP/)*r>#'5OtqcJ*bqYqY7PWo?$1Pqq-,Ls7ge%o]13\r9<AdqX!eaYDmO=N,)p.%)roWhf>b<Y`jIP(NH&foCL^Tgj4Y@%`jdqH[5"hDEG^YM@pBu5g)/G]\2M@70s6LUD2`7?r80BOTC77C'Dp(F_Y3fXZ%K^@++BQI%rYLO$j6P9W+1mYNfX8/LDH36%BJo:b/$&Kj1=o=NG@u6Ue&m>Zdr-k<?miC%Q>.?VZ)6[\ZY$2FO,MtN1m=$DRL^"T,]ED(lrC/>%b,q`$]'?DMH2:I;-7Pq=To[DqR3\%G.Off]253NGUm.YhaCoV[[l#G%mFG<=MH%R8%YVd.V_t)n..`<lbdDhQ\0>$#3FCn0fE7]$%juO/OLc-\VV\RaJ'j#qKXd8nko[1I*g4VpC'i5%NYViAbVDGlBC(dR]]HQI3aI8$Qm&;2[rR=HEHKS<0b`Y>meci7T^?nY/$or%W%MMdQLfF^5m9!3Z$%Ah*:[0u68:@/*4RC*g><[\bRm^(JSEKs<#"Q_VW4]Ud`Chp"D%QJ,D]H%s"0)2q9#$0`..<)MrD&CTU!5]AG%*TZR$X5@-]X=Wa%eF0Mrfp\<,+!YC8[(4E*$5`XAXX>KX1'4#AWkU6#DH,.ncgt-08+5qsk:QS3g:UZ@qtml!n$C>ijKm/s'`@F?%^\a__Mgt<.pO2&3pH8#KGCK0gms+VsDgUsmDgC7[DuAPF?iU+<?PiY8GCT![n,2J."jd1M?[9V[^\kArId+%Cs3+i`m[=(e!e=@#%iQqMk$SQeekPsTX:]Fi/%mlBIda.m$&28dA+Tr<!K_Ua,s2R?Mnot)kal!*2-[tBr4oYKZJ"QT3s7oU.&OMKhHi20a^[`I1q9-PG%M-p&&:L"0fafg-ZgqWa=fjB$chI$-CCku<@J)m2B&)S*GR55B03V21n]0AFViXapq`rd\V^iTC.No0QH>=/\'2QjH-Xc7+5>\iA'%)qWfRf#G*UY-i8ONGEB9CZAS;f@mac`jI_-[;i=.CMd<lj'!DRg:7,>N9fZqha0t]!!g`0?u<mW@kn4$R+P]//`f=AG_To.k0-Y+%I767kgU3(oAE-aPjl:RUF[uqc,.mBO.Es!-1VH>[!W#Cn.SV<"7E0OC`2B-\I\SJ@P[sOGBQA$(CoJ3>]4Cq+ZWhLP=%Z,3/hINn%D`YS<GI_qH!#VYN(j^q>24.*/"_75OnAN]@+:5#H3#\L<9e(8$(TqWVi&>!slM-da&Hk(r#0Wfb\PTY20L4+p&F-5l9"qj+?S`Uo%[Ln4UF\5-^US\p2Zd^LS#u\>HB]cBIUf34]=N,1K28kd9Y=Q-m[8KjfTQ5,j)Pb;R4;aLg7N8HHG+.=KiDk3C>S01j$OM\J/[mhS%1q&!K'5](makFrI0:1M5DL\V[0#Q@Qd=fI(a<_NeU@'L+G/h3Gq'J>]h&ppp[s!s#WL(/]MA%ML:\(W,T')]\BOqYmIRm;6N'g4/%YR\Y45"`AM886(HV8ASJ_Bp9Oda.GpIUFc+*o@Y=g#9p%lcPGIh;NQ%bm_oFhb-$f`H4D1a<E6bZT8a5-)6`F#ogU>A!l6n,dB]K%?>j;XNTWA.)ne;P#JlLkq&6q(`@J,NH9[57>EYG"M1XR#f]\;.F<r?k<2^X=<..*B)&@g#<@dKWD8<"AOEAS_ZJ0qnO4=RDlf-1)%!ebCGY2s[8Y;Z[ta_OT[6V5i9hCa",FXV8`GX>'c]@,FqqIj24+ZhO,"%juP?J4-/FO&u[77DC.>:!KB+ql*C8h]_?lh9P:8\TMg%0aqX+;n-kJ:2CtV<2k"FAZs+uQ@^qA?(e:fR81/4QY2bs>k59l$b@>8mOd$2.a;RDOS>MV)O?7[C8_=ho$Ar*H=h>_KVEZHHCf5C%Xu>D-)Jh*LG@/g@+0sLo+hl);+"O/HMD#@Bqd5m/\V]&P$*A"9=pQIsD048360-uG"^ghE"9MCrbk5:65t_s:=JsfIHM8HVf8-#p%%`r:7%?p."Ec"1c&EJ#J3k/=2Z-;lAR?F8f5q2Ia\dsiKZ"t&1>Y41V#P(hPV/=\(_,r@=_J\5T+u$VG0=pXn1sNNUY5]&a(a@h-%9YO7@'gAs]h"Xq6eVLcO($Z4U.!+"2dQAD!4s\UB1rOH=UqDlDWg5IX\F!?;*`i^O$,rqMd\5&^,V=;TAm;GQ<`YGB<'b2bYO\KH%Y]+XOD_&,,r=!a$n<>-YWZ!4W7kV[NHsN8D@\Lc1:!69fo=j!\WP:?ngp,"T6MXI:Lm@@_(N$`r+o.T!iT2@CiTZNNB"S,,0C79V%=R^OPB8nSi";47$4QLoFphN1iL@X@rP<C1*F?_W5`L`*D!T/(5Y%//!%A6[(%@j,((DMod%Q"s86TE/`,.7^pmN%f@R[Db0rV(9_%MGfng/#)eO5A1;K:_>A0it>X9GLpBbJpGB,/mH&^GFF7Q7Y[P7q5lt:LEel94Br"-FKm2;ZpqG^>t7C']a<hYDQV3<6%(8DQViVk%B-eq(RRD3?(oU'@m$-dZ$XZ]omBUhrDhs7keRE2h\hf78MN1u*WlJmujV&VFC7/I&NRIbhK;,*,Fu'AW?Pj)T)Og1BiH;f/G@:>)%*.1Un1llcHk$XKnLE\a^9@[=$<(d-Vh=>]P1W-C/rsuTZm-d&@Mr<qW2!Z^ATGWRU"5i_:_]%NXJHG.r9887S2(W]@DFSA%U$6^b%oU`7B6K%m::ebq7!Kclff]`_S%DkOe;@,60"hgkk>blJQ5aNUeUNB'h#"(=CA*s&31f3,agQ8=[VEreL41V#qd!HXTIOJAJZC3r#%cs[1J!$g%WApW=Q9(]M>pV;OQ1UsjQG6Z+Lf[2Ea2^g.*I*6E^lkh][(.)[jOlj?.H/#rZ[,g%Nqgq':a1]=&5[iHa.1Ro_iaSR#%\g+"!&`NTk2[e"DFCgR4TXW5WG@J!R,Hg!#E2;#O$_j>=Z/FHNTn*^&P!SaM^@/\/Su[1kWu@C6ceg$RqbebYOG7uNEk&eHg)POt%^B1C#!_s59Mm#S12)&2Y8VNli708+C:s9J"&2mSQTSZJPD'ks12k).9's/,QXV6M?UhCjIHho&*<R;JnY]5q5d)$eMBRMts&3c%'%!bt$SVrqZ<h?>k4[E-4=Mm./i-gnYTH8#a."oZM-i1;K)WZ[KY6AX,+Na@qqV]pRZ_1cq_"Bg&c6U;N\i``akjX9-`&C(t-l$ak2%BVrlHp4`9FiT)/!fa)k>Le/XR0/oX//1nO\m<[hLctXm<d'',Lm[a7s>-RlQj96T3Cf#Vbp&4<;0]-K:,[+d-2X$8)q?,<\K%e"f%q`8#8,X^3Gc#r2*#mKRi>V@2>HuU:0oBn/BC@gl[#.[!nFCBR!aOucaQ9c@XG:"X-/h^Y)-u39$K>MmeRsGXoWMeX!lM:F$H\KKW%)qEi0aWI%<Wh0p9WkVWZ(hePac&oPW6-1K*OepMR"<K/JX8#<GiqU&e:uW0DYBHe*\Q,N\Z"R=a&-H'q-nDlf;4u(Q$T*V5Ra-OD%4>8F`(q3OUQB=W:T*F\Odm5.el]hRq<dK7e,J=MOogQ%XBAhQFE)D6h:jB_IMCsQ0caV8JPmb8M3#FGFG#>Jl@!A(Nd1nZKm,D;$%&FuO2!`sDfLGMPAgk.4[2r.&KS%aV%<Hp";?U[JRBNi'h'n<sWh$2^JT^OlD&\&7h_=N=WbF4=DGmZWg8!iQJ?qUW/QE-,0%3?I6%S[1`E/4EE/.,Z*fZ,Z9IWrWe4#:)a?QRu+J5uD&fF5TC4(;>[Wq.uLd+OV'CN)L^'XW,:KlIq0Ff^MFPhHaP+Olf&9^mn44<'&<9%@P39teDa*K5bii3'T-CKM$prMMVk2FPSkj"VgG:,P6p2@EfWlW0]gnuM&(1TpQuS=hUS,"_KTQ#>J6%Kpt8Xl+(5DK/EGeln+9X%%ci,[g?TcODdUP%W?9,>nAf<6tO@T]EcsaL4!YjKRJ6-%JjHC[D7AFNjr-IX7i*2]``FNouMM_X6*@G_3/PAQUGS4U6jrjE>n\aFM%Em.7G$Lh:d>B:V^k6oFi1XMdpP)h"S#K'7,H!W8Neb1!=FB;'cP>DV3^G85Akq_OE+L-\.pC:7IbYW5Y2Wrmcb2!>_p[O?"WJD=c%VKR'W0]Q+ZBUM9M@1)'d,i3*NW,sTS67Y^f%6e)+>p6Q2ni"`dcciX<>HS?@1jZ_M=_$tANL"h:KnN^E1jp/sUjkk]'(7f-UXF&h%d?8^/qR9-%?JouT53$Ab]YO39'JcZia&<*f@1'Z_k#79+:K69V0'Vp<!`e2J?s(^]W!Y3#K!)1L1jFT5B3l8A.S/bp+,C+3Je5H$%:),a:Xc2PW_#9P.UI2H`nB_BHG7bbRCgGQIKjMr6g)Ca_&Q8"%cs8<]VqN*'@9]M\];Y@f?Idp)*p!g)p86Dt)5?s39hlRaqC^tU%Z6G@p)\^*?ECTUqZd$?8l5NNE175)UkrmROU:uEG6.Int1sm!0NSm=6Of33"BhLKceMk4Zq^\PX0dos^UqSQ(Gug5.I:LE?[H4-s%Bpm(<8+g07hMs!e;Vsp>/qU$?]Z)uaWc)u&$bU6>)[#7EW;<BOZfsFA4Zj%F^(Fk[JWK(8K*l'b,jH>^V9ROYIA=QQ)ADd<1tjpH%l5MSR(fYo2'N*a]O\`:Z-;lHTBT)_A`3K`1lFW_&%cTZNh[gaP3_&dJTLOOYhFI6E:^3O3!E7m0DQkDO)fdC6DX)Rnk#Nhu&$@d$%Q>,\/Hn%*mBr%.,aXP@)r@0JU&I>*2M@<_aKO"V@`Z0OtE"J]'fLcCFatj/aJJ0KPb"B@q2coFkjF2"2&4Om4f,+Sc_DA%,IHp"s%00X8LLR/XBJiMgHP.X5B)WmQu)F,HS#SrRR7u5%V#,VorAWDO$#"kOSj+@-$!K5gQ`M+'dhDpnRfYE/\CHU@/=e[W9K@9>%QHe&I%.15^PY,),onU*]%kYdtn-8+`@V(5,'i_9bb=U:(Q.!2"'Xtdsupb`C9ALi>$id7U8U3X=r'JqF_5eTTTa[a_Q)K?Iej<To)9$0=P%hSn.<Wn'*:^2,p0ZBZo5KPt>O-C:=G;]-N'MJ-u3(lSg",JpfJcg-?Y(0XYW8bsF[^T?R6.LBFA*<QuX'QdifI*RF+V2.?K>#%#t%F%jW>#O!Jras_M:jdiXNPhpLoRGPU-Hn_iL8A8J$KmAN/csKW?&ouleX%P%P*9,ub]]Jc';gG&+KirsRa[=G-nt6Uaf>^+So/]iA%$PTAud(D\T+LG)jU_J4)9-,iP'a1P$GeJ]8!QCA<5X%EFf45NE2la)JWp/BqVNauL7W*GANJ^c#$*$OhjH+S-U#kT#RGDH(%3pih%>#%sS;$'-X#%\,37SX;q)_Y#\]4+lX]$ef9?pDaRA/o-46`=6?bReWsJD%lXK=+5S^hg<ZfMkB'%Hb1ZATbYC5XM/m()08(&9?Kq%QRO4hTe85Ym6nd;l=7c1>&Jj'C*XFj_eV7u'9%aM+R)$u/-p0#(X/;Cj03)\9Z0Q2k#)9sHJ2W@Gi;spOt0.FfGo%sES:aEJtO;W%#f>4j0!9kIkrR')5ZHl&e#ii9MsdDlkg"6>KjaC2Jcu@8/n*&5Qk:$;)@Zc"FG)rCDWH**4AI4tdLu,dZ-?%E'=7mci'AN]^oG35%ZM.EXS>8JUjBYXEL+!YL,D!XfF/\-J4bFp$LHY4J&Wb:6dk$V8[8:%+Ukp[&81X4m@s2ZZM8]UnQ48C7g6O.K5>WbeTls%G\1NF5%4L5g:7X$UgZ>iKrP@Ya#iUh)eGpJeQZ""0XMab,Jd5NR$)?[t1%9m0(+,Kue95j;`=Ca>h0MX>$<Q9qhI#=pHjQTsfO5pc5'5<?W%p'Xr6>c12[T3R,E?;C7eSAl3Fg9pcGkdFWgOWR&!6AEGb']-%0ID+:2+L1Z8B:;Jm=5jt<pn9%t)'jtH"Bj70WlkrWBYR1718*9E%kYL_a"ZOA3O7sHA[m]M]PWe.;,nlZ"Z=NWdY8&hUTWq:WM&AWnQrhM:4F=<)FX%U7Jf'f_ECqJE$50>>7tE1^C"4T\`Bk,mX,G(S%XD'$'fq;uN>_cBg\n>#bXb[S2K]^L*:rlAQ[$&!CP$CQ?[PT)-i)2;tPY??gNY;.&`)7m3;<fL3A]]<M]&.f,<QQ#/;EF%h'ab@n%EOr(&WY-e\hb_%>;(0A6jQ99lbaflA+;rn+pj);)ac8B(TW>.<6*<e#(@9ldI;!s%gY<qdacXb5MK5$,O-Cn<8/FT(b.%\6(qWZN%='<(><RS(BQk5!1CScY@BrHWeQ6i_:2-W?m]JN&GbIo5f1=@;1W&jLL8W-SR5Dq:&f!_//>H1jaAB?coPJ>Z[8+9fem)"lF[Q]lo%bHi%=OmEMs@$];3?6M&DoIsBRTQmmUN=&'t!iLgNe1(kW!KT%m5"e9%WY$Y;QL#(G^feRZ$E]+e/\YWu+]C8:j0-sIM:)U)<OIp$%Q+@^@(e+/]WeSD7dS$D+0YC:3`bVm':U\La4Ci=kkkcpoL<,i/PuEK1XAeFgn45tHAD[b/K$L-BjMF@Hn<(;ZU0Fa^``j.o&52(Y%10UrFlAn57aju_'5=F0)R!VlW\]'btD"Q(ng%TL_RR#Dc8&/>L6)S;AKTQodBV\?O?./4Xjpk;^0KCFR,Gn"V#N]Xk/!WuI\++8=%3<4_Ne#;r6F<>ciR5uF$dY)m0^9#i@O^m%DmjK^rMA]1BXDQX3B&.-L(#,#C'G]D%gJ0n:%^e*NhOs)_BMe[;HB67_ck9=i;nY`D%j(c*l'BY'jQ691<=XC)ANfuD!MYBb<kG?le1,7i5_D()J<aq2>Dtp_<K)M2e*jHomL$*aaFNJMl5]e1&H<'6:D02NoPgmb$i0_b]%d25D+k)uU')EKVu<Qti#-Bn1+?qV!T0Q.i0cTE$2S>k^P&l4,NG\BC1.Ju^*g,`9ZFl'\datT0R<j!Sd_Nq[2jAY@=@U*Fp.^bSM%\d-m1BO+k!d[up9Wtle`U5CIIbB&0t&;.MD't_rm,qA@1S_N9hE"TXLLMgp(>.DXI^ac%7Y&a)Qpggp[]KA8ulLGSV-$/#^6'E4"%IpNc%e:E485r=?ZZAOpY,WKI(C@"s<=('!D1?XK]U$dM+>>(YPRIXAs&t(1"i.C"3!sVI>BBP!A]L4bdS>S^&(/E)c'0RXj?spU4%/=ooX<,!q.N!^j':<=:<MeA2\#,0/WfOq%o,p#k$)NUX/R1=5E*M9Z/4XD'Z?t[6=iY*kHc1\hKod[&23;-)kE5W$`nsp[P+2&O%%8j'_ho!Q&.GIc\?(67lhl4k`0,Od0!\\nlW#]hVO,bpK[C96,_b!@?87p.+2nR2NR4XI^C89d^MT;Ui&EEWjJM@tl87:(0ka+``e%7[nT_l(oR-)?rs:(@)VaEWB:#pkC(nK-VDAKqc5CLXtVIgQ9^]9(h!*(g<4TTAgh%V3(F>KM"tiehO2)e0f)iL20n.Jl3BDJtY_j%.#"_7j;N&FZpkZoFf(1.,A)ZYl@4\!,CS6#hnm[4D/n&UnnCCOpcduDi.3_QW,M$(d+DTuR:19@],oY4Q;BWu$-acImYX'H#N[i^%rL<a^=4fI=,"?UJW,<?<+0bPld;jgF`o3>;W`.#<UePD?;<$E4]FmJT8dAh^R>+R:68UV68HP&CACJ'!XE$nS%@2P0DNQa9FRDuW%<bUf,`/ph\9/6h792_pQnlEI>g@3$g3HIc_23$abko_",Gi_OA+/7_?,,UTi4G2]I:DE7B@`t,(qoCk]4<1sVj?ReT/(T.25Z8Pc%3RB#`2!(6@mp?oh%RHjWQV?E[8Nb$J!GIM!Ur`+H@Y/9YjO!#0!HBjff^sD8PB^F7.<C^\dE5BR9MD0>;@eHTE]u?cB6!Yb>"URG%F>C4gUc6a^2qqM),Sl&oK!o,YKuS1>E*1J-Efhai]QG*"\sNAO!Vh"!a-fUGKh@l9_eq:=>-a]`"_c?L[o&ksZ^XG+m(-(5W?-@<%CNTe36ecQ*-!H,=^em`V^2'QLpUo^M(YDWBN=MXoPqGbScFDCHd.#^/YLm%n.92+:ME'Eu[RI-Z]jI3u:$8b1T=*L&p`$TNgcDm6%Zb5`/eui6#l[)dlVWL#Qn4KC$*cf\GVPc:7'VCB[Q=5#nH/rjU<)&J+:&K-gIr/_Qe">VEJeMJBZ?=Qf%]?8(Xd[7\9aTPA"bEB2%",54qFX8N7.4e:%1p3P\Zs[!,n'nYL!ZE*6"bdFb@lK%0.c_.h;fI7D/\G)@O?2+&jukK!UWdMq^2)OM*R4\Z&B<6s!G=6BgM$VT%=-tI"+L;4M?a[He=%VnUBD6ZVM>K+d;_raE_$Vd5ats2i?!Gfi/F$ob=CD2XS>(\;i>[R%825SZ3)i@*$:)AhH2NrbiVth-!U./D%q1!_kqNq-;j,<lnM2Nu=F*GOLl[Je6s4p;T3ONktd/F.AT07D`jN/-NF8a$g419#gFn57tkKY+']5RL^L/D$t^[O:CqM(b8K;i"&%Rlp!-B?s<0G&hrAA_j0rbA<A4IJW[%ct4-fVY(l0EB.n$W36`,^A_;p3`)-qVMtB,r>9\+L/BaTa_cc0n(b?7N;EO[B5Q/ABp2&8%j7PP"CMhSEBlimcaX[lA]RWl:[OiBiP2"c2g#Y!Sqp$88ZSrotdb<2Jhp=IMV6q11IJDa:$hp:.rC"u1Qd@(?qMsf=kO,scGLVOf%1EH.2f3HcdlG^2'UH\;X)"i__UL$ohERa_le<B4McS=SjBet]&\15O:OAYo"fr.b$]M0::q$SR2T@d=+F,YErD2(pVg:lUm;l@su%Hggqap<5\bKsZ-Y`B<E%L/B&+qW`>r]oY-2:Mr46Ldul@+etX<brFuE2!T5TO*^4P0>%"B0^>-6\@>D^h'S-Xb$VgN$b+s'Lf)LG%-BJ#BVsh-6p<97#4\(tlqeq&$E2^&o>B\?!ZE.UnRqXJP9Z_2qM:f981jsSFVnF-r\<RA=\nH(6OH&RcPpuqLW$iMA;)>pV;f[sf%'WO8c6req[VF.>Y/0q&(!X(AUkq^1_87-sH;`o[^^qskAUdS"1**+TX)@?Qe]iGc)!<P&p=Q.Mh_X2SrbF[^'=k'nC=H,UhRY#aA%H"3G<6;FV^2'\=3Out3K9f_^D7"u]hQ2%!icJ"SSA)km,[;.3;`eaJun</\GWRag2`?M?>''/(Xa:&hZ,=,(@o%HriN)8Xb=tGN'%7ANn^_!UVl0PV#;I`ZW!Z>nbsM/YFj,"]lYbo>%i^gq+6aWV=K%d6c0Wg('fneS"o1eGB\JpJQ4X]hRkR7=!tW&+eU7ibeid*4Up%PI@HY-53+VZs$*[,je5rs%`-iU2;TA\LRua\\K-*1Wql&Nd;p8<_*O3lEekX>H&oo84%A_n&cnG./2tGVEg$E"VQj$L*T5r#HlF3%'MU+KYGbYW\_U@d%CW-G3M0?jb/RUmJs=9C3c5>"(5,S!.#B&ML]*=GPb`:Dk8=p&_[_rg+(L#CV^d7_$ku="JjLEde9&l6['`4@%1^+CV\-+pOj9ub5eN2cgjR`6h8tpip`q9G,&=YSh76/;:rL&e!4=G.:43uYi331t[(Z)FDbj]cpbrM"]_^D6/J&+4BR4BQog21[\%%m'KfQj52N51?]I`Pl2``*7<qrsC`Mm]XaM0n36SH;M95STh5lAlM4gG*-c%?^Y__Pd3r5Jr?_0\E9QB'c(&L;jN<8e*oO,D3q_0%H;A,&]H[b(7Yg,+8GLP%/d8bnmmF^<3Ie3WFecEBk0i)$9WO]gLGmsE>YBZWp//msKjHb>@OnHB0'/TO5$lY92,736Z=D('4.JU:%V7OXtD5$&4WZYh"UsL\FX`l-K;tFl5SZ:^"J''EB&Q)X]WjpYa&sgR3M^;1PijGqH9-84*]6+Hi;"1IqO)@#L(,=]=o@FnuXtf8M%1[HftUHX%e@tc_lFK?+1G&_%"*-(:(NXLlkAG83I^[aJahg%$2V/-&>B!PM8hiE9XK7Eg>TD\:Fs,;I+(]=0nJ,6(8rq**QqU(A<%p\c1]k<%T"k-r)'eZXJ_MdQJ+B><r[j.C\`'2O#PiD2Z2_2j'Ch&lX;>Mo1KIsC/Rrr112pmZbXbQ%A7fDk*Y?iBjTHe%T0n\;bc%pu)aUs7&m6(d?*up_Wa]DZ&QCkf3A2s4hh4qi,NClRU;1r<o;<TE!oK55WjM++Njt:H\?%O*p;"%m9cUd#E7^p[?u2NgIHQc%#8-%s6qCcZhQ_3msEski=E]tPFqh&Ho-6)\e2Lfk3"*Vq-iLJpV-[pkJ$Q\Dgq#q?[MM<?i'>+T)QT:TD@9_55!uh++Nq]%tEpd++!.q%n,;21hYs+]IH0)^qR(8<Mna\r+"ao3U%.T$s1'i?TDnK'5Ps+u%X$gP@Bi-XT)[ZVT)6g>htZ?#^A>7`5P(^I5Q1Du55j/)*dcna%+91F!*r>*T5PX0+hXc<M^?sa[I)F]FqO0ABq(#hLLPtFbR,m^bpD`#irc`h`j6oo*r[E4X1.LIrkf/[us+;D@pUeb$o@qT>/Tg#'%?[_4-00T-\duQ]gR?'Q.p]DW8`-Xj154IMi]_hZ2Id=UPnV4OOcW@m?cX-.15?N.P!j`&rqsJ[C)8>[:++ldF2`gm4Z[WD])7gFT%1N\9Eo9le0olFJbk)%DI%K:bI;]g>Hj6q9_,B%r/"0[4+qd/r]GJ5'pq1b7.nn2k_^A>786CVD6cThF]k0NkAj;Xd3c[PhN`1N(q%rd<_S%gDrcQon&Onm7-ole_3!JNnq%dG'G\\6o3gdp\!GrS4`tT?f<CVIH:tR>T+QK9uf@$t9kE;oRggbb#H1\$MJ"nO!'`Qom2?%)#bK3r,U`Ad#IOgd#C6gr5k!k9V28j.OLc'0a[aq`8m&)J3Q9ng:+i[PsJ)Mo;4_o&<ks7KZOX$)S-O#(&7A^K45Jho4S+$:FmiD%F+Td4Gp>%h3q2=]T7<*EjC9G^+8G=Ehu/,XOI5sl=24:O;DIG'_ip_g878PQI.?_[J+[lV)oSB+pq[J1M@&mPM$`_8;d]IN'2Ldi%aj=#FcQFQc5D,?9Mo=]LDuH_<^#:7a-G=hPm"kt!LctG,:O_i%-N^c42FBEpIi`&SY8UIs$2dA(_J9!IU;f9(U2%?M&"e+=rF%.m%9Kr.F8&MDp9Yd8t9T23bDP[4+X`"`KE>Fb:`ZZ[Ir_$/L^Yde$d-'mj@-l3ep1&ZcJs^rQ=bt1@>qm5!`h-3/,Vf+HLe6N#'9bhD%s)Ds!_V.0DM>%-7pr&@,IJ._(%umf\KP!r<Nt@L@2(i@$W,WC_;WD\C44JLn+2TgbP99V=HNQ?`eI643q"%-cq5fAYeG++-T3X2I%)2ZIr9h`95@_umXYuH^4i&.UUHi"A?/Bla6++6WjX.]C.]0T*lJ!-1pCAdu#Wc8aen7N;r-U%to$'UmXnQ5AV+oEd2,Oj$sO1[9m%?C4(mP=NC_b`cC*e2W<,,1Ll,G$'`^\+?hK42$%J.hr3_r=?R"JVW,$HkM7WP7O[\Ql>uCoB3?e'7TBBG$'_7GWUI@Hi*<0\,UU/%gTY!me\\,95)5^s9Km)u_J9#%KrFOP]U_RLnY$3FgtRUW5i2F!Q\B;[-3(ddh^Dt)W=O_tKU@/7`+0?8r\"@g>eQ]+LV9884p69T%eEL2oq)@ben)&o2qTqS@PJGM*4s%X1eMrBlX7:mj40$;m,W.42:2_5+Gn&=V8BkArp%!;>Ig.V6oCap.-]:QW)IL"`,AR-j;<,?<%Gkl-(5BJ.&qDZ.UV/L_T.ft47mmF8hr58I.fROn/H962HE>9-cj,^Mbn*NKH,G?'mV?E/*pbR^ti6NMm6(4Id+,(UDh-g6Kolg2]%plA<1SpEJnq@Fj&=1n5;?M4.Z%K-#Kim2gui3gB+0K&hhWH%NQ=H1WS-9j2&-WT3%qS:p3jm2p8eSf\(i6O=erd<&L"o\p>6>HE]%XN&.gp8IL'NE5(fhTd*hi,/\4lSU4?JNlRs=H,[A`7sOTEUe4>58W>HbhWMGj41oB@e.qi-DJL%)GoH>-H)N%-Jr!_[pq_i]R<WU%r"BeY<o[%N#/$LFN:;#Q#[/%m#Neg<a]kL,">q6J1K*7]hTg>:?$O`-O?Nr"^@i(i,9#,-#8/onR&]]?m<iL(60eUL@/S,]*+JJF%LrkFrgL2u=<)hlc%pBe+LF=L#5Mt1i`mri>,^VT\%pBe"#OpoWUDaZ7R&P(]$*!GBM*HX%doGFLGrprOK;nCf%H^I[G#XIIjmA!6%>*mTkNZ+P=gK@q2g=qD_^&JjMO\llmFXr=2ZEB]CXbhdSE)Z<NP[$t)%?p/'R@_uUl7l=c+!NVF2qb<,JO]+b7P-=/\GAfVRObKs%OK4T/4?W(mf)k64TF"*H6]6ilbmtEW@jrL9"YYdss)c!/0q&au&2Q?H00:H]G=kBtl$Qg5'R$0OUfE:*;X;`M7eYm0Ztu>]Ac\NW%-#a?U"NMj%BIZX?B6eem;CR!0Og_Z]VeYW?D;X:,Z^rXV0J5G8-mt_Q3$:+0oIr5k-7>$ETE#X'Y"*D7SaKMhFq--pCu+Eo,q"+U%4lFWl0>LoBechqQ*UZ1n]qhE`k`Hnf-P4l4fqP2#&5qf1aRB8g(6<G:TmUNc)kC-N5Di6J!Z?^&(=\RB(Te7iWj:'jY-"?K!-(Ig%Jkp>U9#<MVF&NE=A&qBsE<?39J-$F]:Uc&QbbXFnmYt5.$qQ%J(i+dXnq^(A>5_;++SjBYol&%00t@0][K9(==ACjY^!G(#)@"#k%$!e9,N$7Gk>/>cKP"^e]S:K*t$^2)E"3.\+l',YKQ4##6KRTaFpZQ!6Tg.%Ib#%RYCi8STY+4pHP"I$GWY3D><fXd>eP$],BkC'h%*s!o7SS&.E?)+=6kdJH$.BG-NdMV;&2G>&ROcOi3l0'"W[;Qe-PYTL98e/:9$.^0,@[;WB/tal;cpD/qV?3(Y'JPL`p0A1,%P=1N%([+V40"!0`Lk3_aR"KFq0;0EGDARsMO<u6WnYr=,7a7k@"JK6qidG?7WjTY&e?\Jc+9\*..EVK+/SDR]7Z.o[7DU:KocR*@?i`I>%XVGHB;@>X!=t2.%_E*"-WY4sApf&].Lr<?qlNuoS,i0*gG]TBW>F:t$-&g35#bb7G%$jQsK6+J+@Ptf16^u.r$"`%;F>'b)Er&Jt%H]=,W*oIBJUu6G\DC0Uu+Ku30Gao7F=n4ji`T%)XX.^5gP:16&"HP?ac1!\u.gIX>4AJ"/VbRmf:.JCZk!#*+JQD#t<5IU:G_+b:%6c'<rjMPJ^a6@OhZ>UC=:=h=CM4rjI\jfHp-[;-kf=iXIVe`(Zd\&SI#+\.XTK$5X`<$CckuoJ(b_i]_*`D)fK]8eYQ#3*V,Y.#+%MUN5<OW&^!;=oNfj:q?`*62&oJnmbUBm@5=0Gj3g?@[ac^]kFhCii2P,XF@mA-N7k0Yda99`R`spCeh$hh(_3)C+Q<geY,84:1F'%dI]m<DC!EbKc>^C6^13h*O94$\dVBhd\l/"[/b].,.>sN5CKCfXW$],chLNJL&LXsO]@VXp<s[m:"H2GT9)-bY9^'=+;J-V.^5P<%83NZgideNgl=XWFKDbp[0ef<L^jBNcUtd?qLSl`@IQB&#1tYSX[c2*8b`chDqGL`dd87"/^.Ac"Ue#tSTI1,=*'G+j:M6"Na/:Bf%4BL02-eJY1lmEXn.<6)oUs'7_<+%qILY<Hl6dufS?&&<"Xk?XBUk+q5FGpsFd!J;uAk0sDNs'V0<CAMWjCtW%"i1Ql+C?l[pq=uG%j@dKIKk;"ZC;Vb0XlaXWJh\S=VqrAMWkfp#C=cieM:N$H(-/>3P*JE?)7,epT"p_FArrj@4[<j5e='GB/F$#M9SY\nh(onZo<6Cq%^+^[.cig[RTM.X[TK5Cp,s/sDPD62+;TBW)Jn.JLAO:+!`A<4*1lP/'EA/h<VUQoCJ>7B,mc/Cb^M,MYB+ZkWn0D^k$:3^J)Dt^(%/5NKD8Zm=r%*OkNRUMTi"c(f4a;Hs&cju*iS_tM7F"BkZr0G+uO]EIij)e)3Gr/EXSKLOV<YZ#\823=7-(?pr1*o@i(#<#18d,G8%,ZCGA&.+RM=a%@p+[VSXe8B'BW;;V4@gF0-1/5Jq=Jg>hH(SK4]#H,>L5I<En8\u\PUJ*]!bI74"J.Btkqc:-K/1D<YkSTh.FusM%O8L1a,*@#R>'ag',FQCqO=E.6e);%/mTC91WsAp$$g1Ne\4ULAA6FFVnU9T5!m^Bp`d"Ku:bdbG3Fn#=:Nh;X<<tY%k5rm_g1eiK%=2gm']tHcRSF5VuX+Xa,/!94,k%a-1[hnCK`fTO5lNFpH3^GO?96<iuO\A%P/2VtX)ZJ0,ce#^'Q,:Q[R&M=n=.i2XBOTDhW)p5t%d4'X&1FuJO"M[t;:!&)s;%N_qcJUHXE&h8U@YgnW\p-XId?FjVfX6HIMGBR7^mUa$Ii'TR&5C7ai*'>R1kdk2aV*hu"TjVk7d,LZ%nep$]2tDQr`:u6'K^oK(`Bl:9LXSEXC3Ns=Ts-$g&PXu3PsARfTIET[<[X!+Nf&eejN[sWUu9-2MJ3ELE3La/HE@o1=9_p'OJWRN%8$8j:="-p!9kf]K=?bcV9!SMUBhF"geKZM38$S<<^+lQ8\feLm!bt?!>g"%CYED@?kN$(R`e22c78Y>'VBcEN^I=Ne`"[pk+E<UQ%'PA'gZHX&A;bF?HijCjbDJk,(7&dS_%1kp+Fu1UF0LShpA9@(++IWpo4-W08=&A?"d?L^OY>I2(`m+lgX:s\A[n\?G.CI#_huqK8%j)^Haku18SO<fo"p_-L!Ji*]h7D"i9\I5>bWI4BE`5'k0r[8AC]pF8<JsHec.V36`#I4FbR&4Ec3$pOW;qD]j=sfo>YZ2.ig!Ha'%iMT;9+GM^q3&ecPU]P6;9$;a@$u(Tc"M%;O9gOr]&4f`I?!tE9-^*"5"XMj'XY(>n:EWAGC][>R3hrZRV@:k:bXp!dK<i@)#-/q6%1^-;X,8d:,0gt%Y$!ae=.gV\tBaPn64,BaL5ZtH\Mo<2f/[0a7=4%7*q.uTfRY'Pa.Y0Fa,tf?^M5D:]mYP7K,ZMK$4F/UaCW]pZ%PL8MTqGtEIC%TFB$*5Q^<?p(NeJ4TumXX5aP12":C#]0$RPj4FBf"SX&NhsJj=H&ERaOkj`KXr37h9)XYUTAXNU/;(YUMRLHM<Fn%?6'X/A]/^Rje=J@djRh&Th[FOh5/2ik`Jf$@%2bFTW,<9JtY_M:V][Rg0b=]"#ipU"[P)D@%n9I=0fo?Gi(eGAPK4"AIX.7k(N]R%2H*BuH;BpcW^tK2C$jCZX%_.-omd.tlIlQW.CH=a.mAss.Y_k6heQHhTc;S;_ARrD$Au>BMBC!7As&aVEo\U&P`uY0;m$,W7AJ7!%X.\>!4)18f3'fR$0%$NZM#km9s%Q<b3A;F3N)Nn,G+>Xp?t\7:-4m(WP").+,oJ1f.1P7#.!:dtS?h%lMp3u9!/+O[knRu5YYBsP%'hK;H'Z^397TjTELQ;nt'RkQX:B]@8gaK'KVMo=`Sl[78nW`?kn)a5$);CUgd;(<Hd;Dpf(toZ5M;Q4tVXR:S`hGk>@@p"BaM:d'%d!07Ag2tt)>8_*Ql:kT,E'>9_\SaG6T&`[%]VRo`@VuA;e=]OXKB&/.#,1;BZ6I,&`$8igVsU&9]?Bh?qFj]"<X./tjEN]HB#pk1%;:Yf1.EJB]k!ee!'\S^U<\L(QA5ep[#(n^J;pa`#K*9sD1THp&Jo++d1A`P[D+]JoM+8iEO-W`5Q&)]>,oF#RLkS_$<l6gAQagim%fVZ%&V)7rH[s)ts\g9lB(S(ME/j(:HB<o6tFfu2\&Me>Ki('Md(XMI$)23KN->+Y[61JTD2^/Ot,"O!#L`ga^7f9h/K*oFFDnQHF%]Q[B+o2O7Dn(RZOqs8OrAe$W7H(S6?=*8_0F`hj"e)3,aCr$m@;4FR$o*R6lRgK@_<H+E;b)nWY9a^R;9t-YI<)c1n*^OYC,80>J%oBb3W4bs7g2HL%s?kAe;g0Nq"M5u7ur_0EQp,[/8W.P3:#SJ)SIZnd-1$Upn[OmT1C.&p2J)E4J(`Ij#4(q=nmboKr;f,N(TURO1%$9*]*CT9o1;I&^[>).`9E/kk$1+Mg_WqQ2)k$D%nYZ?qRG!8N(=hngQX\GVnYNbj7Gr4gb4MQ1]Q>kefUUkrPHL8YJA)A/b5pA4P%Ye!>.6#:jN>X"9roJ&Rm3oI.nj<a%BY<`5b5F_Ccr,'an1Q&*(X.8*j&Su/IJN5J8mM)%?k_7@!J2p6g&N_ck^_CJ?hMa1<aIKD[%<b0"q(qO;k"TrAb/SDjU]r[kjZ"V6o`-H<+:F<,*lX1u'JuO12bSq0gd>q^hYu_^b_/>$P%SZ\8KG;7RH.l.A2SDpg>c=#i;a9Nr%LNMhK"66]-_(?]S=50<:CjPaO-cDmkrU\0EIc_H]nG;a#hn+@/l69g=oTN)Lgui"UqTYqqr8<2d?N9$&b;AM7YPcPHrr2BchQMG)%bNn%-?KS:hlhA,BrT9S6s1-`FrDT>7@$sJN]%6]sn%\nB(LDUQ1D_/WFi)i)^['c177-kMHXD9gl'k/UH3]Sfq6aO%qo86+og?mW%ebUI8UmYgRfD;>egsPKN>/+=1V_l!r-QtXLffacG?=b2+loq5hgLtaP;Wb#P3."9(qpK%fRb^'(=3iPkDOTCJ/+[YIh3TP]Kf$F9%/b9sNh><L`%aFFTaukl"p\ZemVqF5Jbk#OlcR^m$m%-d.qnb,W7C.>QR@!knhD#pk`lCbJqCH&@@Og'0h/n;QJa$lOV^Gb&['[A#%WTe9cUrdjO8N]!g;8Pn!'j5K)KT_d=;3E&b3!D6:.BBB_^'mAjRL5cniB_3..kD5B3j%YFBf8HVMTZQB*EMYD$6R_;'ZR46lJ?a)%FLA!>+qgB*9X77.VA;9D)e.8:(6MS.`M`'Og8]"JN(=jVbgqVF2'Uo9ddl7HrdG[b`23W]8JA;,"g[M5d$e_9Vr=;'[&:&7HVfsL%q\ft-;%=k]>PoM(V1FOnlR?GLDaMD#2H>]5.S[fbdToQlhO=CtU]lUmLFQm`:4h5";_9j)1:U%1>na[\.CZ:1+Aoms,%qEO`u^.I%a;K2R=lr2mq(?;=9sHB^2q<%03Dq6ZCJ>,3fNX]VS=..<ph+$2XY<JQf]Fg^9f:#%+;Os/;[lf3Q9,@I21.r;)D#e[&B5ORVaQ[E%)+j+A+un+^-R@#J^K5KcaU/G3;pY4aS#HB'-72N&)KX29Waf''kjq^VRDj@@PNJd.%@O2!M[BbUAu\.d^'0q(R,=KI7aL:s6)Kca%_ip\?OfD3V?BWP)<9'"6+e.C;mMl[bdBt]ReY7,Qg/_G6E1'<`e9AaFApRA12YMFeXU'?`F9YYpG*c!-b0P/6F(iJjk7KSImT7Iq%N&Wu")d_;Gda5:smdX1-g\GM]>_<N,8BJ=0j9eQ*iB:7;%Oq;6FsCU\6cpaQh(VQH853O@4ZK`7VQDpmLQl'1Si;k6HDN4//i&tU%e[mlEE@-Ij9YMQ\q`olaotk<#a<=VXaZN.V6V:']gmoG51C'Hj;H*2l>U>0-c,'Q*:(F79(HT1U=32WY(]j5!\n8A]3>,'sWHP(5%glT+h/UPC2L-2TmNm%(SqXo]^I\O%_<nL>eCHYHtj2/XueudD:4e'XekkS#a9J>s,8P%.'>e>VKdjWi9@*ZE;U[L)R&lPn2:SqC?%baBEm[D2\3(G]X[+iF-"R9RhAIg+rfQ9!E]$1D8F4d=pAP\WM)P\XgT]Tlmu:kfcaY+77Z*`B.hA<^kR0PB5c_nDEnO"&ZnF/C`,%Shas8+i>2AR4"57)s5@obKQB(pQ*UiGs"b1APhO5s#c&so1mH9<BpN_DW]/)A@Mm+Rd0&jj]Z-=g_7nL$'5[/GWEpS'B[O=3+^A<%_5oA(;N*s\1?FsE8Y&/Xp:gisCUZ!1g+`?jp]'^m)4Ya750TG(;Qdip42G_gj59h7+5A2q;m+rG3V+#<frZ.ld$Z])pS!uE6Q*t8%$-K[U\i8a)O#Ou;PWA=WrZVl:6Q&Xd1LH/_mD%!.#sXY?R57Vff7)eFCHqX:1$.,+baE\HKHJ?U5e2&"F6:Ac_@L51;m)\1SG@1f%i?,3E3gAU,S9""h[ZkP<@*UTIB?-NVB)GJ[b>PLVO=0s&L/[6Y(K%?kaqML#c914q5EnG_fDbQ$EpX,3rZ^LKQf&07Pi7F=mDD?&%[d*%jgljbi/tVQ")4W]cQjHQU1Okd[1YpddF6:/]_H.a>Pi4]J0k^LYL,njV4Q1%pDj+VQSG=PXS>jEe,:Akl#Z(491)M=ql>5Ni%EX-[JD*6c"cFhuf\QaercJ0#UWYn%`$30P/H,B$9+d`RCME19%T(!Q=E#Wl\K6b=Dd<^f]#L&Tco4Jm##sV@C`16Wn@*ZD):\a`@%Hm]NMracYb?@XF$?8=K]V@h&/adi1%o,"P'P2SJJR/L>4-@;?RJ%dR3pjH`+S+2R=oV9VDrkk)mG$[K>'B=[,iJ02ds8G#7$)7s5%%MMs,^h)e5&=3krFER^2cI11)%T4u5]a+'^nX(BcCJ;`nQtT0Y"(8t0W6)Q/#$dimL/MMR^b_W<Q$l(HR.Db`p5b'M<45?ibXS<]%'s&e9NGjs/YpLC<KK..[_WKblnVcCCkM=J(3fU,17W1YuR-H-`).\Fl8)Pi;?np1fHi:0oWfW%`=A/s;"=4g^9c2eSCHMDpr<.>L%;m-<p+rX"u,ITBIHf;N[ICF(%kA)(';8PSr0NB/C'FeN`C%lHg"m6aBM1NHLRWpC)?YUN</a,jpUunla1$PQ,)p`RY3'?G$kn/"[%,IgXe*UE?oH?.n<Z%B\h=_=T=32u;d7UH@7Q)VqDN(lqE1GNgb#u#cV`sGG)hn[]/G%8>p9U11)h`NaT6lkJa:V5q3)t%M=%4>^?%<Fu6)DfYDHh,Z@U#pV*grOBh,79@n<3Kb<"0p%aeNhr9u#'m1')D!"c!-tOb]uOhGh;csm`Npi0>S56?gndWn;IEr'e7;]Jc<Y/k%9/p5*$<\9eX"VOe`DGRt0??d"1.CVn@n'e)jF]o8@OD`[J/O4)^g=$24=d??Q+^-Xc]6>8QdkYQaQ01@I_V[kRU)9Ge><%K45"@J%`_5DD0PWOZ1CYfBZC0tY2E_gNT$e1la\:6J&,D>e[#np]K>raAV+"cm.p6j-]4fiR9G=^Gl[_2s9Z&B%S3UVbR7Xi"%O+j9I[lVp%>d/cl8dgK4Os2o78)q/"&p-Z8&$'+0)O\nT3`G/*(eq>RDd7MLU&DtZ0a'"i%hZjtAu[Z54I?:%gqqtBfl>n1,@=do\%L.IcQ;a7%;iG!I2Z^&C<_i-6f=GRsh1@)bJ\@Mp5=M[KfCal0S;f21GqU`8%J5R!i*SL_=%%mMFO$&pP-WF73,X5Bjb$B)WLNBGE#\H"aoTiE%W$I,^o:rW+$R64=.f.i$R%K=kDDJcp*pa*f"qYJ66SS7')6Ka**jgfi2cFY\WZ78pTG,Qu]F,q4Z[aAfd_N@coa"afr9]KXW7QhI%5V6<tIo/::*dIb#e#Du-6?`==0Q)^<-&AjF$*m;HZa0RRG-c?j8'<<FHTfG#OEA"gD2g?(c-H+kU,"8hKI]B?8(PCmpZYk]h4fSK%jY:]+Pp<WA?J<'oZQ3^#8Uru8UtCoqMmGRR=T55(0[5YS.]XREG,?SG@\2<-!b5$??9)(?2p[M:EURU2YK32pJ]&lAlR^F`8ht/<%$I0/J/<-h?R@rBC4*Hqa3**8[X<SSf3V><&AX.\2[Ggn-I>\@j\C]kLh_Na_`IuZb/QoK-e/QohYK?NuVK`!Q>$7%n(g1G&kiDi?%+8uDd9L:YF2+CWBr(>B!`[FnedBDTk^+qjVY++Rf!PddDR+0oM$0%B'7oLpLp?qTuWI,HS\$MLek29Mk?U#r9c!^SHD3/du'A,Xk%@Uo)!c<QY]7I2@0_dI3$2sK-C/Dg>/OG?#A'kPT-;fBcWe(WNee6$:R3[OCGVNK*"8^hbA\+]VY-\BO3a>unO$OCY0.AJ-\;F^FF%rZugtFM<>EL#@h*kKX>si'<%dAi"&3/7-cY:%S(*6h;a'A?ts0nNhi`6No3*f8dr&,IW+eK,4#U]G8o)VOfqCM,m%%U<N.so`?=[%k8Vcu52Oudf@<//3`Y$m41@W_of&KlAhKH#[($,]L9='V5%mEuc&&RN)<mZX2"nqV'AjJ0:i$<?[\kidO3I?&&`Ep+^g*I-W88Pi%a[g4-Ta<R1;3(:#ZL3^c46BHP#KC>D5ZJeE40i^Ka/f`_,]>(1*a@+31oXML-Nb04"cS?f'FKXRMDdbLW+3#53@B6!FjQblYWCuZ%d`i<O"HKcM^<'_Q9FrF;+3A1Ui?3mu+Q!sY(mEV/Jf&tNVkJcc[ed9'*&EnY.&k+oO7.4?ikqUUI[VFX8Nn[JT_&!l\^EO._b08B%@515HgICSCN125h3WDi,Fc95+@Mp@]&i$M)Dds*]T;*0:5=FWOX&Z,LT2J;)OUR*R+Ch?;4nusn3H_-cOP*ZU16*,kkbhn>#\oj,%B'j>"ldXal?*29SEdk4ca&[VADA;Z)nD:r=*GD\^0?Hp5r2h4E*!/EB5QoM>KA\n%k^G1A`1-b:hVoOK>.#-E2F;EA.I$lrNT<QO%1qq+l_@WJG=;/%DbaO6Q,.bo3`;0XX$:'#PA_\b[Ka$_p#,tA3R5%pt7S+?"&-#mo)R?DECo0mfRnSD"Ern82[L_%N=DXeaYTM#"%PR<`Z-]iAG,07<aZC+:BOnD=HX?QgVq@`?gnR@rh_Y*MD2Pao*!g1,+>\rjVdPVZJ3\Ub%]cNOI27t^.N(A0.q6AJ!'OEO`lm?5Y%:DN=>@K*EVJqMoX63hA38R?9d;oV2@F?1p3a/"NOSH<P;8(P6e/BuUA,<0.\XHim'Sml3VO_$5u>V2'JZ3%d:SJf.S8=F]XB'-s'%Ejs0*Q^k+.V,o(*8?Ofc-V\idUjg>J9&rV!AY(Y(L_2ZTU,SC&Jg1X*cK3/p`=<$^nd;,J6tiT*.n'cWIK`4\6o1re0OJO2FJtEA%]\u6L+I$7\B/@P"72ecrf4opd,o5>^B!/-Vf"qhUk3m:dMc9jsCsJ;:Y/_(XmQnq%;@@$0%4R*:D4X'EGlJL`!g"B>BtY!Pfqdh5%oWU7-joodcR(<Y"i=oe&H[A)3]LS1"OJg[M^5n'5LWMaHM!:>po>FR;]E\a4nBMQY";a`BeHfdZe"Xf.e\_.p=[r`(-SksDA4be-%C,jYVQ^hlYMITO12lk:E*H2qc5VO8AN(*'S]VdrI[."L%Sm8Y!J5LG7"*H&$!FRnpg/FNZ`Q(>RAebYdWni@[+QN&36XQo03c&05%<r$4(OCadb`a;Ll`2AR3fGBpLqd)2So#f0;F7Z&T#Z9D2N^$%")Xf[EZ?5f!;;Pl;^/]Okme-k$a@]#&hTWsMdZ+)o('i(@)i!FL%Tj;b^O$el$`Ff;G2krM@?X=J/+E!d&#%@4&7/:NXHT23VrC8lm;2cQ=3=?[=V(Na;][J#geU-PX$2aPel<mBZ3W!3mjC65CdtV.5%=ZgeP,M+&^YaMm#G*B3#qoY(6Wkb\ngrCgF#:*N\**AdYXIo;FA`4WYBF0ulQ093!%.fXKjE'EL>8s`4?tSZeY_hGsOI`t]?at`/%'q<`,gqd-m>[)Mqk06D&]%e%Se[CT+Y_)F?;F*8Y>AZ.43X<ZjM3?M;,([3aB(`]mg"C[\mUAAdhO7k"Z:?luCmjL"a3o9B`Ji#j%MqJno>^P6#!l`n@/Rl@^^=)OTqe@N(>VcOAYU0.M&8$RTHa-$RWQY]j+ibNT@gl$/PZ^+QQA,!iAYNs<N.,N2QgQo&A8ofd+JNY\%f-ZTXF2k:mU8/i'V"e9'Z!_/Yfb5mqo.$gqf'I[akdFmRcbMU=oM)VCLKM2n>0QIBK6;9-Ge$^CgQK:U:5p;XonJh(VUe=p[p][1%O-X\2gZXV4Z[qig*6?X9%A%V4IZ%NS]rBE2XuA5h*dG#3<T0e+Qk*GVRV#"[12?#8C/\V)H(>V'QDnSW=mOVf?Yna0Y;CR"mWq\@%pM/K1Y+,Sm5824]8;3,3`H6,po1BJL+8nQ0o=VrKM0YpE>A<\$%6NqJ9#<96]Hd\!]J!0I_0[`q(%uCd.i"lABjMAlR<S7[BMp:K%2lUXk3d!4(D:I@.!F*cY]2=^VggWIV8:uu#BK_Bd1p;^7>eTr(.H@kGGiM>`=2O]&rOhkp_NR"Q<&U>l>S(C7@m*bhkXAZ01%UR2%R$b]%OumYQ@[-WZN9_NP)`$FEZ==06hdgQ>MV&;D3$#O4M_BnL_Hi(RP7R40'[_Vl=*S`"F"Xu`/3budee&9FWW<]^ZX9sF!4,At%WfJL8"qC]K*fnR53sHo^K0$pdCFm<+#C[Vh=2=/V9?@g"D.AKZGsZE'YkXJeoAioWpq])WSQGC:H>pa?P=4a`2Q8p:S%>(u]H=X&%3.hZ5^TWcH5q'.sSX5Ir90!uUj_ndq5fRVSl_QBM*\n"Q:mOc>9/0J%lSYg7\0T"!)n5q5:K_Ft+;4m^k1tL33am\o(EFf;8FrJe%_FnDp`]XH+O$bJo(f[tK0NHp<ju%[<7gj>KE5?>DlqIL^Q,C][cQ%!/0N?^Cr_R%XTF2,do/<51.8raS^kQd=V]87Rgm8JYfN#'\%)g4]*CWeCeit-Z&NFDUp1mm7nZGPS38CGWBTc8-dQi*3NfGaFgHb4hU45E&D^QWGNGL^@#*QZ7BGKcBT-n-_aloN>WU;AiqIHb0#%;R&>%W#<_9`FY,M`?U]9*8f!X^CX&>4uPrY/e1V,jLBGo@S+UDk@G`sc/R))k^&l,!8'<c'm[r3J)qF2P3:<XpUhL&9tEMmT?bI2%aa13CV]<XIOae*3I(><PNB',9,.b=P@eb#Nbc152h=%hTLa>'Y)#apVoSDJdG4l4#'1``5"@9.mN!Fn3@jrNN+q5j%oPqcn7-7Rh%2jtSu?^o!CQ13:TRlNW\5;1*b9C_n)iVjeVp[\IW0KO`l$NX?i\\arm6"WW%BA&%]&$Br&>RoQt^hkD+h$[+XMTqP,@H]mb(:k;m%7P%mkp\laZ>NKGY*julAX$("2[s#8O0h(I5Z^nl''IqF(>7kE^bY`_$ZOTc6e:'i&Djs&ifs2u(aF6Pb\)Jsg3%s-C:`8`>U`d`F%%\#`>pSJb_pW^:sQ%(?%o2L_Dn9s/^PQLP7fGu2E03W-X0jsH@$J8u"lGo&M@.2uG!IL0U"86f2"^ib8a*,De7K;No5JsAiE4rV2%GJJW!?GO,5iHj`9^'>mfTJ]ZXIY4$li4[GXXquao+Ult\U0&?g>jpt=JTt$YCR#1WMtZk^p*&e>GG3rY(QE+A?q`7/K._s;0;J1X%Ts(rA7[D>;Z"SPT38qpP(p2,?O!mNhpH06YU\-g$4h_s0)tN_mA6t5%<?nW[qO5g!&Z_6Q4d>>$VEBge$dcfIn.jEhA0(DL]JD"s%ba[EeUjhG<L&=p?dT$TK-Fp10M(`Jbdj]8mA_+]]9mr-K>a(p'7aX(JNe,^m=5OM#OE3i9iE?7toFY.f%WRPB"okI'CBVIk4jI02%jrK5VA.=@</ur=3S2.GS.H;`l>sY2&5)CBi_XA4F;(%lA&54J43`2csiID#0m\\W`HHnc1*OU%,D8YeR<*o6eI$`!V\5UI;1=Af*%(f\1J3P;)DgK:cM<"#1Z%T^R1i)/A3kbpL0D_?q;G*C*<]59f+Y`A;V7FLcWmU4Ut'2p@2;Muk#B%L"N\'&RbMHkS]$ghs"\]+0p%6n^#@)8(V7%#U4mVUiH7#o67[*[lO[B?ED[`EB2]B#9=;iIO/dg81-jZ40D5<l_iSn<WWF6:SJN#`P`bIO`1i7mSJTml=I*<41hL%^*%j\$:o;2`m'<\oAW=[[,o=Bkr2K$'sSF7=bP0t%XES.!9&lsePdTi`X,#EYTW?L<*Zr'gR$J6H=>P#W+sN2D:_OW;uE*Y0hiOl%+#hj7\MijJ@m'Q:n":*2`hYsF5C1BC@gp'AG&S_7(9l;chTt'H6eusGS?1B8T:+!gj2!],ZYoE>!*M=.=OVN"2]EKCpDaZ7J=_Vm%Y/GagLadY":u2,H;7n/m\Gfn2oc,gF$!nM<W#ir?X2eV7hsJ"gF0eA@eT2)N@'IUfq0Em/0TMAT`N-[A@;&eZO*h1q/9\la:AU>E%Wcub('L10RO%G$l@>=DgVN31Ek9hZKSt;lLnKJZ!au3O!gB"I\^A)f@Nn*'4:u1Z;;7r\?A&1^;F7YF%h).6%1n,<[1uO\U4@?Z/%PBqKBo=28Oi!jP:V942nXHT8*ei"Cd6Z'*?DC`BRE!2Vc8Ch7"+&DE]jlcs;S4\th/6ie?NeV4Qlpf[&2^<crfeJ5Tlb^:c#/TER%T'cD+*fdGJ["sQa6!g*!>&3qV%;:*4BkhOJrBi=@BtoNV+Uc:h1o."VCK+;07A4gI,:bRHHj.E93Y/q/&kf0^+cK7F'=$i$Z!Yb0%CoriI"`Ljob<bK[8`$t\g5"G:+qMkho)3-XBNO'l:3Ncp:Oii+\jW-QL&1,P?/+4SmB/Rf/6G,>&%Y_BYUiX]&$Me"I(5$)9Alj1%cSki5ms..p;jBLU;=V694uaARK$?8ui]:VF7[Cj>F[qUbJT9sI\Ifhu#7JNak:2b?ZRRG>(tlQqgXtg6(fX\k?ORan)!l8Y0ZM$:%:Wf<8S^q&o83))UM%):K/#M1nGrHm/KHAk*:US7g_/_Hq&MQIJ>@`[qJ3l*B1Xp5,f&D&3HAZ_-:XuBc*!Y3[\s_aEPWN=Fouus^%>;.QN?%1*S]C<GX*.]-4eJq_J4t5"&I(&'(@S^\!0R#Eel7Of:q2RCur5Qb7#Rlj4KfeftZI$&G^1:Nb*r?R533f9>A(PeNg0TO[%JC[YSQo?mBFS3k)F*Fc5qeoNI7;aeKF,Oj<[tQE>C%50aN]rLrLu$hHA6BlK*dcO9AgbL]e<D&74h7$P-If1J_U@BuUc\uRk6,:d%+JbGd__.HtB&jI70cc^nPOD9je%nB\1U@9%-`Rd&nj9jQ/dQgD_O)5"ft*-A*PX>1,&`(Bq.)%rKP0[LgC(>QI*S3+-P4uj_tjj6%K@,un^4jl>*%1P2AF7p7o/c$iF'#$cn6-1,U%d?]RJlK_.FmV6a?/A9N9m$+^LHXj>oi]<iJ!hK=W9"f029O@T[+7:4T77X>aR4;%Ttq'md72Prah9D*lm0E7SRg#_@lD!'Bei#u()Rj6;%hJWNTVb=8ukZ8gJ>kIaLTDXf",f9U31-tb\3M$=)=3`f_SR5Q/9st)DW=l%QOc[bQp"984u*,Oc3Zk]oT?D=f'?6]*o"2c\H4qA1CqcXX&#/Vn.OfNhQk<EF=d7drpCQVAu;RBSn2I3Fe<]6Z&J5lq4biDmIiE!%=T2jTr739QX$,p0[+b*mo<IMmlDk(SBHOb>o.c?XHThYnbphui9'7$^90Us4?h1aNqiWTW?KZEJ">/X[[59B,=`tsRpVaG^iCij%%)=,4)\7I\)**^ULNck*+GtBEU\0VYg)im"#hGeNLh<F!$R=OBp<?k7s4hEVM_pFc0Q0!m=2t[7+9F7pQh&noHLrm6M^,Ih]K3l8G%TG<C#d=#_>nFEDG_d.&_LhZN^-3Ee@L8r0J/^C,\-DZ:]Y!FY"iYT&bK%J6.&NUSSS]_#L#.t0*\4&&JM_-deR+^L6F:3E6="DFW%K_:8jBF4'..08(:7KJht.[+_]_4E6@Mo2sMMTu,XSZ`4eA+\=s$#qJb0HDK!>:dqf9H+oY0#J7eGncL$JuB'D,uS0Kd#:h3SF00K%%Et3EAY_.0EdtUB(%'1%<ca]2aHZN)F,4O];d\I^(9'd3/e[R9LU9-UmoaP!Y@_>#Ps2BM6rgq;=Nq-EQG7'.c.#+!bo(hhPZ<_a%@N'ld`Rm/;aar?n27.RXf_1l#iJ\]?lH+fr53crO(R[=%==^!f>DCM]PU.JdOA`LtRGJ3)U)g?KoYo259]e'j:"4hl6%C7Z>+K8@%M54/o)#cZ?),,)D2H`pU.u3)"),2uf2fkKM3/E,;f)@Q]K!Q^V2/7g:?7/psJ[Jq?CV!EEk=X$5bW7O/^/LF"`p=<@k.(tf8J[IG%6jn&tR5lDBN$Ur9&Wm^km>Xf=TJLQS->%JtH.&aoMLQ1k4,ln7GQkti0u6pd4j54s#V2FM(gp$L*VgU(kE[:5"HP@\m:5#%CQn_^%]<^m2K7]8NF2lS$.*lYGE8FCO<sOq9\-8eZ^:FL*GkB\8^X;d_\c1.bO$C+"#bQPDq=XEa^%9geO+2>$EW,S&g%?<Q]QO1Tolki^%fe7jEmdkAgpM5h[[oHPe]#VSUetX+uPHX+hT7"'$P`4M!Cdg7Y5PaS[lbBJkTDnaMn%SC<m$ec<++`1e.e(/4/g0Z]YmS-^NXH-J%msFH-&hfT<Gl1YI/sdB!hZfD^pnS!F+S!/X/h?I@N*JX+l!kHQ?hu('h8_#7E-["!?8Ji.dh`R?hZal<Fls)/V-e2apFe].p@\#Y%??u2(aY,l,qt_hhTDnQ/p%([l^]3qqf8lQ<o?Ori4T447^%MCfIf&s6qeOU2O5Ku>GCN,EobB[ijN/3el1IRH#JX!4bQ~>%AI9_PrivateDataEnd